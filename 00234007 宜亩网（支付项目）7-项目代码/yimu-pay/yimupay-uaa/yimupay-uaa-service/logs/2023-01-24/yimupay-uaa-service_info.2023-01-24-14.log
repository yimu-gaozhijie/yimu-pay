[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:42:59,399 INFO [main][:] - using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:42:59,410 INFO [main][WelcomeLogoApplicationListener.java:63] - 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:42:59,415 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=uaa-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22220, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.me.yimu.pay}
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:42:59,679 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8bc362c8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:42:59,740 INFO [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] -  [Dubbo] Current Spring Boot Application is await...
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,125 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=uaa-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22220, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.me.yimu.pay}
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,207 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,216 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-starter-druid.yaml', group: 'COMMON_GROUP'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,225 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'jwt.yaml', group: 'COMMON_GROUP'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,229 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'uaa-service.yaml', group: 'YIMUPAY_GROUP'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,230 INFO [main][PropertySourceBootstrapConfiguration.java:98] - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@26357357 {name='uaa-service.yaml', properties={spring.datasource.druid.url=jdbc:mysql://127.0.0.1:3306/yimupay_uaa?useUnicode=true&serverTimezone=Asia/Shanghai&useSSL=false, server.servlet.context‐path=/uaa, spring.datasource.druid.password=mnj852123, spring.datasource.druid.username=root}}, NacosPropertySource@1990733619 {name='jwt.yaml', properties={siging-key=yimu123}}, NacosPropertySource@1806378373 {name='spring-boot-starter-druid.yaml', properties={spring.datasource.druid.stat‐view‐servlet.enabled=true, spring.datasource.druid.web‐stat‐filter.session‐stat‐max‐count=1000, spring.datasource.druid.validation‐query=SELECT 1 FROM DUAL, spring.datasource.druid.min‐idle=5, spring.datasource.druid.stat‐view‐servlet.reset‐enable=false, spring.datasource.druid.stat‐view‐servlet.allow=127.0.0.1,192.168.163.1, spring.datasource.druid.stat‐view‐servlet.login‐username=admin, spring.datasource.druid.stat‐view‐servlet.deny=192.168.1.73, spring.datasource.druid.filters=config,stat,wall,log4j2, spring.datasource.druid.test‐on‐borrow=true, spring.datasource.druid.filter.stat.slow‐sql‐millis=1, spring.datasource.druid.web‐stat‐filter.session‐stat‐enable=false, spring.datasource.druid.web‐stat‐filter.principal‐cookie‐name=admin, spring.datasource.druid.test‐on‐return=false, spring.datasource.druid.web‐stat‐filter.enabled=true, spring.datasource.druid.pool‐prepared‐statements=true, spring.datasource.druid.test‐while‐idle=true, spring.datasource.druid.filter.stat.log‐slow‐sql=true, spring.datasource.druid.time‐between‐eviction‐runs‐millis=60000, spring.datasource.password=yourpassword, spring.datasource.druid.web‐stat‐filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*, spring.datasource.druid.stat‐view‐servlet.login‐password=admin, spring.datasource.druid.web‐stat‐filter.url‐pattern=/*, spring.datasource.username=root, spring.datasource.druid.web‐stat‐filter.profile‐enable=true, spring.datasource.druid.aop‐patterns=com.me.yimu.pay.*.service.*, spring.datasource.druid.max‐wait=60000, spring.datasource.url=jdbc:mysql://localhost:3306/oauth?useUnicode=true, spring.datasource.driver‐class‐name=com.mysql.cj.jdbc.Driver, spring.datasource.druid.web‐stat‐filter.principal‐session‐name=admin, spring.datasource.druid.max‐pool‐prepared‐statement‐per‐connection‐size=20, spring.datasource.druid.min‐evictable‐idle‐time‐millis=300000, spring.datasource.type=com.alibaba.druid.pool.DruidDataSource, spring.datasource.druid.initial‐size=5, spring.datasource.druid.max‐active=20, spring.datasource.druid.stat‐view‐servlet.url‐pattern=/druid/*}}, NacosPropertySource@1958592872 {name='spring-boot-http.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.enabled=true, server.servlet.context‐path=/, spring.messages.encoding=UTF‐8, spring.http.encoding.force=true, server.tomcat.protocol_header=x‐forwarded‐proto, server.tomcat.remote_ip_header=x‐forwarded‐for, server.use‐forward‐headers=true}}]}
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,250 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,816 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,818 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,830 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ApplicationConfig] within prefix [dubbo.applications]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,830 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.modules]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,831 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.RegistryConfig] within prefix [dubbo.registries]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,831 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ProtocolConfig] within prefix [dubbo.protocols]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,832 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitors]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,832 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.providers]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,833 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ConsumerConfig] within prefix [dubbo.consumers]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,833 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-centers]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,834 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-reports]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,835 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,836 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,836 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.module]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,837 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,837 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,837 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,837 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,838 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,838 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,838 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,839 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,839 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-center]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,840 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-report]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,965 INFO [main][RepositoryConfigurationDelegate.java:244] - Multiple Spring Data modules found, entering strict repository configuration mode!
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,967 INFO [main][RepositoryConfigurationDelegate.java:126] - Bootstrapping Spring Data repositories in DEFAULT mode.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:00,998 INFO [main][RepositoryConfigurationDelegate.java:182] - Finished Spring Data repository scanning in 21ms. Found 0 repository interfaces.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:01,068 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:01,123 INFO [main][ServiceAnnotationBeanPostProcessor.java:204] -  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:01,123 INFO [main][ServiceAnnotationBeanPostProcessor.java:206] -  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:01,131 DEBUG [main][ClassPathScanningCandidateComponentProvider.java:437] - Identified candidate component class: file [D:\projects\yimu-pay\yimupay-uaa\yimupay-uaa-service\target\classes\com\me\yimu\pay\uaa\service\OauthClientDetailsServiceImpl.class]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:01,144 DEBUG [main][ClassPathScanningCandidateComponentProvider.java:437] - Identified candidate component class: file [D:\projects\yimu-pay\yimupay-uaa\yimupay-uaa-service\target\classes\com\me\yimu\pay\uaa\service\OauthClientDetailsServiceImpl.class]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:01,150 INFO [main][ServiceAnnotationBeanPostProcessor.java:284] -  [DUBBO] The BeanDefinition[Root bean: class [org.apache.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:01,150 INFO [main][ServiceAnnotationBeanPostProcessor.java:161] -  [DUBBO] 1 annotated Dubbo's @Service Components { [Bean definition with name 'oauthClientDetailsServiceImpl': Generic bean: class [com.me.yimu.pay.uaa.service.OauthClientDetailsServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\projects\yimu-pay\yimupay-uaa\yimupay-uaa-service\target\classes\com\me\yimu\pay\uaa\service\OauthClientDetailsServiceImpl.class]] } were scanned under package[com.me.yimu.pay], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:01,152 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:01,152 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:01,306 INFO [main][GenericScope.java:294] - BeanFactory id=714e8eaa-2b15-39ff-abfc-60d087ea5881
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:01,337 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:01,429 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6fa95fcb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:01,499 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:01,509 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:01,512 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$f36aaecf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:01,526 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:01,537 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:01,548 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:01,554 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:01,556 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:01,557 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$65aa4b49] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:01,562 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$f85453a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:01,569 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:01,572 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:01,578 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$b8998d5b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:01,583 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$ac649620] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:01,594 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$3757294f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:01,601 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:01,603 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:01,963 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:01,968 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:01,987 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:01,990 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$84c82629] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,352 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,354 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,357 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,361 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,408 WARN [main][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,409 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,435 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,451 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,456 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$bceaf1ff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,464 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,470 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$f6c0edff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,476 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$cb3cdf5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,482 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$7d89a175] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,487 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$38a08764] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,494 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,497 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,504 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$5f6bfe92] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,514 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,518 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$ad487ceb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,529 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,531 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,536 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,541 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,565 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,574 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,579 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$89dd2b5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,586 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,590 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,596 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,601 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,602 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,614 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,621 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,623 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,626 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,639 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8bc362c8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,899 INFO [main][TomcatWebServer.java:90] - Tomcat initialized with port(s): 56020 (http)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,913 INFO [main][DirectJDKLog.java:173] - Initializing ProtocolHandler ["http-nio-56020"]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,929 INFO [main][DirectJDKLog.java:173] - Starting service [Tomcat]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,931 INFO [main][DirectJDKLog.java:173] - Starting Servlet engine: [Apache Tomcat/9.0.16]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:02,937 INFO [main][DirectJDKLog.java:173] - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\jdk\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/jdk/bin/../jre/bin/server;D:/jdk/bin/../jre/bin;D:/jdk/bin/../jre/lib/amd64;D:\VMware-workstation-full-16\bin\;D:\jdk\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\maven\apache-maven-3.6.3\bin;D:\Mysql5.6.31\mysql\bin;D:\VSCode\bin;D:\node-v10.14.2\;D:\winscp\;D:\Git\cmd;D:\projects\yimu-pay-web\shanjupay-web\node_modules\.bin;C:\Program Files (x86)\Yarn\bin\;C:\Users\PC\AppData\Local\Microsoft\WindowsApps;C:\Users\PC\AppData\Roaming\npm;C:\Users\PC\AppData\Local\Yarn\bin;D:\ecplise\eclipse;;.]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,042 INFO [main][DirectJDKLog.java:173] - Initializing Spring embedded WebApplicationContext
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,043 INFO [main][ServletWebServerApplicationContext.java:296] - Root WebApplicationContext: initialization completed in 2785 ms
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,388 INFO [main][DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,580 DEBUG [main][Log4j2Filter.java:132] - {conn-10001,procId-75} connected
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,585 DEBUG [main][Log4j2Filter.java:132] - {conn-10002,procId-76} connected
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,589 DEBUG [main][Log4j2Filter.java:132] - {conn-10003,procId-77} connected
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,592 DEBUG [main][Log4j2Filter.java:132] - {conn-10004,procId-78} connected
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,596 DEBUG [main][Log4j2Filter.java:132] - {conn-10005,procId-79} connected
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,600 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,690 DEBUG [main][InternalLoggerFactory.java:43] - Using SLF4J as the default logging framework
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,695 DEBUG [main][DefaultClientResources.java:109] - -Dio.netty.eventLoopThreads: 16
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,703 DEBUG [main][DefaultEventLoopGroupProvider.java:138] - Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,721 DEBUG [main][ResourceLeakDetector.java:129] - -Dio.netty.leakDetection.level: simple
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,721 DEBUG [main][ResourceLeakDetector.java:130] - -Dio.netty.leakDetection.targetRecords: 4
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,725 DEBUG [main][PlatformDependent.java:955] - Platform: Windows
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,727 DEBUG [main][PlatformDependent0.java:395] - -Dio.netty.noUnsafe: false
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,727 DEBUG [main][PlatformDependent0.java:871] - Java version: 8
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,728 DEBUG [main][PlatformDependent0.java:120] - sun.misc.Unsafe.theUnsafe: available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,728 DEBUG [main][PlatformDependent0.java:144] - sun.misc.Unsafe.copyMemory: available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,729 DEBUG [main][PlatformDependent0.java:182] - java.nio.Buffer.address: available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,730 DEBUG [main][PlatformDependent0.java:243] - direct buffer constructor: available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,730 DEBUG [main][PlatformDependent0.java:313] - java.nio.Bits.unaligned: available, true
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,731 DEBUG [main][PlatformDependent0.java:378] - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,731 DEBUG [main][PlatformDependent0.java:385] - java.nio.DirectByteBuffer.<init>(long, int): available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,731 DEBUG [main][PlatformDependent.java:992] - sun.misc.Unsafe: available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,732 DEBUG [main][PlatformDependent.java:1086] - -Dio.netty.tmpdir: C:\Users\PC\AppData\Local\Temp (java.io.tmpdir)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,732 DEBUG [main][PlatformDependent.java:1165] - -Dio.netty.bitMode: 64 (sun.arch.data.model)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,733 DEBUG [main][PlatformDependent.java:157] - -Dio.netty.maxDirectMemory: 15237906432 bytes
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,733 DEBUG [main][PlatformDependent.java:164] - -Dio.netty.uninitializedArrayAllocationThreshold: -1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,735 DEBUG [main][CleanerJava6.java:92] - java.nio.ByteBuffer.cleaner(): available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,735 DEBUG [main][PlatformDependent.java:184] - -Dio.netty.noPreferDirect: false
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,735 DEBUG [main][ResourceLeakDetectorFactory.java:202] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3855d9b2
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,737 DEBUG [main][PlatformDependent.java:860] - org.jctools-core.MpscChunkedArrayQueue: available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,747 DEBUG [main][Loggers.java:249] - Using Slf4j logging framework
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,762 DEBUG [main][Loggers.java:249] - Starting UnsafeSupport init in Java 1.8
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,762 DEBUG [main][Loggers.java:249] - Unsafe is available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,817 DEBUG [main][PooledByteBufAllocator.java:126] - -Dio.netty.allocator.numHeapArenas: 32
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,817 DEBUG [main][PooledByteBufAllocator.java:127] - -Dio.netty.allocator.numDirectArenas: 32
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,818 DEBUG [main][PooledByteBufAllocator.java:129] - -Dio.netty.allocator.pageSize: 8192
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,818 DEBUG [main][PooledByteBufAllocator.java:134] - -Dio.netty.allocator.maxOrder: 11
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,818 DEBUG [main][PooledByteBufAllocator.java:138] - -Dio.netty.allocator.chunkSize: 16777216
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,818 DEBUG [main][PooledByteBufAllocator.java:139] - -Dio.netty.allocator.tinyCacheSize: 512
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,819 DEBUG [main][PooledByteBufAllocator.java:140] - -Dio.netty.allocator.smallCacheSize: 256
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,819 DEBUG [main][PooledByteBufAllocator.java:141] - -Dio.netty.allocator.normalCacheSize: 64
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,820 DEBUG [main][PooledByteBufAllocator.java:142] - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,820 DEBUG [main][PooledByteBufAllocator.java:143] - -Dio.netty.allocator.cacheTrimInterval: 8192
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,821 DEBUG [main][PooledByteBufAllocator.java:144] - -Dio.netty.allocator.useCacheForAllThreads: true
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,821 DEBUG [main][PooledByteBufAllocator.java:145] - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,824 DEBUG [main][InternalThreadLocalMap.java:54] - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:03,824 DEBUG [main][InternalThreadLocalMap.java:57] - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,360 WARN [main][JwtAccessTokenConverter.java:302] - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,472 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements org.apache.dubbo.rpc.Protocol {
public void destroy()  {
throw new UnsupportedOperationException("The method public abstract void org.apache.dubbo.rpc.Protocol.destroy() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort()  {
throw new UnsupportedOperationException("The method public abstract int org.apache.dubbo.rpc.Protocol.getDefaultPort() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public org.apache.dubbo.rpc.Exporter export(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public org.apache.dubbo.rpc.Invoker refer(java.lang.Class arg0, org.apache.dubbo.common.URL arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,531 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements org.apache.dubbo.rpc.cluster.Cluster {
public org.apache.dubbo.rpc.Invoker join(org.apache.dubbo.rpc.cluster.Directory arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.Cluster) name from url (" + url.toString() + ") use keys([cluster])");
org.apache.dubbo.rpc.cluster.Cluster extension = (org.apache.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,543 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements org.apache.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0, boolean arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public org.apache.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, org.apache.dubbo.common.URL arg2) throws org.apache.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,580 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,597 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,604 INFO [main][AnnotatedInterfaceConfigBeanBuilder.java:84] - The configBean[type:ReferenceBean] has been built.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,624 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,663 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,664 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,675 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.registry;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements org.apache.dubbo.registry.RegistryFactory {
public org.apache.dubbo.registry.Registry getRegistry(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.registry.RegistryFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.registry.RegistryFactory extension = (org.apache.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,680 INFO [main][QosProtocolWrapper.java:89] -  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,681 WARN [main][SpringExtensionFactory.java:86] -  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,683 DEBUG [main][SpringExtensionFactory.java:99] -  [DUBBO] Error when get spring extension(bean) for type:org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.76.1
org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.context.ConfigurableApplicationContext' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1123)
	at org.apache.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:94)
	at org.apache.dubbo.common.extension.factory.AdaptiveExtensionFactory.getExtension(AdaptiveExtensionFactory.java:47)
	at org.apache.dubbo.common.extension.ExtensionLoader.injectExtension(ExtensionLoader.java:566)
	at org.apache.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:535)
	at org.apache.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:351)
	at org.apache.dubbo.registry.RegistryFactory$Adaptive.getRegistry(RegistryFactory$Adaptive.java)
	at org.apache.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:379)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:69)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:128)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:70)
	at org.apache.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at org.apache.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:401)
	at org.apache.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:329)
	at org.apache.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:250)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.init(ReferenceAnnotationBeanPostProcessor.java:269)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.access$100(ReferenceAnnotationBeanPostProcessor.java:242)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildInvocationHandler(ReferenceAnnotationBeanPostProcessor.java:236)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildProxy(ReferenceAnnotationBeanPostProcessor.java:219)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.doGetInjectedBean(ReferenceAnnotationBeanPostProcessor.java:134)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.getInjectedObject(AnnotationInjectedBeanPostProcessor.java:360)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor$AnnotatedFieldElement.inject(AnnotationInjectedBeanPostProcessor.java:540)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.postProcessPropertyValues(AnnotationInjectedBeanPostProcessor.java:147)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.me.yimu.pay.uaa.UAABootstrap.main(UAABootstrap.java:14)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,687 WARN [main][SpringExtensionFactory.java:104] -  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,703 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements org.apache.dubbo.rpc.cluster.RouterFactory {
public org.apache.dubbo.rpc.cluster.Router getRouter(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.RouterFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.cluster.RouterFactory extension = (org.apache.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,709 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=24856&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674542584624, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,709 DEBUG [main][AbstractSpringCloudRegistry.java:116] - The URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=24856&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674542584624] should not be registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,714 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=24856&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674542584624, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,720 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : user-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,720 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] can't be found when the subscribed service[name : user-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,720 INFO [main][DubboServiceMetadataRepository.java:280] - The metadata of Dubbo service[name : user-service] is about to be initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,735 WARN [main][DubboServiceMetadataRepository.java:484] - The Spring application[name : user-service] does not expose The REST metadata in the Dubbo services.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,736 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,736 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : merchant-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,736 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] can't be found when the subscribed service[name : merchant-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,737 INFO [main][DubboServiceMetadataRepository.java:280] - The metadata of Dubbo service[name : merchant-service] is about to be initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,740 WARN [main][DubboServiceMetadataRepository.java:484] - The Spring application[name : merchant-service] does not expose The REST metadata in the Dubbo services.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,740 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,740 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : gateway-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,741 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,741 INFO [main][DubboServiceMetadataRepository.java:280] - The metadata of Dubbo service[name : gateway-service] is about to be initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,743 WARN [main][DubboServiceMetadataRepository.java:484] - The Spring application[name : gateway-service] does not expose The REST metadata in the Dubbo services.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,743 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,743 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : merchant-application]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,743 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] can't be found when the subscribed service[name : merchant-application], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,743 INFO [main][DubboServiceMetadataRepository.java:280] - The metadata of Dubbo service[name : merchant-application] is about to be initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,745 WARN [main][DubboServiceMetadataRepository.java:484] - The Spring application[name : merchant-application] does not expose The REST metadata in the Dubbo services.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,745 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,753 INFO [main][AbstractRegistry.java:212] -  [DUBBO] Load registry cache file C:\Users\PC\.dubbo\dubbo-registry-uaa-service-127.0.0.1:8848.cache, data: {com.me.yimu.pay.user.api.TenantService=dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.TenantService?anyhost=true&application=user-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.TenantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&path=com.me.yimu.pay.user.api.TenantService&pid=25436&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1674535530808, user-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.76.1:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=user-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=19148&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674405991854&version=1.0.0, merchant-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.76.1:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=5044&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674534664179&version=1.0.0, com.me.yimu.pay.user.api.AuthorizationService=dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.AuthorizationService?anyhost=true&application=user-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.AuthorizationService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&path=com.me.yimu.pay.user.api.AuthorizationService&pid=25436&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1674535529585, merchant-application/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.76.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=24532&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674534670247&version=1.0.0}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,753 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=24856&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674542584624, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,763 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=24856&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674542584624, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,774 INFO [main][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=24856&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674542584624, urls: [dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.TenantService?anyhost=true&application=user-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.TenantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&path=com.me.yimu.pay.user.api.TenantService&pid=20332&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1674542554175], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,791 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {
public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([client, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public org.apache.dubbo.remoting.Server bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([server, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,801 DEBUG [main][MultithreadEventLoopGroup.java:44] - -Dio.netty.eventLoopThreads: 32
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,805 DEBUG [main][NioEventLoop.java:105] - -Dio.netty.noKeySetOptimization: false
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,805 DEBUG [main][NioEventLoop.java:106] - -Dio.netty.selectorAutoRebuildThreshold: 512
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,823 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {
public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,834 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.common.threadpool;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements org.apache.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.common.threadpool.ThreadPool) name from url (" + url.toString() + ") use keys([threadpool])");
org.apache.dubbo.common.threadpool.ThreadPool extension = (org.apache.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(org.apache.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,865 DEBUG [main][DefaultChannelId.java:79] - -Dio.netty.processId: 24856 (auto-detected)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,867 DEBUG [main][NetUtil.java:139] - -Djava.net.preferIPv4Stack: false
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:04,867 DEBUG [main][NetUtil.java:140] - -Djava.net.preferIPv6Addresses: false
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,097 DEBUG [main][NetUtil.java:224] - Loopback interface: [lo, Software Loopback Interface 1, 127.0.0.1] ([lo, Software Loopback Interface 1, 127.0.0.1], {})
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,098 DEBUG [main][NetUtil.java:289] - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,345 DEBUG [main][DefaultChannelId.java:101] - -Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,358 DEBUG [main][ByteBufUtil.java:83] - -Dio.netty.allocator.type: pooled
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,359 DEBUG [main][ByteBufUtil.java:92] - -Dio.netty.threadLocalDirectBufferSize: 0
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,360 DEBUG [main][ByteBufUtil.java:95] - -Dio.netty.maxThreadLocalCharBufferSize: 16384
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,385 INFO [main][AbstractClient.java:199] -  [DUBBO] Succeed connect to server /192.168.76.1:20880 from NettyClient 192.168.76.1 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0x729bc84b, L:/192.168.76.1:60163 - R:/192.168.76.1:20880]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,385 INFO [main][AbstractClient.java:71] -  [DUBBO] Start NettyClient DESKTOP-82R6ISH/192.168.76.1 connect to the server /192.168.76.1:20880, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,404 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.cache;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements org.apache.dubbo.cache.CacheFactory {
public org.apache.dubbo.cache.Cache getCache(org.apache.dubbo.common.URL arg0, org.apache.dubbo.rpc.Invocation arg1)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.cache.CacheFactory) name from url (" + url.toString() + ") use keys([cache])");
org.apache.dubbo.cache.CacheFactory extension = (org.apache.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,417 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.monitor;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory {
public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,424 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.validation;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements org.apache.dubbo.validation.Validation {
public org.apache.dubbo.validation.Validator getValidator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.validation.Validation) name from url (" + url.toString() + ") use keys([validation])");
org.apache.dubbo.validation.Validation extension = (org.apache.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(org.apache.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,432 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=24856&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674542584624, urls: [dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.TenantService?anyhost=true&application=user-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.TenantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&path=com.me.yimu.pay.user.api.TenantService&pid=20332&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1674542554175], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,435 INFO [main][ReferenceConfig.java:421] -  [DUBBO] Refer dubbo service com.me.yimu.pay.user.api.TenantService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&check=false&cluster=registryaware&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=24856&qos.enable=false&qos.port=22220&refer=application%3Duaa-service%26check%3Dfalse%26dubbo%3D2.0.2%26interface%3Dcom.me.yimu.pay.user.api.TenantService%26lazy%3Dfalse%26methods%3DmodifyBundle%2CgetTenantByAccount%2CgetAccountByUsername%2CcreateBundle%2CinitBundle%2Clogin%2CisExistAccountByUsername%2CgetBundle%2CunbindTenant%2CremoveTenant%2CqueryTenants%2CqueryBundleByTenantType%2CgetAccountByMobile%2CgetApplicationDTOByClientId%2CqueryAccount%2CchangeBundle%2CisExistAccountInTenantByUsername%2CcreateAccountInTenant%2Cauthentication%2CqueryAccountRole%2CqueryAccountInTenant%2CisExistAccountByMobile%2CsendMessage%2CcreateTenantRelateAccount%2CqueryAllBundle%2CcreateAccount%2CgetTenant%2CqueryAdministratorByPage%2CisExistAccountInTenantByMobile%2CaccountPassword%2CcreateTenantAndAccount%2CbindTenant%26pid%3D24856%26qos.enable%3Dfalse%26qos.port%3D22220%26register.ip%3D192.168.76.1%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1674542584624&register.ip=192.168.76.1&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674542584624, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,473 INFO [main][AnnotatedInterfaceConfigBeanBuilder.java:84] - The configBean[type:ReferenceBean] has been built.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,478 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,489 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,490 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,495 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=24856&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674542585478, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,496 DEBUG [main][AbstractSpringCloudRegistry.java:116] - The URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=24856&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674542585478] should not be registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,496 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=24856&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674542585478, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,496 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : user-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,496 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] can't be found when the subscribed service[name : user-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,497 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : user-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,497 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,498 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : merchant-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,498 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] can't be found when the subscribed service[name : merchant-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,498 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : merchant-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,499 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,499 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : gateway-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,499 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,499 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,500 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,500 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : merchant-application]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,500 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] can't be found when the subscribed service[name : merchant-application], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,501 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : merchant-application] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,501 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,502 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=24856&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674542585478, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,504 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=24856&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674542585478, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,508 INFO [main][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=24856&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674542585478, urls: [dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.AuthorizationService?anyhost=true&application=user-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.AuthorizationService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&path=com.me.yimu.pay.user.api.AuthorizationService&pid=20332&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1674542552359], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,509 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=24856&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674542585478, urls: [dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.AuthorizationService?anyhost=true&application=user-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.AuthorizationService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&path=com.me.yimu.pay.user.api.AuthorizationService&pid=20332&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1674542552359], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,509 INFO [main][ReferenceConfig.java:421] -  [DUBBO] Refer dubbo service com.me.yimu.pay.user.api.AuthorizationService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&check=false&cluster=registryaware&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=24856&qos.enable=false&qos.port=22220&refer=application%3Duaa-service%26check%3Dfalse%26dubbo%3D2.0.2%26interface%3Dcom.me.yimu.pay.user.api.AuthorizationService%26lazy%3Dfalse%26methods%3DremoveRole%2CroleBindPrivilege%2CmodifyRole%2CcreateRole%2CunbindAccountRole%2CqueryPrivilege%2CqueryRole%2CqueryPrivilegeTree%2CqueryRoleByPage%2CbindAccountRole%2CqueryPrivilegeByGroupId%2CqueryTenantRole%2Cauthorize%26pid%3D24856%26qos.enable%3Dfalse%26qos.port%3D22220%26register.ip%3D192.168.76.1%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1674542585478&register.ip=192.168.76.1&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674542585478, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,805 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,805 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,981 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:05,981 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:06,013 DEBUG [main][TraversableResolvers.java:60] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:06,014 DEBUG [main][ResourceBundleMessageInterpolator.java:89] - Loaded expression factory via original TCCL
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:06,020 DEBUG [main][TraversableResolvers.java:60] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:06,020 DEBUG [main][ConfigurationImpl.java:148] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:06,021 DEBUG [main][ConfigurationImpl.java:180] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:06,021 DEBUG [main][ConfigurationImpl.java:194] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:06,022 DEBUG [main][ValidationXmlParser.java:120] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:06,022 DEBUG [main][ResourceLoaderHelper.java:53] - Trying to load META-INF/validation.xml via user class loader
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:06,022 DEBUG [main][ResourceLoaderHelper.java:60] - Trying to load META-INF/validation.xml via TCCL
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:06,022 DEBUG [main][ResourceLoaderHelper.java:66] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:06,023 DEBUG [main][ValidationXmlParser.java:127] - No META-INF/validation.xml found. Using annotation based configuration only.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:06,026 DEBUG [main][ValidatorFactoryImpl.java:578] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:06,026 DEBUG [main][ValidatorFactoryImpl.java:579] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:06,027 DEBUG [main][ValidatorFactoryImpl.java:580] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:06,027 DEBUG [main][ValidatorFactoryImpl.java:581] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:06,027 DEBUG [main][ValidatorFactoryImpl.java:582] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:06,155 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:06,416 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:06,433 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:06,842 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/public/**'], []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:06,843 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/webjars/**'], []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:06,843 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/v2/**'], []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:06,843 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/swagger**'], []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:06,843 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/static/**'], []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:06,843 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/resources/**'], []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:06,947 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4d8522ff, org.springframework.security.web.context.SecurityContextPersistenceFilter@7509226c, org.springframework.security.web.header.HeaderWriterFilter@23954300, org.springframework.security.web.authentication.logout.LogoutFilter@4bfe83d, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@47ffa248, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2d2133fd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@73316a0a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@19d76106, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1c9975a8, org.springframework.security.web.session.SessionManagementFilter@7a587e84, org.springframework.security.web.access.ExceptionTranslationFilter@3991fe6d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@67c2b55d]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:06,962 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@582c1f8d, org.springframework.security.web.context.SecurityContextPersistenceFilter@51cd2d2, org.springframework.security.web.header.HeaderWriterFilter@434a8938, org.springframework.security.web.authentication.logout.LogoutFilter@71f056a, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@395197cb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5521407f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@42b500aa, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@71687d8f, org.springframework.security.web.session.SessionManagementFilter@237cd264, org.springframework.security.web.access.ExceptionTranslationFilter@63d66761, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@418d1c03]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,226 INFO [main][EndpointLinksResolver.java:59] - Exposing 4 endpoint(s) beneath base path '/actuator'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,435 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : user-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,435 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : merchant-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,435 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,435 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : merchant-application] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,435 INFO [main][DubboServiceMetadataRepository.java:262] - The metadata of Dubbo services has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,488 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,489 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : user-service , size : 0] change is about to be dispatched
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,490 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : user-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,490 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] can't be found when the subscribed service[name : user-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,490 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : user-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,490 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,490 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : user-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,490 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] can't be found when the subscribed service[name : user-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,490 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : user-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,490 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,491 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : merchant-service , size : 0] change is about to be dispatched
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,491 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : merchant-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,491 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] can't be found when the subscribed service[name : merchant-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,491 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : merchant-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,492 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,492 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : merchant-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,492 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] can't be found when the subscribed service[name : merchant-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,492 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : merchant-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,492 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,492 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : gateway-service , size : 0] change is about to be dispatched
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,492 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : gateway-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,493 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,493 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,493 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,493 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : gateway-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,493 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,493 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,494 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,494 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : merchant-application , size : 0] change is about to be dispatched
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,494 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : merchant-application]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,494 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] can't be found when the subscribed service[name : merchant-application], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,494 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : merchant-application] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,495 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,495 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : merchant-application]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,495 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] can't be found when the subscribed service[name : merchant-application], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,495 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : merchant-application] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,495 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,500 INFO [main][ServiceBean.java:112] -  [DUBBO] The service ready on spring started. service: com.me.yimu.pay.uaa.api.OauthClientDetailsService, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,506 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,520 INFO [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.me.yimu.pay.uaa.api.OauthClientDetailsService to local registry url : injvm://127.0.0.1/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24856&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674542587507, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,520 INFO [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.me.yimu.pay.uaa.api.OauthClientDetailsService to url dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24856&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674542587507, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,520 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,520 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.me.yimu.pay.uaa.api.OauthClientDetailsService url dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24856&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674542587507 to registry registry://localhost:9090/org.apache.dubbo.registry.RegistryService?application=uaa-service&dubbo=2.0.2&pid=24856&qos.enable=false&qos.port=22220&registry=spring-cloud&release=2.7.3&timestamp=1674542587506, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,538 INFO [main][AbstractServer.java:73] -  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.76.1:20881, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,544 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24856&register=true&release=2.7.3&side=provider&timestamp=1674542587507, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,897 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24856&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674542587507, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,897 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService] is being subscribed for service[name : user-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,898 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.uaa.api.OauthClientDetailsService] can't be found when the subscribed service[name : user-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,898 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : user-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,898 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.uaa.api.OauthClientDetailsService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,899 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService] is being subscribed for service[name : merchant-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,899 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.uaa.api.OauthClientDetailsService] can't be found when the subscribed service[name : merchant-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,899 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : merchant-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,899 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.uaa.api.OauthClientDetailsService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,899 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService] is being subscribed for service[name : gateway-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,900 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.uaa.api.OauthClientDetailsService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,900 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,900 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.uaa.api.OauthClientDetailsService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,900 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService] is being subscribed for service[name : merchant-application]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,901 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.uaa.api.OauthClientDetailsService] can't be found when the subscribed service[name : merchant-application], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,901 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : merchant-application] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,901 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.uaa.api.OauthClientDetailsService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,902 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,902 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.me.yimu.pay.uaa.api.OauthClientDetailsService url dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24856&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674542587507 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&dubbo=2.0.2&pid=24856&qos.enable=false&qos.port=22220&registry=nacos&release=2.7.3&timestamp=1674542587506, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,903 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24856&register=true&release=2.7.3&side=provider&timestamp=1674542587507, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,906 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24856&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674542587507, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,909 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24856&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674542587507, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,909 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24856&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674542587507, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,913 INFO [main][DirectJDKLog.java:173] - Starting ProtocolHandler ["http-nio-56020"]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,927 INFO [main][TomcatWebServer.java:204] - Tomcat started on port(s): 56020 (http) with context path '/uaa'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,940 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,949 INFO [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to local registry url : injvm://127.0.0.1/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=24856&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674542587941&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,949 INFO [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to url dubbo://192.168.76.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=24856&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674542587941&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,950 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,950 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService url dubbo://192.168.76.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=24856&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674542587941&version=1.0.0 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&dubbo=2.0.2&pid=24856&qos.enable=false&qos.port=22220&registry=nacos&release=2.7.3&timestamp=1674542587941, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,951 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.76.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=24856&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674542587941&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,953 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.76.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=24856&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674542587941&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,956 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.76.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=24856&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674542587941&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,957 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.76.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=24856&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674542587941&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,957 INFO [main][DubboMetadataServiceExporter.java:86] - The Dubbo service[<dubbo:service path="com.alibaba.cloud.dubbo.service.DubboMetadataService" ref="com.alibaba.cloud.dubbo.service.IntrospectiveDubboMetadataService@c86c486" prefix="dubbo.service.com.alibaba.cloud.dubbo.service.DubboMetadataService" generic="false" exported="true" unexported="false" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" dynamic="true" version="1.0.0" group="uaa-service" deprecated="false" register="true" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" />] has been exported.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,973 INFO [main][NacosServiceRegistry.java:62] - nacos registry, uaa-service 192.168.76.1:56020 register finished
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:07,978 INFO [main][StartupInfoLogger.java:59] - Started UAABootstrap in 9.237 seconds (JVM running for 10.19)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:43:37,504 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:44:05,383 DEBUG [NettyClientWorker-4-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x729bc84b, L:/192.168.76.1:60163 - R:/192.168.76.1:20880]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:44:05,389 DEBUG [NettyClientWorker-4-1][Recycler.java:96] - -Dio.netty.recycler.maxCapacityPerThread: 4096
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:44:05,389 DEBUG [NettyClientWorker-4-1][Recycler.java:97] - -Dio.netty.recycler.maxSharedCapacityFactor: 2
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:44:05,389 DEBUG [NettyClientWorker-4-1][Recycler.java:98] - -Dio.netty.recycler.linkCapacity: 16
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:44:05,389 DEBUG [NettyClientWorker-4-1][Recycler.java:99] - -Dio.netty.recycler.ratio: 8
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:44:05,397 DEBUG [NettyClientWorker-4-1][AbstractByteBuf.java:61] - -Dio.netty.buffer.checkAccessible: true
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:44:05,398 DEBUG [NettyClientWorker-4-1][AbstractByteBuf.java:62] - -Dio.netty.buffer.checkBounds: true
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:44:05,398 DEBUG [NettyClientWorker-4-1][ResourceLeakDetectorFactory.java:202] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@244d1f94
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:44:05,488 DEBUG [NettyClientWorker-4-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:44:07,518 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:44:37,530 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:02,723 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : gateway-service , size : 1] change is about to be dispatched
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:02,724 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : gateway-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:02,724 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:02,724 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:02,724 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:02,724 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : gateway-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:02,724 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:02,724 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:02,724 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:02,724 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService] is being subscribed for service[name : gateway-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:02,724 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.uaa.api.OauthClientDetailsService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:02,724 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:02,724 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.uaa.api.OauthClientDetailsService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:05,489 DEBUG [NettyClientWorker-4-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x729bc84b, L:/192.168.76.1:60163 - R:/192.168.76.1:20880]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:05,490 DEBUG [NettyClientWorker-4-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:07,540 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:37,544 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:40,473 DEBUG [DubboServerHandler-192.168.76.1:20881-thread-2][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:40,491 DEBUG [DubboServerHandler-192.168.76.1:20881-thread-3][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:40,642 DEBUG [DubboServerHandler-192.168.76.1:20881-thread-4][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:41,049 DEBUG [DubboServerHandler-192.168.76.1:20881-thread-5][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:41,427 DEBUG [DubboServerHandler-192.168.76.1:20881-thread-6][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:42,502 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : merchant-service , size : 1] change is about to be dispatched
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:42,502 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : merchant-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:42,502 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] can't be found when the subscribed service[name : merchant-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:42,502 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : merchant-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:42,502 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:42,503 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : merchant-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:42,503 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] can't be found when the subscribed service[name : merchant-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:42,503 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : merchant-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:42,503 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:42,503 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService] is being subscribed for service[name : merchant-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:42,503 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.uaa.api.OauthClientDetailsService] can't be found when the subscribed service[name : merchant-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:42,503 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : merchant-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:42,503 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.uaa.api.OauthClientDetailsService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:59,404 DEBUG [DubboServerHandler-192.168.76.1:20881-thread-8][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:59,416 DEBUG [DubboServerHandler-192.168.76.1:20881-thread-9][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:59,517 DEBUG [DubboServerHandler-192.168.76.1:20881-thread-10][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:45:59,569 DEBUG [DubboServerHandler-192.168.76.1:20881-thread-11][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:46:01,146 DEBUG [DubboServerHandler-192.168.76.1:20881-thread-12][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:46:01,150 DEBUG [DubboServerHandler-192.168.76.1:20881-thread-13][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:46:01,154 DEBUG [DubboServerHandler-192.168.76.1:20881-thread-14][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:46:02,592 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : merchant-application , size : 1] change is about to be dispatched
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:46:02,593 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : merchant-application]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:46:02,593 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] can't be found when the subscribed service[name : merchant-application], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:46:02,593 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : merchant-application] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:46:02,593 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:46:02,593 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : merchant-application]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:46:02,593 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] can't be found when the subscribed service[name : merchant-application], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:46:02,593 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : merchant-application] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:46:02,593 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:46:02,594 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService] is being subscribed for service[name : merchant-application]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:46:02,594 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.uaa.api.OauthClientDetailsService] can't be found when the subscribed service[name : merchant-application], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:46:02,594 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : merchant-application] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:46:02,594 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.uaa.api.OauthClientDetailsService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:46:05,494 DEBUG [NettyClientWorker-4-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x729bc84b, L:/192.168.76.1:60163 - R:/192.168.76.1:20880]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:46:05,497 DEBUG [NettyClientWorker-4-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:46:07,556 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:46:37,569 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:46:41,437 DEBUG [NettyServerWorker-6-1][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:61021, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:47:01,176 DEBUG [NettyServerWorker-6-2][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:61268, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:47:05,501 DEBUG [NettyClientWorker-4-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x729bc84b, L:/192.168.76.1:60163 - R:/192.168.76.1:20880]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:47:05,503 DEBUG [NettyClientWorker-4-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:47:07,579 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:47:37,587 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:47:41,442 DEBUG [NettyServerWorker-6-1][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:61021, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:48:01,189 DEBUG [NettyServerWorker-6-2][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:61268, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:48:05,512 DEBUG [NettyClientWorker-4-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x729bc84b, L:/192.168.76.1:60163 - R:/192.168.76.1:20880]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:48:05,515 DEBUG [NettyClientWorker-4-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:48:07,600 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:48:37,614 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:48:41,456 DEBUG [NettyServerWorker-6-1][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:61021, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:49:01,198 DEBUG [NettyServerWorker-6-2][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:61268, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:49:05,530 DEBUG [NettyClientWorker-4-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x729bc84b, L:/192.168.76.1:60163 - R:/192.168.76.1:20880]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:49:05,531 DEBUG [NettyClientWorker-4-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:49:07,627 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:49:37,647 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:49:41,461 DEBUG [NettyServerWorker-6-1][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:61021, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:50:01,207 DEBUG [NettyServerWorker-6-2][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:61268, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:50:05,546 DEBUG [NettyClientWorker-4-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x729bc84b, L:/192.168.76.1:60163 - R:/192.168.76.1:20880]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:50:05,547 DEBUG [NettyClientWorker-4-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:50:07,656 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:50:37,679 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:50:41,475 DEBUG [NettyServerWorker-6-1][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:61021, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:51:01,215 DEBUG [NettyServerWorker-6-2][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:61268, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:51:05,561 DEBUG [NettyClientWorker-4-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x729bc84b, L:/192.168.76.1:60163 - R:/192.168.76.1:20880]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:51:05,562 DEBUG [NettyClientWorker-4-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:51:07,684 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:51:37,701 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:51:41,486 DEBUG [NettyServerWorker-6-1][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:61021, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:52:01,232 DEBUG [NettyServerWorker-6-2][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:61268, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:52:05,578 DEBUG [NettyClientWorker-4-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x729bc84b, L:/192.168.76.1:60163 - R:/192.168.76.1:20880]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:52:05,580 DEBUG [NettyClientWorker-4-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:52:07,715 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:52:37,727 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:52:41,490 DEBUG [NettyServerWorker-6-1][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:61021, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:53:01,239 DEBUG [NettyServerWorker-6-2][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:61268, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:53:05,583 DEBUG [NettyClientWorker-4-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x729bc84b, L:/192.168.76.1:60163 - R:/192.168.76.1:20880]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:53:05,584 DEBUG [NettyClientWorker-4-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:53:07,739 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:53:37,754 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:53:41,494 DEBUG [NettyServerWorker-6-1][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:61021, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:54:01,243 DEBUG [NettyServerWorker-6-2][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:61268, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:54:05,589 DEBUG [NettyClientWorker-4-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x729bc84b, L:/192.168.76.1:60163 - R:/192.168.76.1:20880]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:54:05,590 DEBUG [NettyClientWorker-4-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:54:07,762 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:54:37,768 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:54:41,500 DEBUG [NettyServerWorker-6-1][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:61021, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:01,253 DEBUG [NettyServerWorker-6-2][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:61268, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:05,598 DEBUG [NettyClientWorker-4-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x729bc84b, L:/192.168.76.1:60163 - R:/192.168.76.1:20880]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:05,599 DEBUG [NettyClientWorker-4-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:07,778 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:37,797 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:41,502 DEBUG [NettyServerWorker-6-1][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:61021, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,282 INFO [http-nio-56020-exec-1][DirectJDKLog.java:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,282 INFO [http-nio-56020-exec-1][FrameworkServlet.java:524] - Initializing Servlet 'dispatcherServlet'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,301 INFO [http-nio-56020-exec-1][FrameworkServlet.java:546] - Completed initialization in 18 ms
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,323 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,407 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} created. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,417 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,418 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,429 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50000} query executed. 14.3026 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,429 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50000} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,431 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50000} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,434 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50000} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,436 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50000} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,437 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,437 DEBUG [http-nio-56020-exec-1][PreparedStatementPool.java:129] - {conn-10005, pstmt-20000} enter cache
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,438 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,482 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,483 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,483 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,484 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50001} query executed. 1.4001 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,485 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50001} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,485 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50001} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,486 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50001} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,486 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50001} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,486 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,487 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,489 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,490 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,490 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,491 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50002} query executed. 1.3053 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,492 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50002} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,492 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50002} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,493 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50002} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,493 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50002} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,493 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,494 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,500 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,500 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,501 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,502 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50003} query executed. 1.7401 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,502 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50003} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,503 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50003} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,503 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50003} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,504 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50003} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,504 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,505 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,547 DEBUG [DubboClientHandler-192.168.76.1:20880-thread-2][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,552 INFO [http-nio-56020-exec-1][IntegrationUserDetailsAuthenticationHandler.java:60] - {"@type":"com.me.yimu.pay.domain.BusinessException","errorCode":"E_110001","stackTrace":[{"className":"com.me.yimu.pay.user.service.TenantServiceImpl","fileName":"TenantServiceImpl.java","lineNumber":656,"methodName":"authentication","nativeMethod":false},{"className":"com.me.yimu.pay.user.service.TenantServiceImpl","fileName":"TenantServiceImpl.java","lineNumber":710,"methodName":"login","nativeMethod":false},{"className":"com.me.yimu.pay.user.service.TenantServiceImpl$$FastClassBySpringCGLIB$$d00c722","fileName":"<generated>","lineNumber":-1,"methodName":"invoke","nativeMethod":false},{"className":"org.springframework.cglib.proxy.MethodProxy","fileName":"MethodProxy.java","lineNumber":218,"methodName":"invoke","nativeMethod":false},{"className":"org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation","fileName":"CglibAopProxy.java","lineNumber":749,"methodName":"invokeJoinpoint","nativeMethod":false},{"className":"org.springframework.aop.framework.ReflectiveMethodInvocation","fileName":"ReflectiveMethodInvocation.java","lineNumber":163,"methodName":"proceed","nativeMethod":false},{"className":"com.alibaba.druid.support.spring.stat.DruidStatInterceptor","fileName":"DruidStatInterceptor.java","lineNumber":73,"methodName":"invoke","nativeMethod":false},{"className":"org.springframework.aop.framework.ReflectiveMethodInvocation","fileName":"ReflectiveMethodInvocation.java","lineNumber":186,"methodName":"proceed","nativeMethod":false},{"className":"org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor","fileName":"CglibAopProxy.java","lineNumber":688,"methodName":"intercept","nativeMethod":false},{"className":"com.me.yimu.pay.user.service.TenantServiceImpl$$EnhancerBySpringCGLIB$$ef12fa96","fileName":"<generated>","lineNumber":-1,"methodName":"login","nativeMethod":false},{"className":"com.me.yimu.pay.user.service.TenantServiceImpl$$FastClassBySpringCGLIB$$d00c722","fileName":"<generated>","lineNumber":-1,"methodName":"invoke","nativeMethod":false},{"className":"org.springframework.cglib.proxy.MethodProxy","fileName":"MethodProxy.java","lineNumber":218,"methodName":"invoke","nativeMethod":false},{"className":"org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation","fileName":"CglibAopProxy.java","lineNumber":749,"methodName":"invokeJoinpoint","nativeMethod":false},{"className":"org.springframework.aop.framework.ReflectiveMethodInvocation","fileName":"ReflectiveMethodInvocation.java","lineNumber":163,"methodName":"proceed","nativeMethod":false},{"className":"com.alibaba.druid.support.spring.stat.DruidStatInterceptor","fileName":"DruidStatInterceptor.java","lineNumber":73,"methodName":"invoke","nativeMethod":false},{"className":"org.springframework.aop.framework.ReflectiveMethodInvocation","fileName":"ReflectiveMethodInvocation.java","lineNumber":186,"methodName":"proceed","nativeMethod":false},{"className":"org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor","fileName":"CglibAopProxy.java","lineNumber":688,"methodName":"intercept","nativeMethod":false},{"className":"com.me.yimu.pay.user.service.TenantServiceImpl$$EnhancerBySpringCGLIB$$3a2350e0","fileName":"<generated>","lineNumber":-1,"methodName":"login","nativeMethod":false},{"className":"org.apache.dubbo.common.bytecode.Wrapper3","fileName":"Wrapper3.java","lineNumber":-1,"methodName":"invokeMethod","nativeMethod":false},{"className":"org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1","fileName":"JavassistProxyFactory.java","lineNumber":47,"methodName":"doInvoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.proxy.AbstractProxyInvoker","fileName":"AbstractProxyInvoker.java","lineNumber":84,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker","fileName":"DelegateProviderMetaDataInvoker.java","lineNumber":56,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.InvokerWrapper","fileName":"InvokerWrapper.java","lineNumber":56,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.filter.ExceptionFilter","fileName":"ExceptionFilter.java","lineNumber":55,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1","fileName":"ProtocolFilterWrapper.java","lineNumber":82,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.monitor.support.MonitorFilter","fileName":"MonitorFilter.java","lineNumber":92,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1","fileName":"ProtocolFilterWrapper.java","lineNumber":82,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.filter.TimeoutFilter","fileName":"TimeoutFilter.java","lineNumber":48,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1","fileName":"ProtocolFilterWrapper.java","lineNumber":82,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter","fileName":"TraceFilter.java","lineNumber":81,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1","fileName":"ProtocolFilterWrapper.java","lineNumber":82,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.filter.ContextFilter","fileName":"ContextFilter.java","lineNumber":96,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1","fileName":"ProtocolFilterWrapper.java","lineNumber":82,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.filter.GenericFilter","fileName":"GenericFilter.java","lineNumber":148,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1","fileName":"ProtocolFilterWrapper.java","lineNumber":82,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.filter.ClassLoaderFilter","fileName":"ClassLoaderFilter.java","lineNumber":38,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1","fileName":"ProtocolFilterWrapper.java","lineNumber":82,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.filter.EchoFilter","fileName":"EchoFilter.java","lineNumber":41,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1","fileName":"ProtocolFilterWrapper.java","lineNumber":82,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker","fileName":"ProtocolFilterWrapper.java","lineNumber":157,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1","fileName":"DubboProtocol.java","lineNumber":152,"methodName":"reply","nativeMethod":false},{"className":"org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler","fileName":"HeaderExchangeHandler.java","lineNumber":102,"methodName":"handleRequest","nativeMethod":false},{"className":"org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler","fileName":"HeaderExchangeHandler.java","lineNumber":193,"methodName":"received","nativeMethod":false},{"className":"org.apache.dubbo.remoting.transport.DecodeHandler","fileName":"DecodeHandler.java","lineNumber":51,"methodName":"received","nativeMethod":false},{"className":"org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable","fileName":"ChannelEventRunnable.java","lineNumber":57,"methodName":"run","nativeMethod":false},{"className":"java.util.concurrent.ThreadPoolExecutor","fileName":"ThreadPoolExecutor.java","lineNumber":1149,"methodName":"runWorker","nativeMethod":false},{"className":"java.util.concurrent.ThreadPoolExecutor$Worker","fileName":"ThreadPoolExecutor.java","lineNumber":624,"methodName":"run","nativeMethod":false},{"className":"java.lang.Thread","fileName":"Thread.java","lineNumber":748,"methodName":"run","nativeMethod":false}]}
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:55:56,554 ERROR [http-nio-56020-exec-1][TokenEndpoint.java:169] - Handling error: InternalAuthenticationServiceException, login error-账号不存在
org.springframework.security.authentication.InternalAuthenticationServiceException: login error-账号不存在
	at com.me.yimu.pay.uaa.integration.IntegrationUserDetailsAuthenticationProvider.retrieveUser(IntegrationUserDetailsAuthenticationProvider.java:53)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:144)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:175)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:200)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator.authenticate(WebSecurityConfigurerAdapter.java:513)
	at org.springframework.security.oauth2.provider.password.ResourceOwnerPasswordTokenGranter.getOAuth2Authentication(ResourceOwnerPasswordTokenGranter.java:71)
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.getAccessToken(AbstractTokenGranter.java:72)
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.grant(AbstractTokenGranter.java:67)
	at org.springframework.security.oauth2.provider.CompositeTokenGranter.grant(CompositeTokenGranter.java:38)
	at org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer$4.grant(AuthorizationServerEndpointsConfigurer.java:583)
	at org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(TokenEndpoint.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter.successfulAuthentication(ClientCredentialsTokenEndpointFilter.java:131)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:240)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:679)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.security.authentication.BadCredentialsException: login error-账号不存在
	at com.me.yimu.pay.uaa.integration.IntegrationUserDetailsAuthenticationHandler.authentication(IntegrationUserDetailsAuthenticationHandler.java:61)
	at com.me.yimu.pay.uaa.integration.IntegrationUserDetailsAuthenticationProvider.authenticationUser(IntegrationUserDetailsAuthenticationProvider.java:83)
	at com.me.yimu.pay.uaa.integration.IntegrationUserDetailsAuthenticationProvider.retrieveUser(IntegrationUserDetailsAuthenticationProvider.java:40)
	... 113 more
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:01,260 DEBUG [NettyServerWorker-6-2][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:61268, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:07,799 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:21,027 INFO [RMI TCP Connection(2)-127.0.0.1][SpringApplicationAdminMXBeanRegistrar.java:163] - Application shutdown requested.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:21,028 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://192.168.76.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=24856&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674542587941&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:21,030 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://192.168.76.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=24856&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674542587941&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:21,031 INFO [Exporter-Unexport-thread-1][RegistryProtocol.java:689] -  [DUBBO] Waiting 10000ms for registry to notify all consumers before unexport. Usually, this is called when you use dubbo API, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:21,031 INFO [RMI TCP Connection(2)-127.0.0.1][DubboMetadataServiceExporter.java:107] - The Dubbo service[<dubbo:service path="com.alibaba.cloud.dubbo.service.DubboMetadataService" ref="com.alibaba.cloud.dubbo.service.IntrospectiveDubboMetadataService@c86c486" prefix="dubbo.service.com.alibaba.cloud.dubbo.service.DubboMetadataService" generic="false" exported="true" unexported="true" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" dynamic="true" version="1.0.0" group="uaa-service" deprecated="false" register="true" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" />] has been unexported.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:21,031 INFO [RMI TCP Connection(2)-127.0.0.1][AwaitingNonWebApplicationListener.java:155] -  [Dubbo] Current Spring Boot Application is about to shutdown...
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:21,032 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistryFactory.java:68] -  [DUBBO] Close all registries [nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=24856&qos.enable=false&qos.port=22220&release=2.7.3&timestamp=1674542584663], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:21,032 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:458] -  [DUBBO] Destroy registry:nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=24856&qos.enable=false&qos.port=22220&release=2.7.3&timestamp=1674542584663, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:21,032 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:291] -  [DUBBO] Unregister: consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=24856&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674542585478, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:21,033 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:467] -  [DUBBO] Destroy unregister url consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=24856&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674542585478, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:21,033 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:291] -  [DUBBO] Unregister: consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=24856&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674542584624, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:21,034 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:467] -  [DUBBO] Destroy unregister url consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=24856&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674542584624, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:21,035 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24856&register=true&release=2.7.3&side=provider&timestamp=1674542587507, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:21,036 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:467] -  [DUBBO] Destroy unregister url dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24856&register=true&release=2.7.3&side=provider&timestamp=1674542587507, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:21,036 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=24856&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674542584624, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:21,036 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:483] -  [DUBBO] Destroy unsubscribe url consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=24856&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674542584624, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:21,036 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=24856&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674542585478, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:21,037 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:483] -  [DUBBO] Destroy unsubscribe url consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=24856&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674542585478, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:21,037 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24856&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674542587507, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:21,037 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:483] -  [DUBBO] Destroy unsubscribe url provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24856&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674542587507, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:21,037 INFO [RMI TCP Connection(2)-127.0.0.1][DubboProtocol.java:616] -  [DUBBO] Close dubbo server: /192.168.76.1:20881, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:22,043 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.76.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=24856&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674542587941&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:22,046 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24856&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674542587507, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,043 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractServer.java:153] -  [DUBBO] Close NettyServer bind /0.0.0.0:20881, export /192.168.76.1:20881, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,045 INFO [RMI TCP Connection(2)-127.0.0.1][NettyChannel.java:172] -  [DUBBO] Close netty channel [id: 0x1151bff1, L:/192.168.76.1:20881 - R:/192.168.76.1:61021], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,045 INFO [RMI TCP Connection(2)-127.0.0.1][NettyChannel.java:172] -  [DUBBO] Close netty channel [id: 0xc7af9ae8, L:/192.168.76.1:20881 - R:/192.168.76.1:61268], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,049 INFO [RMI TCP Connection(2)-127.0.0.1][DubboProtocol.java:654] -  [DUBBO] Close dubbo connect: /192.168.76.1:60163-->/192.168.76.1:20880, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,050 WARN [NettyServerWorker-6-2][AbstractServer.java:213] -  [DUBBO] All clients has disconnected from /192.168.76.1:20881. You can graceful shutdown now., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,050 WARN [NettyServerWorker-6-1][AbstractServer.java:213] -  [DUBBO] All clients has disconnected from /192.168.76.1:20881. You can graceful shutdown now., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,049 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractProtocol.java:66] -  [DUBBO] Destroy reference: dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.TenantService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.TenantService&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&path=com.me.yimu.pay.user.api.TenantService&pid=24856&protocol=dubbo&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.76.1&release=2.7.3&remote.application=user-service&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674542554175, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,050 DEBUG [DubboSharedHandler-thread-1][DubboProtocol.java:174] -  [DUBBO] disconnected from /192.168.76.1:61268,url:dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&channel.readonly.sent=true&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&heartbeat=60000&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24856&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674542587507, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,050 DEBUG [DubboSharedHandler-thread-2][DubboProtocol.java:174] -  [DUBBO] disconnected from /192.168.76.1:61021,url:dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&channel.readonly.sent=true&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&heartbeat=60000&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24856&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674542587507, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,050 INFO [RMI TCP Connection(2)-127.0.0.1][NettyChannel.java:172] -  [DUBBO] Close netty channel [id: 0x729bc84b, L:/192.168.76.1:60163 - R:/192.168.76.1:20880], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,051 DEBUG [DubboSharedHandler-thread-1][DubboProtocol.java:174] -  [DUBBO] disconnected from /192.168.76.1:20880,url:dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.TenantService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.TenantService&category=providers&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&heartbeat=60000&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&path=com.me.yimu.pay.user.api.TenantService&pid=24856&protocol=dubbo&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.76.1&release=2.7.3&remote.application=user-service&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674542554175, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,052 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractProtocol.java:66] -  [DUBBO] Destroy reference: dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.AuthorizationService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.AuthorizationService&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&path=com.me.yimu.pay.user.api.AuthorizationService&pid=24856&protocol=dubbo&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.76.1&release=2.7.3&remote.application=user-service&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674542552359, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,052 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractProtocol.java:79] -  [DUBBO] Unexport service: dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24856&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674542587507, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,054 INFO [RMI TCP Connection(2)-127.0.0.1][Server.java:112] -  [DUBBO] qos-server stopped., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,054 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractProtocol.java:79] -  [DUBBO] Unexport service: injvm://127.0.0.1/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24856&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674542587507, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,055 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24856&register=true&release=2.7.3&side=provider&timestamp=1674542587507, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,055 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=24856&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674542587507, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,056 INFO [Exporter-Unexport-thread-1][RegistryProtocol.java:689] -  [DUBBO] Waiting 10000ms for registry to notify all consumers before unexport. Usually, this is called when you use dubbo API, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,060 INFO [RMI TCP Connection(2)-127.0.0.1][NacosServiceRegistry.java:74] - De-registering from Nacos Server now...
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,062 INFO [RMI TCP Connection(2)-127.0.0.1][NacosServiceRegistry.java:93] - De-registration finished.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,064 INFO [RMI TCP Connection(2)-127.0.0.1][ExecutorConfigurationSupport.java:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,070 DEBUG [RMI TCP Connection(2)-127.0.0.1][AbstractRedisClient.java:436] - Initiate shutdown ([100, 100, MILLISECONDS], [100, 100, MILLISECONDS], {})
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,074 DEBUG [RMI TCP Connection(2)-127.0.0.1][DefaultClientResources.java:576] - Initiate shutdown ([0, 2, SECONDS], [0, 2, SECONDS], {})
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,076 DEBUG [RMI TCP Connection(2)-127.0.0.1][DefaultEventLoopGroupProvider.java:202] - Initiate shutdown ([0, 2, SECONDS], [0, 2, SECONDS], {})
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,079 INFO [RMI TCP Connection(2)-127.0.0.1][DruidDataSource.java:1885] - {dataSource-1} closing ...
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,083 DEBUG [RMI TCP Connection(2)-127.0.0.1][Log4j2Filter.java:132] - {conn-10001} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,083 DEBUG [RMI TCP Connection(2)-127.0.0.1][Log4j2Filter.java:132] - {conn-10002} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,084 DEBUG [RMI TCP Connection(2)-127.0.0.1][Log4j2Filter.java:132] - {conn-10003} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,084 DEBUG [RMI TCP Connection(2)-127.0.0.1][Log4j2Filter.java:132] - {conn-10004} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,085 DEBUG [RMI TCP Connection(2)-127.0.0.1][PreparedStatementPool.java:160] - {conn-10005, pstmt-20000} exit cache
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,085 DEBUG [RMI TCP Connection(2)-127.0.0.1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,086 DEBUG [RMI TCP Connection(2)-127.0.0.1][Log4j2Filter.java:132] - {conn-10005} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,087 INFO [RMI TCP Connection(2)-127.0.0.1][DruidDataSource.java:1955] - {dataSource-1} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,090 INFO [RMI TCP Connection(2)-127.0.0.1][DubboGenericServiceFactory.java:159] - The Dubbo GenericService ReferenceBeans are destroying...
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,091 INFO [RMI TCP Connection(2)-127.0.0.1][AnnotationInjectedBeanPostProcessor.java:293] - org.apache.dubbo.common.bytecode.proxy1@25b7727 was destroying!
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,091 INFO [RMI TCP Connection(2)-127.0.0.1][AnnotationInjectedBeanPostProcessor.java:293] - org.apache.dubbo.common.bytecode.proxy0@40488fcb was destroying!
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,091 INFO [RMI TCP Connection(2)-127.0.0.1][AnnotationInjectedBeanPostProcessor.java:305] - class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,092 INFO [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - Pausing ProtocolHandler ["http-nio-56020"]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,324 INFO [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - Stopping service [Tomcat]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,328 INFO [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - Destroying Spring FrameworkServlet 'dispatcherServlet'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,333 INFO [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - Stopping ProtocolHandler ["http-nio-56020"]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:31,337 INFO [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - Destroying ProtocolHandler ["http-nio-56020"]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:33,280 DEBUG [NettyServerWorker-6-1][PoolThreadCache.java:250] - Freed 8 thread-local buffer(s) from thread: NettyServerWorker-6-1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:33,280 DEBUG [NettyServerWorker-6-2][PoolThreadCache.java:250] - Freed 9 thread-local buffer(s) from thread: NettyServerWorker-6-2
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:56:37,805 ERROR [ThreadPoolTaskScheduler-1][TaskUtils.java:96] - Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@44828f6b has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:10,468 INFO [main][:] - using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:10,481 INFO [main][WelcomeLogoApplicationListener.java:63] - 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:10,486 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=uaa-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22220, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.me.yimu.pay}
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:10,840 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7219cbc9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:10,919 INFO [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] -  [Dubbo] Current Spring Boot Application is await...
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:11,315 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=uaa-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22220, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.me.yimu.pay}
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:11,436 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:11,445 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-starter-druid.yaml', group: 'COMMON_GROUP'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:11,452 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'jwt.yaml', group: 'COMMON_GROUP'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:11,459 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'uaa-service.yaml', group: 'YIMUPAY_GROUP'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:11,461 INFO [main][PropertySourceBootstrapConfiguration.java:98] - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@571928572 {name='uaa-service.yaml', properties={spring.datasource.druid.url=jdbc:mysql://127.0.0.1:3306/yimupay_uaa?useUnicode=true&serverTimezone=Asia/Shanghai&useSSL=false, server.servlet.context‐path=/uaa, spring.datasource.druid.password=mnj852123, spring.datasource.druid.username=root}}, NacosPropertySource@1952194564 {name='jwt.yaml', properties={siging-key=yimu123}}, NacosPropertySource@114990534 {name='spring-boot-starter-druid.yaml', properties={spring.datasource.druid.stat‐view‐servlet.enabled=true, spring.datasource.druid.web‐stat‐filter.session‐stat‐max‐count=1000, spring.datasource.druid.validation‐query=SELECT 1 FROM DUAL, spring.datasource.druid.min‐idle=5, spring.datasource.druid.stat‐view‐servlet.reset‐enable=false, spring.datasource.druid.stat‐view‐servlet.allow=127.0.0.1,192.168.163.1, spring.datasource.druid.stat‐view‐servlet.login‐username=admin, spring.datasource.druid.stat‐view‐servlet.deny=192.168.1.73, spring.datasource.druid.filters=config,stat,wall,log4j2, spring.datasource.druid.test‐on‐borrow=true, spring.datasource.druid.filter.stat.slow‐sql‐millis=1, spring.datasource.druid.web‐stat‐filter.session‐stat‐enable=false, spring.datasource.druid.web‐stat‐filter.principal‐cookie‐name=admin, spring.datasource.druid.test‐on‐return=false, spring.datasource.druid.web‐stat‐filter.enabled=true, spring.datasource.druid.pool‐prepared‐statements=true, spring.datasource.druid.test‐while‐idle=true, spring.datasource.druid.filter.stat.log‐slow‐sql=true, spring.datasource.druid.time‐between‐eviction‐runs‐millis=60000, spring.datasource.password=yourpassword, spring.datasource.druid.web‐stat‐filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*, spring.datasource.druid.stat‐view‐servlet.login‐password=admin, spring.datasource.druid.web‐stat‐filter.url‐pattern=/*, spring.datasource.username=root, spring.datasource.druid.web‐stat‐filter.profile‐enable=true, spring.datasource.druid.aop‐patterns=com.me.yimu.pay.*.service.*, spring.datasource.druid.max‐wait=60000, spring.datasource.url=jdbc:mysql://localhost:3306/oauth?useUnicode=true, spring.datasource.driver‐class‐name=com.mysql.cj.jdbc.Driver, spring.datasource.druid.web‐stat‐filter.principal‐session‐name=admin, spring.datasource.druid.max‐pool‐prepared‐statement‐per‐connection‐size=20, spring.datasource.druid.min‐evictable‐idle‐time‐millis=300000, spring.datasource.type=com.alibaba.druid.pool.DruidDataSource, spring.datasource.druid.initial‐size=5, spring.datasource.druid.max‐active=20, spring.datasource.druid.stat‐view‐servlet.url‐pattern=/druid/*}}, NacosPropertySource@134048221 {name='spring-boot-http.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.enabled=true, server.servlet.context‐path=/, spring.messages.encoding=UTF‐8, spring.http.encoding.force=true, server.tomcat.protocol_header=x‐forwarded‐proto, server.tomcat.remote_ip_header=x‐forwarded‐for, server.use‐forward‐headers=true}}]}
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:11,489 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,202 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,205 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,220 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ApplicationConfig] within prefix [dubbo.applications]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,221 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.modules]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,221 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.RegistryConfig] within prefix [dubbo.registries]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,221 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ProtocolConfig] within prefix [dubbo.protocols]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,222 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitors]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,222 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.providers]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,222 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ConsumerConfig] within prefix [dubbo.consumers]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,223 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-centers]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,224 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-reports]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,225 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,226 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,226 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.module]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,226 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,226 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,226 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,227 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,227 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,227 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,227 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,227 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,228 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-center]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,228 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-report]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,393 INFO [main][RepositoryConfigurationDelegate.java:244] - Multiple Spring Data modules found, entering strict repository configuration mode!
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,396 INFO [main][RepositoryConfigurationDelegate.java:126] - Bootstrapping Spring Data repositories in DEFAULT mode.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,435 INFO [main][RepositoryConfigurationDelegate.java:182] - Finished Spring Data repository scanning in 24ms. Found 0 repository interfaces.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,557 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,617 INFO [main][ServiceAnnotationBeanPostProcessor.java:204] -  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,618 INFO [main][ServiceAnnotationBeanPostProcessor.java:206] -  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,628 DEBUG [main][ClassPathScanningCandidateComponentProvider.java:437] - Identified candidate component class: file [D:\projects\yimu-pay\yimupay-uaa\yimupay-uaa-service\target\classes\com\me\yimu\pay\uaa\service\OauthClientDetailsServiceImpl.class]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,650 DEBUG [main][ClassPathScanningCandidateComponentProvider.java:437] - Identified candidate component class: file [D:\projects\yimu-pay\yimupay-uaa\yimupay-uaa-service\target\classes\com\me\yimu\pay\uaa\service\OauthClientDetailsServiceImpl.class]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,657 INFO [main][ServiceAnnotationBeanPostProcessor.java:284] -  [DUBBO] The BeanDefinition[Root bean: class [org.apache.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,658 INFO [main][ServiceAnnotationBeanPostProcessor.java:161] -  [DUBBO] 1 annotated Dubbo's @Service Components { [Bean definition with name 'oauthClientDetailsServiceImpl': Generic bean: class [com.me.yimu.pay.uaa.service.OauthClientDetailsServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\projects\yimu-pay\yimupay-uaa\yimupay-uaa-service\target\classes\com\me\yimu\pay\uaa\service\OauthClientDetailsServiceImpl.class]] } were scanned under package[com.me.yimu.pay], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,660 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,660 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,837 INFO [main][GenericScope.java:294] - BeanFactory id=714e8eaa-2b15-39ff-abfc-60d087ea5881
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:12,882 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:13,019 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$55ffc8cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:13,133 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:13,145 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:13,149 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$d9c117d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:13,167 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:13,185 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:13,199 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:13,206 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:13,207 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:13,208 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$4c00b44a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:13,213 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$deaabca2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:13,221 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:13,225 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:13,231 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$9eeff65c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:13,237 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$92baff21] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:13,251 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$1dad9250] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:13,260 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:13,263 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:13,626 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:13,634 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:13,661 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:13,665 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$6b1e8f2a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,024 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,028 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,033 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,037 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,115 WARN [main][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,116 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,150 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,168 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,177 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$a3415b00] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,186 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,192 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$dd175700] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,200 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$b193485d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,209 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$63e00a76] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,216 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$1ef6f065] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,223 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,228 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,236 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$45c26793] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,251 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,257 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$939ee5ec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,272 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,275 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,283 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,289 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,324 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,336 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,343 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$70339460] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,352 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,356 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,364 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,373 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,373 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,390 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,400 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,403 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,405 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,425 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$7219cbc9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,785 INFO [main][TomcatWebServer.java:90] - Tomcat initialized with port(s): 56020 (http)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,814 INFO [main][DirectJDKLog.java:173] - Initializing ProtocolHandler ["http-nio-56020"]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,823 INFO [main][DirectJDKLog.java:173] - Starting service [Tomcat]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,824 INFO [main][DirectJDKLog.java:173] - Starting Servlet engine: [Apache Tomcat/9.0.16]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,832 INFO [main][DirectJDKLog.java:173] - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\jdk\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\jdk\jre\bin;D:/jdk/bin/../jre/bin/server;D:/jdk/bin/../jre/bin;D:/jdk/bin/../jre/lib/amd64;D:\VMware-workstation-full-16\bin\;D:\jdk\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\maven\apache-maven-3.6.3\bin;D:\Mysql5.6.31\mysql\bin;D:\VSCode\bin;D:\node-v10.14.2\;D:\winscp\;D:\Git\cmd;D:\projects\yimu-pay-web\shanjupay-web\node_modules\.bin;C:\Program Files (x86)\Yarn\bin\;C:\Users\PC\AppData\Local\Microsoft\WindowsApps;C:\Users\PC\AppData\Roaming\npm;C:\Users\PC\AppData\Local\Yarn\bin;D:\ecplise\eclipse;;.]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,950 INFO [main][DirectJDKLog.java:173] - Initializing Spring embedded WebApplicationContext
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:14,950 INFO [main][ServletWebServerApplicationContext.java:296] - Root WebApplicationContext: initialization completed in 3451 ms
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,408 INFO [main][DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,672 DEBUG [main][Log4j2Filter.java:132] - {conn-10001,procId-88} connected
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,678 DEBUG [main][Log4j2Filter.java:132] - {conn-10002,procId-89} connected
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,682 DEBUG [main][Log4j2Filter.java:132] - {conn-10003,procId-90} connected
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,686 DEBUG [main][Log4j2Filter.java:132] - {conn-10004,procId-91} connected
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,689 DEBUG [main][Log4j2Filter.java:132] - {conn-10005,procId-92} connected
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,695 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,819 DEBUG [main][InternalLoggerFactory.java:43] - Using SLF4J as the default logging framework
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,824 DEBUG [main][DefaultClientResources.java:109] - -Dio.netty.eventLoopThreads: 16
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,835 DEBUG [main][DefaultEventLoopGroupProvider.java:138] - Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,861 DEBUG [main][ResourceLeakDetector.java:129] - -Dio.netty.leakDetection.level: simple
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,861 DEBUG [main][ResourceLeakDetector.java:130] - -Dio.netty.leakDetection.targetRecords: 4
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,865 DEBUG [main][PlatformDependent.java:955] - Platform: Windows
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,869 DEBUG [main][PlatformDependent0.java:395] - -Dio.netty.noUnsafe: false
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,869 DEBUG [main][PlatformDependent0.java:871] - Java version: 8
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,871 DEBUG [main][PlatformDependent0.java:120] - sun.misc.Unsafe.theUnsafe: available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,871 DEBUG [main][PlatformDependent0.java:144] - sun.misc.Unsafe.copyMemory: available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,872 DEBUG [main][PlatformDependent0.java:182] - java.nio.Buffer.address: available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,873 DEBUG [main][PlatformDependent0.java:243] - direct buffer constructor: available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,874 DEBUG [main][PlatformDependent0.java:313] - java.nio.Bits.unaligned: available, true
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,874 DEBUG [main][PlatformDependent0.java:378] - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,874 DEBUG [main][PlatformDependent0.java:385] - java.nio.DirectByteBuffer.<init>(long, int): available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,875 DEBUG [main][PlatformDependent.java:992] - sun.misc.Unsafe: available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,875 DEBUG [main][PlatformDependent.java:1086] - -Dio.netty.tmpdir: C:\Users\PC\AppData\Local\Temp (java.io.tmpdir)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,876 DEBUG [main][PlatformDependent.java:1165] - -Dio.netty.bitMode: 64 (sun.arch.data.model)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,877 DEBUG [main][PlatformDependent.java:157] - -Dio.netty.maxDirectMemory: 15237906432 bytes
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,877 DEBUG [main][PlatformDependent.java:164] - -Dio.netty.uninitializedArrayAllocationThreshold: -1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,879 DEBUG [main][CleanerJava6.java:92] - java.nio.ByteBuffer.cleaner(): available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,880 DEBUG [main][PlatformDependent.java:184] - -Dio.netty.noPreferDirect: false
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,880 DEBUG [main][ResourceLeakDetectorFactory.java:202] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@27053257
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,882 DEBUG [main][PlatformDependent.java:860] - org.jctools-core.MpscChunkedArrayQueue: available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,896 DEBUG [main][Loggers.java:249] - Using Slf4j logging framework
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,914 DEBUG [main][Loggers.java:249] - Starting UnsafeSupport init in Java 1.8
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,915 DEBUG [main][Loggers.java:249] - Unsafe is available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,987 DEBUG [main][PooledByteBufAllocator.java:126] - -Dio.netty.allocator.numHeapArenas: 32
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,988 DEBUG [main][PooledByteBufAllocator.java:127] - -Dio.netty.allocator.numDirectArenas: 32
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,988 DEBUG [main][PooledByteBufAllocator.java:129] - -Dio.netty.allocator.pageSize: 8192
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,988 DEBUG [main][PooledByteBufAllocator.java:134] - -Dio.netty.allocator.maxOrder: 11
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,989 DEBUG [main][PooledByteBufAllocator.java:138] - -Dio.netty.allocator.chunkSize: 16777216
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,989 DEBUG [main][PooledByteBufAllocator.java:139] - -Dio.netty.allocator.tinyCacheSize: 512
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,990 DEBUG [main][PooledByteBufAllocator.java:140] - -Dio.netty.allocator.smallCacheSize: 256
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,990 DEBUG [main][PooledByteBufAllocator.java:141] - -Dio.netty.allocator.normalCacheSize: 64
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,990 DEBUG [main][PooledByteBufAllocator.java:142] - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,990 DEBUG [main][PooledByteBufAllocator.java:143] - -Dio.netty.allocator.cacheTrimInterval: 8192
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,991 DEBUG [main][PooledByteBufAllocator.java:144] - -Dio.netty.allocator.useCacheForAllThreads: true
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,991 DEBUG [main][PooledByteBufAllocator.java:145] - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,996 DEBUG [main][InternalThreadLocalMap.java:54] - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:15,996 DEBUG [main][InternalThreadLocalMap.java:57] - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:16,717 WARN [main][JwtAccessTokenConverter.java:302] - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:16,887 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements org.apache.dubbo.rpc.Protocol {
public void destroy()  {
throw new UnsupportedOperationException("The method public abstract void org.apache.dubbo.rpc.Protocol.destroy() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort()  {
throw new UnsupportedOperationException("The method public abstract int org.apache.dubbo.rpc.Protocol.getDefaultPort() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public org.apache.dubbo.rpc.Exporter export(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public org.apache.dubbo.rpc.Invoker refer(java.lang.Class arg0, org.apache.dubbo.common.URL arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:16,978 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements org.apache.dubbo.rpc.cluster.Cluster {
public org.apache.dubbo.rpc.Invoker join(org.apache.dubbo.rpc.cluster.Directory arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.Cluster) name from url (" + url.toString() + ") use keys([cluster])");
org.apache.dubbo.rpc.cluster.Cluster extension = (org.apache.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:16,991 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements org.apache.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0, boolean arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public org.apache.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, org.apache.dubbo.common.URL arg2) throws org.apache.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,039 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,062 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,070 INFO [main][AnnotatedInterfaceConfigBeanBuilder.java:84] - The configBean[type:ReferenceBean] has been built.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,088 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,137 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,138 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,154 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.registry;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements org.apache.dubbo.registry.RegistryFactory {
public org.apache.dubbo.registry.Registry getRegistry(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.registry.RegistryFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.registry.RegistryFactory extension = (org.apache.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,162 INFO [main][QosProtocolWrapper.java:89] -  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,162 WARN [main][SpringExtensionFactory.java:86] -  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,165 DEBUG [main][SpringExtensionFactory.java:99] -  [DUBBO] Error when get spring extension(bean) for type:org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.76.1
org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.context.ConfigurableApplicationContext' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1123)
	at org.apache.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:94)
	at org.apache.dubbo.common.extension.factory.AdaptiveExtensionFactory.getExtension(AdaptiveExtensionFactory.java:47)
	at org.apache.dubbo.common.extension.ExtensionLoader.injectExtension(ExtensionLoader.java:566)
	at org.apache.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:535)
	at org.apache.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:351)
	at org.apache.dubbo.registry.RegistryFactory$Adaptive.getRegistry(RegistryFactory$Adaptive.java)
	at org.apache.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:379)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:128)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:69)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:70)
	at org.apache.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at org.apache.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:401)
	at org.apache.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:329)
	at org.apache.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:250)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.init(ReferenceAnnotationBeanPostProcessor.java:269)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.access$100(ReferenceAnnotationBeanPostProcessor.java:242)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildInvocationHandler(ReferenceAnnotationBeanPostProcessor.java:236)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildProxy(ReferenceAnnotationBeanPostProcessor.java:219)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.doGetInjectedBean(ReferenceAnnotationBeanPostProcessor.java:134)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.getInjectedObject(AnnotationInjectedBeanPostProcessor.java:360)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor$AnnotatedFieldElement.inject(AnnotationInjectedBeanPostProcessor.java:540)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.postProcessPropertyValues(AnnotationInjectedBeanPostProcessor.java:147)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.me.yimu.pay.uaa.UAABootstrap.main(UAABootstrap.java:14)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,171 WARN [main][SpringExtensionFactory.java:104] -  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,195 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements org.apache.dubbo.rpc.cluster.RouterFactory {
public org.apache.dubbo.rpc.cluster.Router getRouter(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.RouterFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.cluster.RouterFactory extension = (org.apache.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,229 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543437088, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,229 DEBUG [main][AbstractSpringCloudRegistry.java:116] - The URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543437088] should not be registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,242 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543437088, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,251 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : user-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,251 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] can't be found when the subscribed service[name : user-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,252 INFO [main][DubboServiceMetadataRepository.java:280] - The metadata of Dubbo service[name : user-service] is about to be initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,275 WARN [main][DubboServiceMetadataRepository.java:484] - The Spring application[name : user-service] does not expose The REST metadata in the Dubbo services.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,276 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,276 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : merchant-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,276 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] can't be found when the subscribed service[name : merchant-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,277 INFO [main][DubboServiceMetadataRepository.java:280] - The metadata of Dubbo service[name : merchant-service] is about to be initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,342 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,346 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,347 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,348 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543437343&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,348 DEBUG [main][AbstractSpringCloudRegistry.java:116] - The URL[consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543437343&version=1.0.0] should not be registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,348 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543437343&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,370 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {
public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([client, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public org.apache.dubbo.remoting.Server bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([server, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,381 DEBUG [main][MultithreadEventLoopGroup.java:44] - -Dio.netty.eventLoopThreads: 32
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,386 DEBUG [main][NioEventLoop.java:105] - -Dio.netty.noKeySetOptimization: false
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,387 DEBUG [main][NioEventLoop.java:106] - -Dio.netty.selectorAutoRebuildThreshold: 512
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,572 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {
public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,584 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.common.threadpool;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements org.apache.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.common.threadpool.ThreadPool) name from url (" + url.toString() + ") use keys([threadpool])");
org.apache.dubbo.common.threadpool.ThreadPool extension = (org.apache.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(org.apache.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,635 DEBUG [main][DefaultChannelId.java:79] - -Dio.netty.processId: 15920 (auto-detected)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,639 DEBUG [main][NetUtil.java:139] - -Djava.net.preferIPv4Stack: false
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,640 DEBUG [main][NetUtil.java:140] - -Djava.net.preferIPv6Addresses: false
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,896 DEBUG [main][NetUtil.java:224] - Loopback interface: [lo, Software Loopback Interface 1, 127.0.0.1] ([lo, Software Loopback Interface 1, 127.0.0.1], {})
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:17,899 DEBUG [main][NetUtil.java:289] - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,159 DEBUG [main][DefaultChannelId.java:101] - -Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,179 DEBUG [main][ByteBufUtil.java:83] - -Dio.netty.allocator.type: pooled
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,179 DEBUG [main][ByteBufUtil.java:92] - -Dio.netty.threadLocalDirectBufferSize: 0
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,180 DEBUG [main][ByteBufUtil.java:95] - -Dio.netty.maxThreadLocalCharBufferSize: 16384
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,212 INFO [main][AbstractClient.java:199] -  [DUBBO] Succeed connect to server /192.168.76.1:20890 from NettyClient 192.168.76.1 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0xd81e3dc6, L:/192.168.76.1:51700 - R:/192.168.76.1:20890]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,213 INFO [main][AbstractClient.java:71] -  [DUBBO] Start NettyClient DESKTOP-82R6ISH/192.168.76.1 connect to the server /192.168.76.1:20890, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,238 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.cache;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements org.apache.dubbo.cache.CacheFactory {
public org.apache.dubbo.cache.Cache getCache(org.apache.dubbo.common.URL arg0, org.apache.dubbo.rpc.Invocation arg1)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.cache.CacheFactory) name from url (" + url.toString() + ") use keys([cache])");
org.apache.dubbo.cache.CacheFactory extension = (org.apache.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,250 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.monitor;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory {
public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,259 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.validation;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements org.apache.dubbo.validation.Validation {
public org.apache.dubbo.validation.Validator getValidator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.validation.Validation) name from url (" + url.toString() + ") use keys([validation])");
org.apache.dubbo.validation.Validation extension = (org.apache.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(org.apache.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,279 INFO [main][AbstractRegistry.java:212] -  [DUBBO] Load registry cache file C:\Users\PC\.dubbo\dubbo-registry-uaa-service-127.0.0.1:8848.cache, data: {com.me.yimu.pay.user.api.TenantService=dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.TenantService?anyhost=true&application=user-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.TenantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&path=com.me.yimu.pay.user.api.TenantService&pid=20332&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1674542554175, user-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.76.1:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=user-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=19148&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674405991854&version=1.0.0, merchant-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.76.1:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=5044&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674534664179&version=1.0.0, merchant-application/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.76.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=24532&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674534670247&version=1.0.0, com.me.yimu.pay.user.api.AuthorizationService=dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.AuthorizationService?anyhost=true&application=user-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.AuthorizationService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&path=com.me.yimu.pay.user.api.AuthorizationService&pid=20332&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1674542552359}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,281 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543437343&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,293 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543437343&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,302 INFO [main][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543437343&version=1.0.0, urls: [dubbo://192.168.76.1:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=5392&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674542741463&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,308 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543437343&version=1.0.0, urls: [dubbo://192.168.76.1:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=5392&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674542741463&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,311 INFO [main][ReferenceConfig.java:421] -  [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&check=false&cluster=registryaware&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15920&qos.enable=false&qos.port=22220&refer=application%3Duaa-service%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dtrue%26group%3Dmerchant-service%26interface%3Dcom.alibaba.cloud.dubbo.service.DubboMetadataService%26lazy%3Dfalse%26pid%3D15920%26qos.enable%3Dfalse%26qos.port%3D22220%26register.ip%3D192.168.76.1%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1674543437343%26version%3D1.0.0&register.ip=192.168.76.1&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543437343&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,341 DEBUG [main][Recycler.java:96] - -Dio.netty.recycler.maxCapacityPerThread: 4096
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,341 DEBUG [main][Recycler.java:97] - -Dio.netty.recycler.maxSharedCapacityFactor: 2
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,341 DEBUG [main][Recycler.java:98] - -Dio.netty.recycler.linkCapacity: 16
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,342 DEBUG [main][Recycler.java:99] - -Dio.netty.recycler.ratio: 8
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,355 DEBUG [NettyClientWorker-4-1][AbstractByteBuf.java:61] - -Dio.netty.buffer.checkAccessible: true
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,356 DEBUG [NettyClientWorker-4-1][AbstractByteBuf.java:62] - -Dio.netty.buffer.checkBounds: true
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,356 DEBUG [NettyClientWorker-4-1][ResourceLeakDetectorFactory.java:202] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@214f3e63
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,415 DEBUG [DubboClientHandler-192.168.76.1:20890-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,416 WARN [main][DubboServiceMetadataRepository.java:484] - The Spring application[name : merchant-service] does not expose The REST metadata in the Dubbo services.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,419 DEBUG [DubboClientHandler-192.168.76.1:20890-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,419 DEBUG [main][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543437088] will notify all URLs : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,420 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : gateway-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,420 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,420 INFO [main][DubboServiceMetadataRepository.java:280] - The metadata of Dubbo service[name : gateway-service] is about to be initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,423 WARN [main][DubboServiceMetadataRepository.java:484] - The Spring application[name : gateway-service] does not expose The REST metadata in the Dubbo services.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,424 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,424 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : merchant-application]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,425 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] can't be found when the subscribed service[name : merchant-application], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,425 INFO [main][DubboServiceMetadataRepository.java:280] - The metadata of Dubbo service[name : merchant-application] is about to be initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,438 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,442 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,442 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,443 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543438438&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,444 DEBUG [main][AbstractSpringCloudRegistry.java:116] - The URL[consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543438438&version=1.0.0] should not be registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,444 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543438438&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,447 INFO [main][AbstractClient.java:199] -  [DUBBO] Succeed connect to server /192.168.76.1:20891 from NettyClient 192.168.76.1 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0x23884f94, L:/192.168.76.1:51710 - R:/192.168.76.1:20891]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,448 INFO [main][AbstractClient.java:71] -  [DUBBO] Start NettyClient DESKTOP-82R6ISH/192.168.76.1 connect to the server /192.168.76.1:20891, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,450 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543438438&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,455 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543438438&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,459 INFO [main][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543438438&version=1.0.0, urls: [dubbo://192.168.76.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=3548&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674542761528&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,461 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543438438&version=1.0.0, urls: [dubbo://192.168.76.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=3548&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674542761528&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,461 INFO [main][ReferenceConfig.java:421] -  [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&check=false&cluster=registryaware&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15920&qos.enable=false&qos.port=22220&refer=application%3Duaa-service%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dtrue%26group%3Dmerchant-application%26interface%3Dcom.alibaba.cloud.dubbo.service.DubboMetadataService%26lazy%3Dfalse%26pid%3D15920%26qos.enable%3Dfalse%26qos.port%3D22220%26register.ip%3D192.168.76.1%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1674543438438%26version%3D1.0.0&register.ip=192.168.76.1&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543438438&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,470 DEBUG [DubboClientHandler-192.168.76.1:20891-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,470 WARN [main][DubboServiceMetadataRepository.java:484] - The Spring application[name : merchant-application] does not expose The REST metadata in the Dubbo services.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,474 DEBUG [DubboClientHandler-192.168.76.1:20891-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,474 DEBUG [main][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543437088] will notify all URLs : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,476 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543437088, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,480 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543437088, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,484 INFO [main][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543437088, urls: [dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.TenantService?anyhost=true&application=user-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.TenantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&path=com.me.yimu.pay.user.api.TenantService&pid=20332&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1674542554175], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,487 INFO [main][AbstractClient.java:199] -  [DUBBO] Succeed connect to server /192.168.76.1:20880 from NettyClient 192.168.76.1 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0xdeb49fec, L:/192.168.76.1:51717 - R:/192.168.76.1:20880]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,488 INFO [main][AbstractClient.java:71] -  [DUBBO] Start NettyClient DESKTOP-82R6ISH/192.168.76.1 connect to the server /192.168.76.1:20880, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,489 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543437088, urls: [dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.TenantService?anyhost=true&application=user-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.TenantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&path=com.me.yimu.pay.user.api.TenantService&pid=20332&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1674542554175], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,490 INFO [main][ReferenceConfig.java:421] -  [DUBBO] Refer dubbo service com.me.yimu.pay.user.api.TenantService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&check=false&cluster=registryaware&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15920&qos.enable=false&qos.port=22220&refer=application%3Duaa-service%26check%3Dfalse%26dubbo%3D2.0.2%26interface%3Dcom.me.yimu.pay.user.api.TenantService%26lazy%3Dfalse%26methods%3DmodifyBundle%2CgetTenantByAccount%2CgetAccountByUsername%2CcreateBundle%2CinitBundle%2Clogin%2CisExistAccountByUsername%2CgetBundle%2CunbindTenant%2CremoveTenant%2CqueryTenants%2CqueryBundleByTenantType%2CgetAccountByMobile%2CgetApplicationDTOByClientId%2CqueryAccount%2CchangeBundle%2CisExistAccountInTenantByUsername%2CcreateAccountInTenant%2Cauthentication%2CqueryAccountRole%2CqueryAccountInTenant%2CisExistAccountByMobile%2CsendMessage%2CcreateTenantRelateAccount%2CcreateAccount%2CqueryAllBundle%2CgetTenant%2CqueryAdministratorByPage%2CisExistAccountInTenantByMobile%2CaccountPassword%2CcreateTenantAndAccount%2CbindTenant%26pid%3D15920%26qos.enable%3Dfalse%26qos.port%3D22220%26register.ip%3D192.168.76.1%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1674543437088&register.ip=192.168.76.1&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543437088, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,523 INFO [main][AnnotatedInterfaceConfigBeanBuilder.java:84] - The configBean[type:ReferenceBean] has been built.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,528 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,540 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,541 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,546 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543438528, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,546 DEBUG [main][AbstractSpringCloudRegistry.java:116] - The URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543438528] should not be registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,547 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543438528, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,547 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : user-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,547 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] can't be found when the subscribed service[name : user-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,547 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : user-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,547 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,547 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : merchant-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,551 DEBUG [DubboClientHandler-192.168.76.1:20890-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,551 DEBUG [main][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543438528] will notify all URLs : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,552 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : gateway-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,552 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,552 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,552 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,552 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : merchant-application]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,555 DEBUG [DubboClientHandler-192.168.76.1:20891-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,556 DEBUG [main][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543438528] will notify all URLs : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,556 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543438528, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,560 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543438528, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,564 INFO [main][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543438528, urls: [dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.AuthorizationService?anyhost=true&application=user-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.AuthorizationService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&path=com.me.yimu.pay.user.api.AuthorizationService&pid=20332&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1674542552359], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,566 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543438528, urls: [dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.AuthorizationService?anyhost=true&application=user-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.AuthorizationService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&path=com.me.yimu.pay.user.api.AuthorizationService&pid=20332&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1674542552359], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,566 INFO [main][ReferenceConfig.java:421] -  [DUBBO] Refer dubbo service com.me.yimu.pay.user.api.AuthorizationService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&check=false&cluster=registryaware&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15920&qos.enable=false&qos.port=22220&refer=application%3Duaa-service%26check%3Dfalse%26dubbo%3D2.0.2%26interface%3Dcom.me.yimu.pay.user.api.AuthorizationService%26lazy%3Dfalse%26methods%3DremoveRole%2CroleBindPrivilege%2CmodifyRole%2CcreateRole%2CunbindAccountRole%2CqueryPrivilege%2CqueryRole%2CqueryPrivilegeTree%2CqueryRoleByPage%2CbindAccountRole%2CqueryPrivilegeByGroupId%2CqueryTenantRole%2Cauthorize%26pid%3D15920%26qos.enable%3Dfalse%26qos.port%3D22220%26register.ip%3D192.168.76.1%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1674543438528&register.ip=192.168.76.1&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543438528, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,930 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,930 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,934 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,935 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,970 DEBUG [main][TraversableResolvers.java:60] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,971 DEBUG [main][ResourceBundleMessageInterpolator.java:89] - Loaded expression factory via original TCCL
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,979 DEBUG [main][TraversableResolvers.java:60] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,980 DEBUG [main][ConfigurationImpl.java:148] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,980 DEBUG [main][ConfigurationImpl.java:180] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,981 DEBUG [main][ConfigurationImpl.java:194] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,982 DEBUG [main][ValidationXmlParser.java:120] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,982 DEBUG [main][ResourceLoaderHelper.java:53] - Trying to load META-INF/validation.xml via user class loader
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,982 DEBUG [main][ResourceLoaderHelper.java:60] - Trying to load META-INF/validation.xml via TCCL
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,982 DEBUG [main][ResourceLoaderHelper.java:66] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,983 DEBUG [main][ValidationXmlParser.java:127] - No META-INF/validation.xml found. Using annotation based configuration only.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,988 DEBUG [main][ValidatorFactoryImpl.java:578] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,988 DEBUG [main][ValidatorFactoryImpl.java:579] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,988 DEBUG [main][ValidatorFactoryImpl.java:580] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,988 DEBUG [main][ValidatorFactoryImpl.java:581] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:18,989 DEBUG [main][ValidatorFactoryImpl.java:582] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:19,147 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:19,514 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:19,542 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:20,152 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/public/**'], []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:20,152 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/webjars/**'], []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:20,152 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/v2/**'], []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:20,152 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/swagger**'], []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:20,152 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/static/**'], []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:20,152 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/resources/**'], []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:20,319 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@e353e1d, org.springframework.security.web.context.SecurityContextPersistenceFilter@26b150cd, org.springframework.security.web.header.HeaderWriterFilter@55bafbc1, org.springframework.security.web.authentication.logout.LogoutFilter@58a0f75b, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@6fc3f1a7, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1f2d0ca2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@45e68fac, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6fb51e17, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1a1c308b, org.springframework.security.web.session.SessionManagementFilter@26d02dc6, org.springframework.security.web.access.ExceptionTranslationFilter@32029cd, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@95958d9]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:20,340 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@69ee0861, org.springframework.security.web.context.SecurityContextPersistenceFilter@35599228, org.springframework.security.web.header.HeaderWriterFilter@7136ad9a, org.springframework.security.web.authentication.logout.LogoutFilter@7b9f7087, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1067bc4c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@51ac72f7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@15324f25, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5de6c7d7, org.springframework.security.web.session.SessionManagementFilter@4fb42efa, org.springframework.security.web.access.ExceptionTranslationFilter@2b69ff13, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@207f7baa]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:20,738 INFO [main][EndpointLinksResolver.java:59] - Exposing 4 endpoint(s) beneath base path '/actuator'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,124 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : user-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,124 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : merchant-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,124 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,124 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : merchant-application] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,124 INFO [main][DubboServiceMetadataRepository.java:262] - The metadata of Dubbo services has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,244 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,246 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : user-service , size : 0] change is about to be dispatched
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,248 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : user-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,248 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] can't be found when the subscribed service[name : user-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,248 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : user-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,248 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,248 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : user-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,249 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] can't be found when the subscribed service[name : user-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,249 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : user-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,249 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,250 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : merchant-service , size : 1] change is about to be dispatched
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,250 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : merchant-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,255 DEBUG [DubboClientHandler-192.168.76.1:20890-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,256 DEBUG [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543437088] will notify all URLs : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,256 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : merchant-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,259 DEBUG [DubboClientHandler-192.168.76.1:20890-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,259 DEBUG [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543438528] will notify all URLs : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,260 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : gateway-service , size : 1] change is about to be dispatched
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,260 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : gateway-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,260 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,260 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,260 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,260 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : gateway-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,260 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,260 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,260 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,261 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : merchant-application , size : 1] change is about to be dispatched
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,261 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : merchant-application]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,264 DEBUG [DubboClientHandler-192.168.76.1:20891-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,265 DEBUG [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543437088] will notify all URLs : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,265 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : merchant-application]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,268 INFO [main][ServiceBean.java:112] -  [DUBBO] The service ready on spring started. service: com.me.yimu.pay.uaa.api.OauthClientDetailsService, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,269 DEBUG [DubboClientHandler-192.168.76.1:20891-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,269 DEBUG [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15920&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1674543438528] will notify all URLs : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,276 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,295 INFO [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.me.yimu.pay.uaa.api.OauthClientDetailsService to local registry url : injvm://127.0.0.1/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15920&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674543441279, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,295 INFO [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.me.yimu.pay.uaa.api.OauthClientDetailsService to url dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15920&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674543441279, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,295 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,296 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.me.yimu.pay.uaa.api.OauthClientDetailsService url dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15920&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674543441279 to registry registry://localhost:9090/org.apache.dubbo.registry.RegistryService?application=uaa-service&dubbo=2.0.2&pid=15920&qos.enable=false&qos.port=22220&registry=spring-cloud&release=2.7.3&timestamp=1674543441277, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,321 INFO [main][AbstractServer.java:73] -  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.76.1:20881, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,328 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15920&register=true&release=2.7.3&side=provider&timestamp=1674543441279, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,698 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15920&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674543441279, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,699 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService] is being subscribed for service[name : user-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,699 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.uaa.api.OauthClientDetailsService] can't be found when the subscribed service[name : user-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,699 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : user-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,699 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.uaa.api.OauthClientDetailsService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,700 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService] is being subscribed for service[name : merchant-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,702 DEBUG [DubboClientHandler-192.168.76.1:20890-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,702 DEBUG [main][AbstractSpringCloudRegistry.java:289] - The subscribed URL[provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15920&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674543441279] will notify all URLs : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,702 DEBUG [main][RegistryProtocol.java:524] -  [DUBBO] original override urls: [], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,703 DEBUG [main][RegistryProtocol.java:528] -  [DUBBO] subscribe url: provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15920&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674543441279, override urls: [], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,703 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService] is being subscribed for service[name : gateway-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,703 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.uaa.api.OauthClientDetailsService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,703 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,703 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.uaa.api.OauthClientDetailsService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,703 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService] is being subscribed for service[name : merchant-application]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,706 DEBUG [DubboClientHandler-192.168.76.1:20891-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,707 DEBUG [main][AbstractSpringCloudRegistry.java:289] - The subscribed URL[provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15920&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674543441279] will notify all URLs : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,707 DEBUG [main][RegistryProtocol.java:524] -  [DUBBO] original override urls: [], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,707 DEBUG [main][RegistryProtocol.java:528] -  [DUBBO] subscribe url: provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15920&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674543441279, override urls: [], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,707 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,708 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.me.yimu.pay.uaa.api.OauthClientDetailsService url dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15920&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674543441279 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&dubbo=2.0.2&pid=15920&qos.enable=false&qos.port=22220&registry=nacos&release=2.7.3&timestamp=1674543441277, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,708 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15920&register=true&release=2.7.3&side=provider&timestamp=1674543441279, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,711 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15920&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674543441279, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,715 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15920&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674543441279, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,715 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15920&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674543441279, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,720 INFO [main][DirectJDKLog.java:173] - Starting ProtocolHandler ["http-nio-56020"]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,740 INFO [main][TomcatWebServer.java:204] - Tomcat started on port(s): 56020 (http) with context path '/uaa'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,761 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,769 INFO [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to local registry url : injvm://127.0.0.1/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15920&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674543441761&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,769 INFO [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to url dubbo://192.168.76.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15920&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674543441761&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,769 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,769 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService url dubbo://192.168.76.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15920&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674543441761&version=1.0.0 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&dubbo=2.0.2&pid=15920&qos.enable=false&qos.port=22220&registry=nacos&release=2.7.3&timestamp=1674543441761, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,770 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.76.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15920&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674543441761&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,773 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.76.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15920&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674543441761&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,780 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.76.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15920&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674543441761&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,781 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.76.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15920&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674543441761&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,781 INFO [main][DubboMetadataServiceExporter.java:86] - The Dubbo service[<dubbo:service path="com.alibaba.cloud.dubbo.service.DubboMetadataService" ref="com.alibaba.cloud.dubbo.service.IntrospectiveDubboMetadataService@706dee4" prefix="dubbo.service.com.alibaba.cloud.dubbo.service.DubboMetadataService" generic="false" exported="true" unexported="false" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" version="1.0.0" group="uaa-service" dynamic="true" deprecated="false" register="true" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" />] has been exported.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,801 INFO [main][NacosServiceRegistry.java:62] - nacos registry, uaa-service 192.168.76.1:56020 register finished
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:21,808 INFO [main][StartupInfoLogger.java:59] - Started UAABootstrap in 12.076 seconds (JVM running for 13.644)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,714 INFO [http-nio-56020-exec-1][DirectJDKLog.java:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,714 INFO [http-nio-56020-exec-1][FrameworkServlet.java:524] - Initializing Servlet 'dispatcherServlet'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,738 INFO [http-nio-56020-exec-1][FrameworkServlet.java:546] - Completed initialization in 24 ms
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,766 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,879 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} created. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,888 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,888 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,901 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50000} query executed. 15.924 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,902 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50000} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,903 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50000} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,907 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50000} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,909 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50000} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,910 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,910 DEBUG [http-nio-56020-exec-1][PreparedStatementPool.java:129] - {conn-10005, pstmt-20000} enter cache
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,911 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,957 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,957 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,957 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,958 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50001} query executed. 1.0053 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,958 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50001} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,959 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50001} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,959 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50001} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,960 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50001} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,960 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,960 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,963 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,963 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,963 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,964 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50002} query executed. 0.8625 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,964 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50002} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,965 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50002} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,965 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50002} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,966 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50002} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,966 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,966 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,974 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,974 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,975 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,976 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50003} query executed. 1.1948 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,976 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50003} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,977 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50003} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,977 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50003} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,978 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50003} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,978 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:32,979 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:33,000 DEBUG [DubboClientHandler-192.168.76.1:20880-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:33,006 INFO [http-nio-56020-exec-1][IntegrationUserDetailsAuthenticationHandler.java:60] - {"@type":"com.me.yimu.pay.domain.BusinessException","errorCode":"E_110001","stackTrace":[{"className":"com.me.yimu.pay.user.service.TenantServiceImpl","fileName":"TenantServiceImpl.java","lineNumber":656,"methodName":"authentication","nativeMethod":false},{"className":"com.me.yimu.pay.user.service.TenantServiceImpl","fileName":"TenantServiceImpl.java","lineNumber":710,"methodName":"login","nativeMethod":false},{"className":"com.me.yimu.pay.user.service.TenantServiceImpl$$FastClassBySpringCGLIB$$d00c722","fileName":"<generated>","lineNumber":-1,"methodName":"invoke","nativeMethod":false},{"className":"org.springframework.cglib.proxy.MethodProxy","fileName":"MethodProxy.java","lineNumber":218,"methodName":"invoke","nativeMethod":false},{"className":"org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation","fileName":"CglibAopProxy.java","lineNumber":749,"methodName":"invokeJoinpoint","nativeMethod":false},{"className":"org.springframework.aop.framework.ReflectiveMethodInvocation","fileName":"ReflectiveMethodInvocation.java","lineNumber":163,"methodName":"proceed","nativeMethod":false},{"className":"com.alibaba.druid.support.spring.stat.DruidStatInterceptor","fileName":"DruidStatInterceptor.java","lineNumber":73,"methodName":"invoke","nativeMethod":false},{"className":"org.springframework.aop.framework.ReflectiveMethodInvocation","fileName":"ReflectiveMethodInvocation.java","lineNumber":186,"methodName":"proceed","nativeMethod":false},{"className":"org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor","fileName":"CglibAopProxy.java","lineNumber":688,"methodName":"intercept","nativeMethod":false},{"className":"com.me.yimu.pay.user.service.TenantServiceImpl$$EnhancerBySpringCGLIB$$ef12fa96","fileName":"<generated>","lineNumber":-1,"methodName":"login","nativeMethod":false},{"className":"com.me.yimu.pay.user.service.TenantServiceImpl$$FastClassBySpringCGLIB$$d00c722","fileName":"<generated>","lineNumber":-1,"methodName":"invoke","nativeMethod":false},{"className":"org.springframework.cglib.proxy.MethodProxy","fileName":"MethodProxy.java","lineNumber":218,"methodName":"invoke","nativeMethod":false},{"className":"org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation","fileName":"CglibAopProxy.java","lineNumber":749,"methodName":"invokeJoinpoint","nativeMethod":false},{"className":"org.springframework.aop.framework.ReflectiveMethodInvocation","fileName":"ReflectiveMethodInvocation.java","lineNumber":163,"methodName":"proceed","nativeMethod":false},{"className":"com.alibaba.druid.support.spring.stat.DruidStatInterceptor","fileName":"DruidStatInterceptor.java","lineNumber":73,"methodName":"invoke","nativeMethod":false},{"className":"org.springframework.aop.framework.ReflectiveMethodInvocation","fileName":"ReflectiveMethodInvocation.java","lineNumber":186,"methodName":"proceed","nativeMethod":false},{"className":"org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor","fileName":"CglibAopProxy.java","lineNumber":688,"methodName":"intercept","nativeMethod":false},{"className":"com.me.yimu.pay.user.service.TenantServiceImpl$$EnhancerBySpringCGLIB$$3a2350e0","fileName":"<generated>","lineNumber":-1,"methodName":"login","nativeMethod":false},{"className":"org.apache.dubbo.common.bytecode.Wrapper3","fileName":"Wrapper3.java","lineNumber":-1,"methodName":"invokeMethod","nativeMethod":false},{"className":"org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1","fileName":"JavassistProxyFactory.java","lineNumber":47,"methodName":"doInvoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.proxy.AbstractProxyInvoker","fileName":"AbstractProxyInvoker.java","lineNumber":84,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker","fileName":"DelegateProviderMetaDataInvoker.java","lineNumber":56,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.InvokerWrapper","fileName":"InvokerWrapper.java","lineNumber":56,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.filter.ExceptionFilter","fileName":"ExceptionFilter.java","lineNumber":55,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1","fileName":"ProtocolFilterWrapper.java","lineNumber":82,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.monitor.support.MonitorFilter","fileName":"MonitorFilter.java","lineNumber":92,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1","fileName":"ProtocolFilterWrapper.java","lineNumber":82,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.filter.TimeoutFilter","fileName":"TimeoutFilter.java","lineNumber":48,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1","fileName":"ProtocolFilterWrapper.java","lineNumber":82,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter","fileName":"TraceFilter.java","lineNumber":81,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1","fileName":"ProtocolFilterWrapper.java","lineNumber":82,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.filter.ContextFilter","fileName":"ContextFilter.java","lineNumber":96,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1","fileName":"ProtocolFilterWrapper.java","lineNumber":82,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.filter.GenericFilter","fileName":"GenericFilter.java","lineNumber":148,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1","fileName":"ProtocolFilterWrapper.java","lineNumber":82,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.filter.ClassLoaderFilter","fileName":"ClassLoaderFilter.java","lineNumber":38,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1","fileName":"ProtocolFilterWrapper.java","lineNumber":82,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.filter.EchoFilter","fileName":"EchoFilter.java","lineNumber":41,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1","fileName":"ProtocolFilterWrapper.java","lineNumber":82,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker","fileName":"ProtocolFilterWrapper.java","lineNumber":157,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1","fileName":"DubboProtocol.java","lineNumber":152,"methodName":"reply","nativeMethod":false},{"className":"org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler","fileName":"HeaderExchangeHandler.java","lineNumber":102,"methodName":"handleRequest","nativeMethod":false},{"className":"org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler","fileName":"HeaderExchangeHandler.java","lineNumber":193,"methodName":"received","nativeMethod":false},{"className":"org.apache.dubbo.remoting.transport.DecodeHandler","fileName":"DecodeHandler.java","lineNumber":51,"methodName":"received","nativeMethod":false},{"className":"org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable","fileName":"ChannelEventRunnable.java","lineNumber":57,"methodName":"run","nativeMethod":false},{"className":"java.util.concurrent.ThreadPoolExecutor","fileName":"ThreadPoolExecutor.java","lineNumber":1149,"methodName":"runWorker","nativeMethod":false},{"className":"java.util.concurrent.ThreadPoolExecutor$Worker","fileName":"ThreadPoolExecutor.java","lineNumber":624,"methodName":"run","nativeMethod":false},{"className":"java.lang.Thread","fileName":"Thread.java","lineNumber":748,"methodName":"run","nativeMethod":false}]}
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:33,009 ERROR [http-nio-56020-exec-1][TokenEndpoint.java:169] - Handling error: InternalAuthenticationServiceException, login error-账号不存在
org.springframework.security.authentication.InternalAuthenticationServiceException: login error-账号不存在
	at com.me.yimu.pay.uaa.integration.IntegrationUserDetailsAuthenticationProvider.retrieveUser(IntegrationUserDetailsAuthenticationProvider.java:53)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:144)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:175)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:200)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator.authenticate(WebSecurityConfigurerAdapter.java:513)
	at org.springframework.security.oauth2.provider.password.ResourceOwnerPasswordTokenGranter.getOAuth2Authentication(ResourceOwnerPasswordTokenGranter.java:71)
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.getAccessToken(AbstractTokenGranter.java:72)
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.grant(AbstractTokenGranter.java:67)
	at org.springframework.security.oauth2.provider.CompositeTokenGranter.grant(CompositeTokenGranter.java:38)
	at org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer$4.grant(AuthorizationServerEndpointsConfigurer.java:583)
	at org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(TokenEndpoint.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter.successfulAuthentication(ClientCredentialsTokenEndpointFilter.java:131)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:240)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:679)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.security.authentication.BadCredentialsException: login error-账号不存在
	at com.me.yimu.pay.uaa.integration.IntegrationUserDetailsAuthenticationHandler.authentication(IntegrationUserDetailsAuthenticationHandler.java:61)
	at com.me.yimu.pay.uaa.integration.IntegrationUserDetailsAuthenticationProvider.authenticationUser(IntegrationUserDetailsAuthenticationProvider.java:83)
	at com.me.yimu.pay.uaa.integration.IntegrationUserDetailsAuthenticationProvider.retrieveUser(IntegrationUserDetailsAuthenticationProvider.java:40)
	... 113 more
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,451 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,452 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,452 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,453 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50004} query executed. 1.2172 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,453 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50004} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,453 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50004} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,454 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50004} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,455 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50004} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,455 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,455 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,465 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,466 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,466 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,467 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50005} query executed. 1.1091 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,467 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50005} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,467 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50005} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,468 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50005} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,468 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50005} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,469 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,469 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,473 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,473 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,473 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,475 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50006} query executed. 1.233 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,475 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50006} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,475 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50006} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,476 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50006} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,477 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50006} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,477 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,478 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,481 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,481 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,482 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,484 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50007} query executed. 2.3329 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,484 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50007} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,485 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50007} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,486 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50007} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,487 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50007} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,487 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,487 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,502 DEBUG [DubboClientHandler-192.168.76.1:20880-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,503 INFO [http-nio-56020-exec-2][IntegrationUserDetailsAuthenticationHandler.java:60] - {"@type":"com.me.yimu.pay.domain.BusinessException","errorCode":"E_110001","stackTrace":[{"className":"com.me.yimu.pay.user.service.TenantServiceImpl","fileName":"TenantServiceImpl.java","lineNumber":656,"methodName":"authentication","nativeMethod":false},{"className":"com.me.yimu.pay.user.service.TenantServiceImpl","fileName":"TenantServiceImpl.java","lineNumber":710,"methodName":"login","nativeMethod":false},{"className":"com.me.yimu.pay.user.service.TenantServiceImpl$$FastClassBySpringCGLIB$$d00c722","fileName":"<generated>","lineNumber":-1,"methodName":"invoke","nativeMethod":false},{"className":"org.springframework.cglib.proxy.MethodProxy","fileName":"MethodProxy.java","lineNumber":218,"methodName":"invoke","nativeMethod":false},{"className":"org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation","fileName":"CglibAopProxy.java","lineNumber":749,"methodName":"invokeJoinpoint","nativeMethod":false},{"className":"org.springframework.aop.framework.ReflectiveMethodInvocation","fileName":"ReflectiveMethodInvocation.java","lineNumber":163,"methodName":"proceed","nativeMethod":false},{"className":"com.alibaba.druid.support.spring.stat.DruidStatInterceptor","fileName":"DruidStatInterceptor.java","lineNumber":73,"methodName":"invoke","nativeMethod":false},{"className":"org.springframework.aop.framework.ReflectiveMethodInvocation","fileName":"ReflectiveMethodInvocation.java","lineNumber":186,"methodName":"proceed","nativeMethod":false},{"className":"org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor","fileName":"CglibAopProxy.java","lineNumber":688,"methodName":"intercept","nativeMethod":false},{"className":"com.me.yimu.pay.user.service.TenantServiceImpl$$EnhancerBySpringCGLIB$$ef12fa96","fileName":"<generated>","lineNumber":-1,"methodName":"login","nativeMethod":false},{"className":"com.me.yimu.pay.user.service.TenantServiceImpl$$FastClassBySpringCGLIB$$d00c722","fileName":"<generated>","lineNumber":-1,"methodName":"invoke","nativeMethod":false},{"className":"org.springframework.cglib.proxy.MethodProxy","fileName":"MethodProxy.java","lineNumber":218,"methodName":"invoke","nativeMethod":false},{"className":"org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation","fileName":"CglibAopProxy.java","lineNumber":749,"methodName":"invokeJoinpoint","nativeMethod":false},{"className":"org.springframework.aop.framework.ReflectiveMethodInvocation","fileName":"ReflectiveMethodInvocation.java","lineNumber":163,"methodName":"proceed","nativeMethod":false},{"className":"com.alibaba.druid.support.spring.stat.DruidStatInterceptor","fileName":"DruidStatInterceptor.java","lineNumber":73,"methodName":"invoke","nativeMethod":false},{"className":"org.springframework.aop.framework.ReflectiveMethodInvocation","fileName":"ReflectiveMethodInvocation.java","lineNumber":186,"methodName":"proceed","nativeMethod":false},{"className":"org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor","fileName":"CglibAopProxy.java","lineNumber":688,"methodName":"intercept","nativeMethod":false},{"className":"com.me.yimu.pay.user.service.TenantServiceImpl$$EnhancerBySpringCGLIB$$3a2350e0","fileName":"<generated>","lineNumber":-1,"methodName":"login","nativeMethod":false},{"className":"org.apache.dubbo.common.bytecode.Wrapper3","fileName":"Wrapper3.java","lineNumber":-1,"methodName":"invokeMethod","nativeMethod":false},{"className":"org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1","fileName":"JavassistProxyFactory.java","lineNumber":47,"methodName":"doInvoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.proxy.AbstractProxyInvoker","fileName":"AbstractProxyInvoker.java","lineNumber":84,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker","fileName":"DelegateProviderMetaDataInvoker.java","lineNumber":56,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.InvokerWrapper","fileName":"InvokerWrapper.java","lineNumber":56,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.filter.ExceptionFilter","fileName":"ExceptionFilter.java","lineNumber":55,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1","fileName":"ProtocolFilterWrapper.java","lineNumber":82,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.monitor.support.MonitorFilter","fileName":"MonitorFilter.java","lineNumber":92,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1","fileName":"ProtocolFilterWrapper.java","lineNumber":82,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.filter.TimeoutFilter","fileName":"TimeoutFilter.java","lineNumber":48,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1","fileName":"ProtocolFilterWrapper.java","lineNumber":82,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter","fileName":"TraceFilter.java","lineNumber":81,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1","fileName":"ProtocolFilterWrapper.java","lineNumber":82,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.filter.ContextFilter","fileName":"ContextFilter.java","lineNumber":96,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1","fileName":"ProtocolFilterWrapper.java","lineNumber":82,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.filter.GenericFilter","fileName":"GenericFilter.java","lineNumber":148,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1","fileName":"ProtocolFilterWrapper.java","lineNumber":82,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.filter.ClassLoaderFilter","fileName":"ClassLoaderFilter.java","lineNumber":38,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1","fileName":"ProtocolFilterWrapper.java","lineNumber":82,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.filter.EchoFilter","fileName":"EchoFilter.java","lineNumber":41,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1","fileName":"ProtocolFilterWrapper.java","lineNumber":82,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker","fileName":"ProtocolFilterWrapper.java","lineNumber":157,"methodName":"invoke","nativeMethod":false},{"className":"org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1","fileName":"DubboProtocol.java","lineNumber":152,"methodName":"reply","nativeMethod":false},{"className":"org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler","fileName":"HeaderExchangeHandler.java","lineNumber":102,"methodName":"handleRequest","nativeMethod":false},{"className":"org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler","fileName":"HeaderExchangeHandler.java","lineNumber":193,"methodName":"received","nativeMethod":false},{"className":"org.apache.dubbo.remoting.transport.DecodeHandler","fileName":"DecodeHandler.java","lineNumber":51,"methodName":"received","nativeMethod":false},{"className":"org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable","fileName":"ChannelEventRunnable.java","lineNumber":57,"methodName":"run","nativeMethod":false},{"className":"java.util.concurrent.ThreadPoolExecutor","fileName":"ThreadPoolExecutor.java","lineNumber":1149,"methodName":"runWorker","nativeMethod":false},{"className":"java.util.concurrent.ThreadPoolExecutor$Worker","fileName":"ThreadPoolExecutor.java","lineNumber":624,"methodName":"run","nativeMethod":false},{"className":"java.lang.Thread","fileName":"Thread.java","lineNumber":748,"methodName":"run","nativeMethod":false}]}
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:41,504 ERROR [http-nio-56020-exec-2][TokenEndpoint.java:169] - Handling error: InternalAuthenticationServiceException, login error-账号不存在
org.springframework.security.authentication.InternalAuthenticationServiceException: login error-账号不存在
	at com.me.yimu.pay.uaa.integration.IntegrationUserDetailsAuthenticationProvider.retrieveUser(IntegrationUserDetailsAuthenticationProvider.java:53)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:144)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:175)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:200)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator.authenticate(WebSecurityConfigurerAdapter.java:503)
	at org.springframework.security.oauth2.provider.password.ResourceOwnerPasswordTokenGranter.getOAuth2Authentication(ResourceOwnerPasswordTokenGranter.java:71)
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.getAccessToken(AbstractTokenGranter.java:72)
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.grant(AbstractTokenGranter.java:67)
	at org.springframework.security.oauth2.provider.CompositeTokenGranter.grant(CompositeTokenGranter.java:38)
	at org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer$4.grant(AuthorizationServerEndpointsConfigurer.java:583)
	at org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(TokenEndpoint.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter.successfulAuthentication(ClientCredentialsTokenEndpointFilter.java:131)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:240)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:679)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.security.authentication.BadCredentialsException: login error-账号不存在
	at com.me.yimu.pay.uaa.integration.IntegrationUserDetailsAuthenticationHandler.authentication(IntegrationUserDetailsAuthenticationHandler.java:61)
	at com.me.yimu.pay.uaa.integration.IntegrationUserDetailsAuthenticationProvider.authenticationUser(IntegrationUserDetailsAuthenticationProvider.java:83)
	at com.me.yimu.pay.uaa.integration.IntegrationUserDetailsAuthenticationProvider.retrieveUser(IntegrationUserDetailsAuthenticationProvider.java:40)
	... 113 more
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:57:51,264 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:58:21,279 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:58:21,720 DEBUG [NettyClientWorker-4-2][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x23884f94, L:/192.168.76.1:51710 - R:/192.168.76.1:20891]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:58:21,720 DEBUG [NettyClientWorker-4-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xd81e3dc6, L:/192.168.76.1:51700 - R:/192.168.76.1:20890]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:58:21,722 DEBUG [NettyClientWorker-4-2][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-2, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:58:21,722 DEBUG [NettyClientWorker-4-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:58:41,514 DEBUG [NettyClientWorker-4-3][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xdeb49fec, L:/192.168.76.1:51717 - R:/192.168.76.1:20880]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:58:41,515 DEBUG [NettyClientWorker-4-3][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-3, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:58:51,297 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:58:54,390 DEBUG [NettyServerWorker-6-1][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:52167, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:59:13,311 DEBUG [NettyServerWorker-6-2][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:52369, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:59:21,316 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:59:21,723 DEBUG [NettyClientWorker-4-2][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x23884f94, L:/192.168.76.1:51710 - R:/192.168.76.1:20891]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:59:21,723 DEBUG [NettyClientWorker-4-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xd81e3dc6, L:/192.168.76.1:51700 - R:/192.168.76.1:20890]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:59:21,724 DEBUG [NettyClientWorker-4-2][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-2, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:59:21,724 DEBUG [NettyClientWorker-4-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:59:41,519 DEBUG [NettyClientWorker-4-3][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xdeb49fec, L:/192.168.76.1:51717 - R:/192.168.76.1:20880]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:59:41,520 DEBUG [NettyClientWorker-4-3][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-3, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:59:51,322 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-24 14:59:54,403 DEBUG [NettyServerWorker-6-1][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:52167, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
