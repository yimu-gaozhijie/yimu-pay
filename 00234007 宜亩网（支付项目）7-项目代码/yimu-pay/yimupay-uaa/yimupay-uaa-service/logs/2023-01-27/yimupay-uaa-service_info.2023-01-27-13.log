[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:05,816 INFO [main][:] - using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:05,829 INFO [main][WelcomeLogoApplicationListener.java:63] - 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:05,835 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=uaa-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22220, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=60000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.me.yimu.pay}
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:06,162 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e1707842] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:06,239 INFO [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] -  [Dubbo] Current Spring Boot Application is await...
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:06,584 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=uaa-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22220, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=60000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.me.yimu.pay}
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:06,691 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:06,698 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-starter-druid.yaml', group: 'COMMON_GROUP'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:06,707 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'jwt.yaml', group: 'COMMON_GROUP'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:06,711 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'uaa-service.yaml', group: 'YIMUPAY_GROUP'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:06,712 INFO [main][PropertySourceBootstrapConfiguration.java:98] - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@2063332705 {name='uaa-service.yaml', properties={spring.datasource.druid.url=jdbc:mysql://127.0.0.1:3306/yimupay_uaa?useUnicode=true&serverTimezone=Asia/Shanghai&useSSL=false, server.servlet.context‐path=/uaa, spring.datasource.druid.password=mnj852123, spring.datasource.druid.username=root}}, NacosPropertySource@798516062 {name='jwt.yaml', properties={siging-key=yimu123}}, NacosPropertySource@1237907176 {name='spring-boot-starter-druid.yaml', properties={spring.datasource.druid.stat‐view‐servlet.enabled=true, spring.datasource.druid.web‐stat‐filter.session‐stat‐max‐count=1000, spring.datasource.druid.validation‐query=SELECT 1 FROM DUAL, spring.datasource.druid.min‐idle=5, spring.datasource.druid.stat‐view‐servlet.reset‐enable=false, spring.datasource.druid.stat‐view‐servlet.allow=127.0.0.1,192.168.163.1, spring.datasource.druid.stat‐view‐servlet.login‐username=admin, spring.datasource.druid.stat‐view‐servlet.deny=192.168.1.73, spring.datasource.druid.filters=config,stat,wall,log4j2, spring.datasource.druid.test‐on‐borrow=true, spring.datasource.druid.filter.stat.slow‐sql‐millis=1, spring.datasource.druid.web‐stat‐filter.session‐stat‐enable=false, spring.datasource.druid.web‐stat‐filter.principal‐cookie‐name=admin, spring.datasource.druid.test‐on‐return=false, spring.datasource.druid.web‐stat‐filter.enabled=true, spring.datasource.druid.pool‐prepared‐statements=true, spring.datasource.druid.test‐while‐idle=true, spring.datasource.druid.filter.stat.log‐slow‐sql=true, spring.datasource.druid.time‐between‐eviction‐runs‐millis=60000, spring.datasource.password=yourpassword, spring.datasource.druid.web‐stat‐filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*, spring.datasource.druid.stat‐view‐servlet.login‐password=admin, spring.datasource.druid.web‐stat‐filter.url‐pattern=/*, spring.datasource.username=root, spring.datasource.druid.web‐stat‐filter.profile‐enable=true, spring.datasource.druid.aop‐patterns=com.me.yimu.pay.*.service.*, spring.datasource.druid.max‐wait=60000, spring.datasource.url=jdbc:mysql://localhost:3306/oauth?useUnicode=true, spring.datasource.driver‐class‐name=com.mysql.cj.jdbc.Driver, spring.datasource.druid.web‐stat‐filter.principal‐session‐name=admin, spring.datasource.druid.max‐pool‐prepared‐statement‐per‐connection‐size=20, spring.datasource.druid.min‐evictable‐idle‐time‐millis=300000, spring.datasource.type=com.alibaba.druid.pool.DruidDataSource, spring.datasource.druid.initial‐size=5, spring.datasource.druid.max‐active=20, spring.datasource.druid.stat‐view‐servlet.url‐pattern=/druid/*}}, NacosPropertySource@1795560878 {name='spring-boot-http.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.enabled=true, server.servlet.context‐path=/, spring.messages.encoding=UTF‐8, spring.http.encoding.force=true, server.tomcat.protocol_header=x‐forwarded‐proto, server.tomcat.remote_ip_header=x‐forwarded‐for, server.use‐forward‐headers=true}}]}
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:06,739 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,390 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,392 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,406 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ApplicationConfig] within prefix [dubbo.applications]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,407 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.modules]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,407 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.RegistryConfig] within prefix [dubbo.registries]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,407 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ProtocolConfig] within prefix [dubbo.protocols]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,408 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitors]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,408 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.providers]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,409 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ConsumerConfig] within prefix [dubbo.consumers]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,409 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-centers]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,410 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-reports]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,411 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,411 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,411 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.module]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,412 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,412 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,412 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,412 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,413 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,413 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,413 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,414 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,414 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-center]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,414 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-report]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,569 INFO [main][RepositoryConfigurationDelegate.java:244] - Multiple Spring Data modules found, entering strict repository configuration mode!
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,572 INFO [main][RepositoryConfigurationDelegate.java:126] - Bootstrapping Spring Data repositories in DEFAULT mode.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,611 INFO [main][RepositoryConfigurationDelegate.java:182] - Finished Spring Data repository scanning in 25ms. Found 0 repository interfaces.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,742 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,803 INFO [main][ServiceAnnotationBeanPostProcessor.java:204] -  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,803 INFO [main][ServiceAnnotationBeanPostProcessor.java:206] -  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,810 DEBUG [main][ClassPathScanningCandidateComponentProvider.java:437] - Identified candidate component class: file [D:\projects\yimu-pay\yimupay-uaa\yimupay-uaa-service\target\classes\com\me\yimu\pay\uaa\service\OauthClientDetailsServiceImpl.class]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,827 DEBUG [main][ClassPathScanningCandidateComponentProvider.java:437] - Identified candidate component class: file [D:\projects\yimu-pay\yimupay-uaa\yimupay-uaa-service\target\classes\com\me\yimu\pay\uaa\service\OauthClientDetailsServiceImpl.class]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,834 INFO [main][ServiceAnnotationBeanPostProcessor.java:284] -  [DUBBO] The BeanDefinition[Root bean: class [org.apache.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,834 INFO [main][ServiceAnnotationBeanPostProcessor.java:161] -  [DUBBO] 1 annotated Dubbo's @Service Components { [Bean definition with name 'oauthClientDetailsServiceImpl': Generic bean: class [com.me.yimu.pay.uaa.service.OauthClientDetailsServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\projects\yimu-pay\yimupay-uaa\yimupay-uaa-service\target\classes\com\me\yimu\pay\uaa\service\OauthClientDetailsServiceImpl.class]] } were scanned under package[com.me.yimu.pay], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,837 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,837 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:07,991 INFO [main][GenericScope.java:294] - BeanFactory id=c13da032-47f5-3e81-9f50-09c7d6c438dd
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:08,029 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:08,169 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c5567545] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:08,273 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:08,284 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:08,288 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$4917c449] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:08,304 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:08,318 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:08,332 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:08,338 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:08,341 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:08,342 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$bb5760c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:08,347 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$4e01691b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:08,354 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:08,358 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:08,364 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$e46a2d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:08,369 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$211ab9a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:08,381 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$8d043ec9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:08,387 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:08,390 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:08,705 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:08,712 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:08,736 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:08,740 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$da753ba3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,063 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,066 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,070 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,074 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,142 WARN [main][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,143 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,174 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,191 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,200 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$12980779] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,209 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,217 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$4c6e0379] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,223 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$20e9f4d6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,231 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$d336b6ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,237 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$8e4d9cde] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,244 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,250 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,259 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$b519140c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,273 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,278 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$2f59265] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,292 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,295 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,302 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,308 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,343 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,357 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,364 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$df8a40d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,373 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,377 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,386 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,394 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,395 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,412 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,420 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,422 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,425 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,444 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e1707842] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,788 INFO [main][TomcatWebServer.java:90] - Tomcat initialized with port(s): 56020 (http)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,802 INFO [main][DirectJDKLog.java:173] - Initializing ProtocolHandler ["http-nio-56020"]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,810 INFO [main][DirectJDKLog.java:173] - Starting service [Tomcat]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,811 INFO [main][DirectJDKLog.java:173] - Starting Servlet engine: [Apache Tomcat/9.0.16]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,817 INFO [main][DirectJDKLog.java:173] - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\jdk\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\jdk\jre\bin;D:/jdk/bin/../jre/bin/server;D:/jdk/bin/../jre/bin;D:/jdk/bin/../jre/lib/amd64;D:\VMware-workstation-full-16\bin\;D:\jdk\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\maven\apache-maven-3.6.3\bin;D:\Mysql5.6.31\mysql\bin;D:\VSCode\bin;D:\node-v10.14.2\;D:\winscp\;D:\Git\cmd;D:\projects\yimu-pay-web\shanjupay-web\node_modules\.bin;C:\Program Files (x86)\Yarn\bin\;C:\Users\PC\AppData\Local\Microsoft\WindowsApps;C:\Users\PC\AppData\Roaming\npm;C:\Users\PC\AppData\Local\Yarn\bin;D:\ecplise\eclipse;;.]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,929 INFO [main][DirectJDKLog.java:173] - Initializing Spring embedded WebApplicationContext
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:09,930 INFO [main][ServletWebServerApplicationContext.java:296] - Root WebApplicationContext: initialization completed in 3181 ms
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,343 INFO [main][DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,568 DEBUG [main][Log4j2Filter.java:132] - {conn-10001,procId-44} connected
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,574 DEBUG [main][Log4j2Filter.java:132] - {conn-10002,procId-45} connected
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,578 DEBUG [main][Log4j2Filter.java:132] - {conn-10003,procId-46} connected
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,582 DEBUG [main][Log4j2Filter.java:132] - {conn-10004,procId-47} connected
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,585 DEBUG [main][Log4j2Filter.java:132] - {conn-10005,procId-48} connected
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,591 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,701 DEBUG [main][InternalLoggerFactory.java:43] - Using SLF4J as the default logging framework
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,705 DEBUG [main][DefaultClientResources.java:109] - -Dio.netty.eventLoopThreads: 16
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,715 DEBUG [main][DefaultEventLoopGroupProvider.java:138] - Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,738 DEBUG [main][ResourceLeakDetector.java:129] - -Dio.netty.leakDetection.level: simple
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,738 DEBUG [main][ResourceLeakDetector.java:130] - -Dio.netty.leakDetection.targetRecords: 4
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,742 DEBUG [main][PlatformDependent.java:955] - Platform: Windows
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,745 DEBUG [main][PlatformDependent0.java:395] - -Dio.netty.noUnsafe: false
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,745 DEBUG [main][PlatformDependent0.java:871] - Java version: 8
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,746 DEBUG [main][PlatformDependent0.java:120] - sun.misc.Unsafe.theUnsafe: available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,746 DEBUG [main][PlatformDependent0.java:144] - sun.misc.Unsafe.copyMemory: available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,747 DEBUG [main][PlatformDependent0.java:182] - java.nio.Buffer.address: available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,748 DEBUG [main][PlatformDependent0.java:243] - direct buffer constructor: available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,749 DEBUG [main][PlatformDependent0.java:313] - java.nio.Bits.unaligned: available, true
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,749 DEBUG [main][PlatformDependent0.java:378] - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,749 DEBUG [main][PlatformDependent0.java:385] - java.nio.DirectByteBuffer.<init>(long, int): available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,750 DEBUG [main][PlatformDependent.java:992] - sun.misc.Unsafe: available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,750 DEBUG [main][PlatformDependent.java:1086] - -Dio.netty.tmpdir: C:\Users\PC\AppData\Local\Temp (java.io.tmpdir)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,751 DEBUG [main][PlatformDependent.java:1165] - -Dio.netty.bitMode: 64 (sun.arch.data.model)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,752 DEBUG [main][PlatformDependent.java:157] - -Dio.netty.maxDirectMemory: 15237906432 bytes
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,752 DEBUG [main][PlatformDependent.java:164] - -Dio.netty.uninitializedArrayAllocationThreshold: -1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,754 DEBUG [main][CleanerJava6.java:92] - java.nio.ByteBuffer.cleaner(): available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,755 DEBUG [main][PlatformDependent.java:184] - -Dio.netty.noPreferDirect: false
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,755 DEBUG [main][ResourceLeakDetectorFactory.java:202] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@50e8ed74
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,758 DEBUG [main][PlatformDependent.java:860] - org.jctools-core.MpscChunkedArrayQueue: available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,771 DEBUG [main][Loggers.java:249] - Using Slf4j logging framework
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,787 DEBUG [main][Loggers.java:249] - Starting UnsafeSupport init in Java 1.8
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,787 DEBUG [main][Loggers.java:249] - Unsafe is available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,853 DEBUG [main][PooledByteBufAllocator.java:126] - -Dio.netty.allocator.numHeapArenas: 32
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,854 DEBUG [main][PooledByteBufAllocator.java:127] - -Dio.netty.allocator.numDirectArenas: 32
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,854 DEBUG [main][PooledByteBufAllocator.java:129] - -Dio.netty.allocator.pageSize: 8192
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,855 DEBUG [main][PooledByteBufAllocator.java:134] - -Dio.netty.allocator.maxOrder: 11
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,855 DEBUG [main][PooledByteBufAllocator.java:138] - -Dio.netty.allocator.chunkSize: 16777216
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,855 DEBUG [main][PooledByteBufAllocator.java:139] - -Dio.netty.allocator.tinyCacheSize: 512
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,855 DEBUG [main][PooledByteBufAllocator.java:140] - -Dio.netty.allocator.smallCacheSize: 256
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,856 DEBUG [main][PooledByteBufAllocator.java:141] - -Dio.netty.allocator.normalCacheSize: 64
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,856 DEBUG [main][PooledByteBufAllocator.java:142] - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,856 DEBUG [main][PooledByteBufAllocator.java:143] - -Dio.netty.allocator.cacheTrimInterval: 8192
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,856 DEBUG [main][PooledByteBufAllocator.java:144] - -Dio.netty.allocator.useCacheForAllThreads: true
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,857 DEBUG [main][PooledByteBufAllocator.java:145] - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,861 DEBUG [main][InternalThreadLocalMap.java:54] - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:10,861 DEBUG [main][InternalThreadLocalMap.java:57] - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:11,495 WARN [main][JwtAccessTokenConverter.java:302] - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:11,637 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements org.apache.dubbo.rpc.Protocol {
public void destroy()  {
throw new UnsupportedOperationException("The method public abstract void org.apache.dubbo.rpc.Protocol.destroy() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort()  {
throw new UnsupportedOperationException("The method public abstract int org.apache.dubbo.rpc.Protocol.getDefaultPort() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public org.apache.dubbo.rpc.Exporter export(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public org.apache.dubbo.rpc.Invoker refer(java.lang.Class arg0, org.apache.dubbo.common.URL arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:11,714 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements org.apache.dubbo.rpc.cluster.Cluster {
public org.apache.dubbo.rpc.Invoker join(org.apache.dubbo.rpc.cluster.Directory arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.Cluster) name from url (" + url.toString() + ") use keys([cluster])");
org.apache.dubbo.rpc.cluster.Cluster extension = (org.apache.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:11,726 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements org.apache.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0, boolean arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public org.apache.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, org.apache.dubbo.common.URL arg2) throws org.apache.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:11,771 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:11,817 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:11,825 INFO [main][AnnotatedInterfaceConfigBeanBuilder.java:84] - The configBean[type:ReferenceBean] has been built.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:11,843 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:11,887 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:11,888 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:11,902 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.registry;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements org.apache.dubbo.registry.RegistryFactory {
public org.apache.dubbo.registry.Registry getRegistry(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.registry.RegistryFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.registry.RegistryFactory extension = (org.apache.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:11,907 INFO [main][QosProtocolWrapper.java:89] -  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:11,908 WARN [main][SpringExtensionFactory.java:86] -  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:11,910 DEBUG [main][SpringExtensionFactory.java:99] -  [DUBBO] Error when get spring extension(bean) for type:org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.76.1
org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.context.ConfigurableApplicationContext' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1123)
	at org.apache.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:94)
	at org.apache.dubbo.common.extension.factory.AdaptiveExtensionFactory.getExtension(AdaptiveExtensionFactory.java:47)
	at org.apache.dubbo.common.extension.ExtensionLoader.injectExtension(ExtensionLoader.java:566)
	at org.apache.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:535)
	at org.apache.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:351)
	at org.apache.dubbo.registry.RegistryFactory$Adaptive.getRegistry(RegistryFactory$Adaptive.java)
	at org.apache.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:379)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:128)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:70)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:69)
	at org.apache.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at org.apache.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:401)
	at org.apache.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:329)
	at org.apache.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:250)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.init(ReferenceAnnotationBeanPostProcessor.java:269)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.access$100(ReferenceAnnotationBeanPostProcessor.java:242)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildInvocationHandler(ReferenceAnnotationBeanPostProcessor.java:236)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildProxy(ReferenceAnnotationBeanPostProcessor.java:219)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.doGetInjectedBean(ReferenceAnnotationBeanPostProcessor.java:134)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.getInjectedObject(AnnotationInjectedBeanPostProcessor.java:360)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor$AnnotatedFieldElement.inject(AnnotationInjectedBeanPostProcessor.java:540)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.postProcessPropertyValues(AnnotationInjectedBeanPostProcessor.java:147)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.me.yimu.pay.uaa.UAABootstrap.main(UAABootstrap.java:14)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:11,915 WARN [main][SpringExtensionFactory.java:104] -  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:11,933 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements org.apache.dubbo.rpc.cluster.RouterFactory {
public org.apache.dubbo.rpc.cluster.Router getRouter(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.RouterFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.cluster.RouterFactory extension = (org.apache.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:11,939 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795671843, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:11,940 DEBUG [main][AbstractSpringCloudRegistry.java:116] - The URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795671843] should not be registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:11,946 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795671843, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:11,952 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : user-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:11,952 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] can't be found when the subscribed service[name : user-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:11,952 INFO [main][DubboServiceMetadataRepository.java:280] - The metadata of Dubbo service[name : user-service] is about to be initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,027 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,031 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,032 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,033 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795672027&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,034 DEBUG [main][AbstractSpringCloudRegistry.java:116] - The URL[consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795672027&version=1.0.0] should not be registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,035 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795672027&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,056 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {
public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([client, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public org.apache.dubbo.remoting.Server bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([server, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,225 DEBUG [main][MultithreadEventLoopGroup.java:44] - -Dio.netty.eventLoopThreads: 32
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,230 DEBUG [main][NioEventLoop.java:105] - -Dio.netty.noKeySetOptimization: false
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,230 DEBUG [main][NioEventLoop.java:106] - -Dio.netty.selectorAutoRebuildThreshold: 512
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,249 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {
public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,259 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.common.threadpool;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements org.apache.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.common.threadpool.ThreadPool) name from url (" + url.toString() + ") use keys([threadpool])");
org.apache.dubbo.common.threadpool.ThreadPool extension = (org.apache.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(org.apache.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,296 DEBUG [main][DefaultChannelId.java:79] - -Dio.netty.processId: 15800 (auto-detected)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,299 DEBUG [main][NetUtil.java:139] - -Djava.net.preferIPv4Stack: false
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,299 DEBUG [main][NetUtil.java:140] - -Djava.net.preferIPv6Addresses: false
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,504 DEBUG [main][NetUtil.java:224] - Loopback interface: [lo, Software Loopback Interface 1, 127.0.0.1] ([lo, Software Loopback Interface 1, 127.0.0.1], {})
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,505 DEBUG [main][NetUtil.java:289] - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,726 DEBUG [main][DefaultChannelId.java:101] - -Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,743 DEBUG [main][ByteBufUtil.java:83] - -Dio.netty.allocator.type: pooled
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,743 DEBUG [main][ByteBufUtil.java:92] - -Dio.netty.threadLocalDirectBufferSize: 0
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,744 DEBUG [main][ByteBufUtil.java:95] - -Dio.netty.maxThreadLocalCharBufferSize: 16384
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,770 INFO [main][AbstractClient.java:199] -  [DUBBO] Succeed connect to server /192.168.76.1:20880 from NettyClient 192.168.76.1 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0xa345dab9, L:/192.168.76.1:56214 - R:/192.168.76.1:20880]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,771 INFO [main][AbstractClient.java:71] -  [DUBBO] Start NettyClient DESKTOP-82R6ISH/192.168.76.1 connect to the server /192.168.76.1:20880, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,795 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.cache;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements org.apache.dubbo.cache.CacheFactory {
public org.apache.dubbo.cache.Cache getCache(org.apache.dubbo.common.URL arg0, org.apache.dubbo.rpc.Invocation arg1)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.cache.CacheFactory) name from url (" + url.toString() + ") use keys([cache])");
org.apache.dubbo.cache.CacheFactory extension = (org.apache.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,806 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.monitor;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory {
public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,815 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.validation;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements org.apache.dubbo.validation.Validation {
public org.apache.dubbo.validation.Validator getValidator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.validation.Validation) name from url (" + url.toString() + ") use keys([validation])");
org.apache.dubbo.validation.Validation extension = (org.apache.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(org.apache.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,831 INFO [main][AbstractRegistry.java:212] -  [DUBBO] Load registry cache file C:\Users\PC\.dubbo\dubbo-registry-uaa-service-127.0.0.1:8848.cache, data: {com.me.yimu.pay.user.api.TenantService=dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.TenantService?anyhost=true&application=user-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.TenantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,createTenantRelateAccount,sendMessage,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&path=com.me.yimu.pay.user.api.TenantService&pid=10084&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1674789027661, user-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.76.1:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=user-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=10084&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674789028034&version=1.0.0, merchant-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.76.1:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=912&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674788797941&version=1.0.0, merchant-application/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.76.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=9996&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674788760943&version=1.0.0, com.me.yimu.pay.user.api.AuthorizationService=dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.AuthorizationService?anyhost=true&application=user-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.AuthorizationService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&path=com.me.yimu.pay.user.api.AuthorizationService&pid=10084&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1674789026550}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,832 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795672027&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,843 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795672027&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,849 INFO [main][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795672027&version=1.0.0, urls: [dubbo://192.168.76.1:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=user-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=10084&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674789028034&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,855 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795672027&version=1.0.0, urls: [dubbo://192.168.76.1:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=user-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=10084&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674789028034&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,857 INFO [main][ReferenceConfig.java:421] -  [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&check=false&cluster=registryaware&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&refer=application%3Duaa-service%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dtrue%26group%3Duser-service%26interface%3Dcom.alibaba.cloud.dubbo.service.DubboMetadataService%26lazy%3Dfalse%26pid%3D15800%26qos.enable%3Dfalse%26qos.port%3D22220%26register.ip%3D192.168.76.1%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D60000%26timestamp%3D1674795672027%26version%3D1.0.0&register.ip=192.168.76.1&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795672027&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,885 DEBUG [main][Recycler.java:96] - -Dio.netty.recycler.maxCapacityPerThread: 4096
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,885 DEBUG [main][Recycler.java:97] - -Dio.netty.recycler.maxSharedCapacityFactor: 2
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,886 DEBUG [main][Recycler.java:98] - -Dio.netty.recycler.linkCapacity: 16
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,886 DEBUG [main][Recycler.java:99] - -Dio.netty.recycler.ratio: 8
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,898 DEBUG [NettyClientWorker-4-1][AbstractByteBuf.java:61] - -Dio.netty.buffer.checkAccessible: true
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,898 DEBUG [NettyClientWorker-4-1][AbstractByteBuf.java:62] - -Dio.netty.buffer.checkBounds: true
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,898 DEBUG [NettyClientWorker-4-1][ResourceLeakDetectorFactory.java:202] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@4622e409
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,945 DEBUG [DubboClientHandler-192.168.76.1:20880-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,946 WARN [main][DubboServiceMetadataRepository.java:484] - The Spring application[name : user-service] does not expose The REST metadata in the Dubbo services.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,949 DEBUG [DubboClientHandler-192.168.76.1:20880-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,950 DEBUG [main][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795671843] will notify all URLs : [dubbo://192.168.76.1:20880?anyhost=true&application=user-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.TenantService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,createTenantRelateAccount,sendMessage,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&pid=10084&register=true&release=2.7.3&side=provider&timestamp=1674789027661]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,951 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : merchant-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,951 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] can't be found when the subscribed service[name : merchant-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,951 INFO [main][DubboServiceMetadataRepository.java:280] - The metadata of Dubbo service[name : merchant-service] is about to be initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,964 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,968 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,968 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,969 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795672964&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,969 DEBUG [main][AbstractSpringCloudRegistry.java:116] - The URL[consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795672964&version=1.0.0] should not be registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,970 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795672964&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,973 INFO [main][AbstractClient.java:199] -  [DUBBO] Succeed connect to server /192.168.76.1:20890 from NettyClient 192.168.76.1 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0x260162f7, L:/192.168.76.1:56220 - R:/192.168.76.1:20890]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,973 INFO [main][AbstractClient.java:71] -  [DUBBO] Start NettyClient DESKTOP-82R6ISH/192.168.76.1 connect to the server /192.168.76.1:20890, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,975 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795672964&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,978 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795672964&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,982 INFO [main][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795672964&version=1.0.0, urls: [dubbo://192.168.76.1:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=912&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674788797941&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,984 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795672964&version=1.0.0, urls: [dubbo://192.168.76.1:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=912&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674788797941&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,984 INFO [main][ReferenceConfig.java:421] -  [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&check=false&cluster=registryaware&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&refer=application%3Duaa-service%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dtrue%26group%3Dmerchant-service%26interface%3Dcom.alibaba.cloud.dubbo.service.DubboMetadataService%26lazy%3Dfalse%26pid%3D15800%26qos.enable%3Dfalse%26qos.port%3D22220%26register.ip%3D192.168.76.1%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D60000%26timestamp%3D1674795672964%26version%3D1.0.0&register.ip=192.168.76.1&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795672964&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,988 DEBUG [DubboClientHandler-192.168.76.1:20890-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,989 WARN [main][DubboServiceMetadataRepository.java:484] - The Spring application[name : merchant-service] does not expose The REST metadata in the Dubbo services.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,991 DEBUG [DubboClientHandler-192.168.76.1:20890-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,991 DEBUG [main][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795671843] will notify all URLs : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,991 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : gateway-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,992 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,992 INFO [main][DubboServiceMetadataRepository.java:280] - The metadata of Dubbo service[name : gateway-service] is about to be initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,997 WARN [main][DubboServiceMetadataRepository.java:484] - The Spring application[name : gateway-service] does not expose The REST metadata in the Dubbo services.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,998 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,998 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : merchant-application]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,999 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] can't be found when the subscribed service[name : merchant-application], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:12,999 INFO [main][DubboServiceMetadataRepository.java:280] - The metadata of Dubbo service[name : merchant-application] is about to be initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,009 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,011 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,012 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,013 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795673009&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,014 DEBUG [main][AbstractSpringCloudRegistry.java:116] - The URL[consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795673009&version=1.0.0] should not be registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,014 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795673009&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,017 INFO [main][AbstractClient.java:199] -  [DUBBO] Succeed connect to server /192.168.76.1:20891 from NettyClient 192.168.76.1 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0xd8a9d0f2, L:/192.168.76.1:56227 - R:/192.168.76.1:20891]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,017 INFO [main][AbstractClient.java:71] -  [DUBBO] Start NettyClient DESKTOP-82R6ISH/192.168.76.1 connect to the server /192.168.76.1:20891, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,018 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795673009&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,024 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795673009&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,031 INFO [main][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795673009&version=1.0.0, urls: [dubbo://192.168.76.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=9996&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674788760943&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,033 INFO [main][ReferenceConfig.java:421] -  [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&check=false&cluster=registryaware&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&refer=application%3Duaa-service%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dtrue%26group%3Dmerchant-application%26interface%3Dcom.alibaba.cloud.dubbo.service.DubboMetadataService%26lazy%3Dfalse%26pid%3D15800%26qos.enable%3Dfalse%26qos.port%3D22220%26register.ip%3D192.168.76.1%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D60000%26timestamp%3D1674795673009%26version%3D1.0.0&register.ip=192.168.76.1&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795673009&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,036 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795673009&version=1.0.0, urls: [dubbo://192.168.76.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=9996&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674788760943&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,038 DEBUG [DubboClientHandler-192.168.76.1:20891-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,069 WARN [main][DubboServiceMetadataRepository.java:484] - The Spring application[name : merchant-application] does not expose The REST metadata in the Dubbo services.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,073 DEBUG [DubboClientHandler-192.168.76.1:20891-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,074 DEBUG [main][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795671843] will notify all URLs : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,076 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795671843, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,079 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795671843, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,083 INFO [main][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795671843, urls: [dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.TenantService?anyhost=true&application=user-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.TenantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,createTenantRelateAccount,sendMessage,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&path=com.me.yimu.pay.user.api.TenantService&pid=10084&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1674789027661], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,085 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795671843, urls: [dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.TenantService?anyhost=true&application=user-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.TenantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,createTenantRelateAccount,sendMessage,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&path=com.me.yimu.pay.user.api.TenantService&pid=10084&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1674789027661], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,085 INFO [main][ReferenceConfig.java:421] -  [DUBBO] Refer dubbo service com.me.yimu.pay.user.api.TenantService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&check=false&cluster=registryaware&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15800&qos.enable=false&qos.port=22220&refer=application%3Duaa-service%26check%3Dfalse%26dubbo%3D2.0.2%26interface%3Dcom.me.yimu.pay.user.api.TenantService%26lazy%3Dfalse%26methods%3DmodifyBundle%2CgetTenantByAccount%2CgetAccountByUsername%2CcreateBundle%2CinitBundle%2Clogin%2CisExistAccountByUsername%2CgetBundle%2CunbindTenant%2CremoveTenant%2CqueryTenants%2CqueryBundleByTenantType%2CgetAccountByMobile%2CgetApplicationDTOByClientId%2CqueryAccount%2CchangeBundle%2CisExistAccountInTenantByUsername%2CcreateAccountInTenant%2Cauthentication%2CqueryAccountRole%2CqueryAccountInTenant%2CisExistAccountByMobile%2CsendMessage%2CcreateTenantRelateAccount%2CcreateAccount%2CqueryAllBundle%2CgetTenant%2CqueryAdministratorByPage%2CisExistAccountInTenantByMobile%2CaccountPassword%2CcreateTenantAndAccount%2CbindTenant%26pid%3D15800%26qos.enable%3Dfalse%26qos.port%3D22220%26register.ip%3D192.168.76.1%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D60000%26timestamp%3D1674795671843&register.ip=192.168.76.1&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795671843, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,121 INFO [main][AnnotatedInterfaceConfigBeanBuilder.java:84] - The configBean[type:ReferenceBean] has been built.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,125 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,136 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,136 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,142 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795673125, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,142 DEBUG [main][AbstractSpringCloudRegistry.java:116] - The URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795673125] should not be registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,142 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795673125, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,142 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : user-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,144 DEBUG [DubboClientHandler-192.168.76.1:20880-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,145 DEBUG [main][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795673125] will notify all URLs : [dubbo://192.168.76.1:20880?anyhost=true&application=user-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.AuthorizationService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=10084&register=true&release=2.7.3&side=provider&timestamp=1674789026550]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,145 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : merchant-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,147 DEBUG [DubboClientHandler-192.168.76.1:20890-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,147 DEBUG [main][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795673125] will notify all URLs : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,148 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : gateway-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,148 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,148 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,149 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,149 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : merchant-application]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,152 DEBUG [DubboClientHandler-192.168.76.1:20891-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,152 DEBUG [main][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795673125] will notify all URLs : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,153 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795673125, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,155 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795673125, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,158 INFO [main][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795673125, urls: [dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.AuthorizationService?anyhost=true&application=user-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.AuthorizationService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&path=com.me.yimu.pay.user.api.AuthorizationService&pid=10084&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1674789026550], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,159 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795673125, urls: [dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.AuthorizationService?anyhost=true&application=user-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.AuthorizationService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&path=com.me.yimu.pay.user.api.AuthorizationService&pid=10084&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1674789026550], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,159 INFO [main][ReferenceConfig.java:421] -  [DUBBO] Refer dubbo service com.me.yimu.pay.user.api.AuthorizationService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&check=false&cluster=registryaware&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15800&qos.enable=false&qos.port=22220&refer=application%3Duaa-service%26check%3Dfalse%26dubbo%3D2.0.2%26interface%3Dcom.me.yimu.pay.user.api.AuthorizationService%26lazy%3Dfalse%26methods%3DremoveRole%2CroleBindPrivilege%2CmodifyRole%2CcreateRole%2CunbindAccountRole%2CqueryPrivilege%2CqueryRole%2CqueryPrivilegeTree%2CqueryRoleByPage%2CbindAccountRole%2CqueryPrivilegeByGroupId%2CqueryTenantRole%2Cauthorize%26pid%3D15800%26qos.enable%3Dfalse%26qos.port%3D22220%26register.ip%3D192.168.76.1%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D60000%26timestamp%3D1674795673125&register.ip=192.168.76.1&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795673125, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,499 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,499 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,503 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,503 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,536 DEBUG [main][TraversableResolvers.java:60] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,537 DEBUG [main][ResourceBundleMessageInterpolator.java:89] - Loaded expression factory via original TCCL
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,546 DEBUG [main][TraversableResolvers.java:60] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,546 DEBUG [main][ConfigurationImpl.java:148] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,547 DEBUG [main][ConfigurationImpl.java:180] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,547 DEBUG [main][ConfigurationImpl.java:194] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,547 DEBUG [main][ValidationXmlParser.java:120] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,548 DEBUG [main][ResourceLoaderHelper.java:53] - Trying to load META-INF/validation.xml via user class loader
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,548 DEBUG [main][ResourceLoaderHelper.java:60] - Trying to load META-INF/validation.xml via TCCL
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,548 DEBUG [main][ResourceLoaderHelper.java:66] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,548 DEBUG [main][ValidationXmlParser.java:127] - No META-INF/validation.xml found. Using annotation based configuration only.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,553 DEBUG [main][ValidatorFactoryImpl.java:578] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,553 DEBUG [main][ValidatorFactoryImpl.java:579] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,553 DEBUG [main][ValidatorFactoryImpl.java:580] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,553 DEBUG [main][ValidatorFactoryImpl.java:581] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,553 DEBUG [main][ValidatorFactoryImpl.java:582] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:13,692 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:14,101 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:14,127 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:14,722 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/public/**'], []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:14,722 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/webjars/**'], []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:14,723 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/v2/**'], []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:14,723 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/swagger**'], []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:14,723 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/static/**'], []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:14,723 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/resources/**'], []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:14,900 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@118f39f3, org.springframework.security.web.context.SecurityContextPersistenceFilter@4c51fc9a, org.springframework.security.web.header.HeaderWriterFilter@6715a6da, org.springframework.security.web.authentication.logout.LogoutFilter@174aabb2, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@562ec518, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@48861d1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@28705150, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7be9e9fc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7baf7e2c, org.springframework.security.web.session.SessionManagementFilter@29f86630, org.springframework.security.web.access.ExceptionTranslationFilter@1104cf3a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@554a2f3]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:14,918 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@c040c8d, org.springframework.security.web.context.SecurityContextPersistenceFilter@4193da4d, org.springframework.security.web.header.HeaderWriterFilter@3f7f9d3f, org.springframework.security.web.authentication.logout.LogoutFilter@7be3a837, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4619854a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6915351c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2ac0cb64, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3453f79c, org.springframework.security.web.session.SessionManagementFilter@62966c9f, org.springframework.security.web.access.ExceptionTranslationFilter@1067192a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@772589ed]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,245 INFO [main][EndpointLinksResolver.java:59] - Exposing 4 endpoint(s) beneath base path '/actuator'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,553 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : user-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,553 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : merchant-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,553 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,553 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : merchant-application] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,553 INFO [main][DubboServiceMetadataRepository.java:262] - The metadata of Dubbo services has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,617 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,618 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : user-service , size : 1] change is about to be dispatched
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,620 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : user-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,622 DEBUG [DubboClientHandler-192.168.76.1:20880-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,622 DEBUG [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795671843] will notify all URLs : [dubbo://192.168.76.1:20880?anyhost=true&application=user-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.TenantService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,createTenantRelateAccount,sendMessage,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&pid=10084&register=true&release=2.7.3&side=provider&timestamp=1674789027661]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,622 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : user-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,624 DEBUG [DubboClientHandler-192.168.76.1:20880-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,625 DEBUG [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795673125] will notify all URLs : [dubbo://192.168.76.1:20880?anyhost=true&application=user-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.AuthorizationService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=10084&register=true&release=2.7.3&side=provider&timestamp=1674789026550]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,626 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : merchant-service , size : 1] change is about to be dispatched
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,626 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : merchant-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,628 DEBUG [DubboClientHandler-192.168.76.1:20890-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,628 DEBUG [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795671843] will notify all URLs : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,628 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : merchant-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,631 DEBUG [DubboClientHandler-192.168.76.1:20890-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,631 DEBUG [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795673125] will notify all URLs : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,631 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : gateway-service , size : 1] change is about to be dispatched
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,631 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : gateway-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,632 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,632 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,632 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,632 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : gateway-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,632 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,632 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,632 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,633 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : merchant-application , size : 1] change is about to be dispatched
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,633 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : merchant-application]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,635 INFO [main][ServiceBean.java:112] -  [DUBBO] The service ready on spring started. service: com.me.yimu.pay.uaa.api.OauthClientDetailsService, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,635 DEBUG [DubboClientHandler-192.168.76.1:20891-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,635 DEBUG [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795671843] will notify all URLs : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,636 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : merchant-application]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,638 DEBUG [DubboClientHandler-192.168.76.1:20891-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,638 DEBUG [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795673125] will notify all URLs : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,642 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,658 INFO [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.me.yimu.pay.uaa.api.OauthClientDetailsService to local registry url : injvm://127.0.0.1/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15800&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674795675645, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,658 INFO [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.me.yimu.pay.uaa.api.OauthClientDetailsService to url dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15800&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674795675645, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,659 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,659 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.me.yimu.pay.uaa.api.OauthClientDetailsService url dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15800&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674795675645 to registry registry://localhost:9090/org.apache.dubbo.registry.RegistryService?application=uaa-service&dubbo=2.0.2&pid=15800&qos.enable=false&qos.port=22220&registry=spring-cloud&release=2.7.3&timestamp=1674795675642, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,684 INFO [main][AbstractServer.java:73] -  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.76.1:20881, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:15,689 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15800&register=true&release=2.7.3&side=provider&timestamp=1674795675645, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,004 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15800&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674795675645, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,004 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService] is being subscribed for service[name : user-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,008 DEBUG [DubboClientHandler-192.168.76.1:20880-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,008 DEBUG [main][AbstractSpringCloudRegistry.java:289] - The subscribed URL[provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15800&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674795675645] will notify all URLs : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,008 DEBUG [main][RegistryProtocol.java:524] -  [DUBBO] original override urls: [], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,008 DEBUG [main][RegistryProtocol.java:528] -  [DUBBO] subscribe url: provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15800&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674795675645, override urls: [], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,008 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService] is being subscribed for service[name : merchant-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,011 DEBUG [DubboClientHandler-192.168.76.1:20890-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,011 DEBUG [main][AbstractSpringCloudRegistry.java:289] - The subscribed URL[provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15800&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674795675645] will notify all URLs : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,011 DEBUG [main][RegistryProtocol.java:524] -  [DUBBO] original override urls: [], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,011 DEBUG [main][RegistryProtocol.java:528] -  [DUBBO] subscribe url: provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15800&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674795675645, override urls: [], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,011 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService] is being subscribed for service[name : gateway-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,012 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.uaa.api.OauthClientDetailsService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,012 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,012 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.uaa.api.OauthClientDetailsService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,012 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService] is being subscribed for service[name : merchant-application]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,014 DEBUG [DubboClientHandler-192.168.76.1:20891-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,014 DEBUG [main][AbstractSpringCloudRegistry.java:289] - The subscribed URL[provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15800&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674795675645] will notify all URLs : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,014 DEBUG [main][RegistryProtocol.java:524] -  [DUBBO] original override urls: [], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,015 DEBUG [main][RegistryProtocol.java:528] -  [DUBBO] subscribe url: provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15800&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674795675645, override urls: [], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,015 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,015 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.me.yimu.pay.uaa.api.OauthClientDetailsService url dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15800&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674795675645 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&dubbo=2.0.2&pid=15800&qos.enable=false&qos.port=22220&registry=nacos&release=2.7.3&timestamp=1674795675642, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,016 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15800&register=true&release=2.7.3&side=provider&timestamp=1674795675645, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,018 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15800&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674795675645, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,021 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15800&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674795675645, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,022 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15800&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674795675645, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,026 INFO [main][DirectJDKLog.java:173] - Starting ProtocolHandler ["http-nio-56020"]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,046 INFO [main][TomcatWebServer.java:204] - Tomcat started on port(s): 56020 (http) with context path '/uaa'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,060 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,068 INFO [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to local registry url : injvm://127.0.0.1/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15800&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674795676061&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,069 INFO [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to url dubbo://192.168.76.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15800&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674795676061&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,069 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,069 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService url dubbo://192.168.76.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15800&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674795676061&version=1.0.0 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&dubbo=2.0.2&pid=15800&qos.enable=false&qos.port=22220&registry=nacos&release=2.7.3&timestamp=1674795676061, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,070 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.76.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15800&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674795676061&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,072 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.76.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15800&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674795676061&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,075 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.76.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15800&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674795676061&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,075 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.76.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15800&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674795676061&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,075 INFO [main][DubboMetadataServiceExporter.java:86] - The Dubbo service[<dubbo:service path="com.alibaba.cloud.dubbo.service.DubboMetadataService" ref="com.alibaba.cloud.dubbo.service.IntrospectiveDubboMetadataService@18d8da77" prefix="dubbo.service.com.alibaba.cloud.dubbo.service.DubboMetadataService" generic="false" unexported="false" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" exported="true" version="1.0.0" dynamic="true" group="uaa-service" deprecated="false" register="true" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" />] has been exported.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,090 INFO [main][NacosServiceRegistry.java:62] - nacos registry, uaa-service 192.168.76.1:56020 register finished
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:16,095 INFO [main][StartupInfoLogger.java:59] - Started UAABootstrap in 10.961 seconds (JVM running for 12.489)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:17,038 WARN [com.alibaba.nacos.naming.push.receiver][HostReactor.java:110] - out of date data received, old-t: 1674795677034, new-t: 1674795677031
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:39,739 INFO [http-nio-56020-exec-1][DirectJDKLog.java:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:39,740 INFO [http-nio-56020-exec-1][FrameworkServlet.java:524] - Initializing Servlet 'dispatcherServlet'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:39,765 INFO [http-nio-56020-exec-1][FrameworkServlet.java:546] - Completed initialization in 25 ms
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:39,793 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:39,892 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} created. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:39,900 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:39,900 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:39,912 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50000} query executed. 14.8295 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:39,912 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50000} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:39,914 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50000} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:39,917 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50000} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:39,920 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50000} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:39,920 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:39,921 DEBUG [http-nio-56020-exec-1][PreparedStatementPool.java:129] - {conn-10005, pstmt-20000} enter cache
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:39,921 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:39,927 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:39,927 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:39,927 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:39,928 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50001} query executed. 0.7032 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:39,928 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50001} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:39,928 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50001} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:39,928 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50001} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:39,929 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:39,929 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:40,016 DEBUG [http-nio-56020-exec-3][TemplateEngine.java:325] - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:40,138 DEBUG [http-nio-56020-exec-3][ConfigurationPrinterHelper.java:158] - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@3ee73cec
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@514625ce
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@397c9ee6
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:40,139 DEBUG [http-nio-56020-exec-3][TemplateEngine.java:348] - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:40,556 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:40,557 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:40,557 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:40,557 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50002} query executed. 0.9437 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:40,558 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50002} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:40,558 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50002} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:40,558 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50002} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:40,558 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:40,558 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:44,164 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:44,165 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:44,165 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:44,166 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50003} query executed. 0.8237 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:44,166 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50003} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:44,166 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50003} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:44,167 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50003} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:44,167 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50003} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:44,167 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:44,168 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:44,171 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:44,171 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:44,171 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:44,172 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50004} query executed. 1.1648 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:44,172 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50004} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:44,173 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50004} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:44,173 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50004} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:44,173 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:44,174 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:44,514 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:44,514 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:44,514 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:44,515 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50005} query executed. 0.7271 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:44,515 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50005} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:44,515 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50005} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:44,515 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50005} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:44,515 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:44,516 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:45,632 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:51,281 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:51,281 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:51,281 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:51,282 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50006} query executed. 0.7445 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:51,282 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50006} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:51,282 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50006} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:51,282 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50006} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:51,283 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50006} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:51,283 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:51,283 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:51,286 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:51,286 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:51,286 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:51,286 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50007} query executed. 0.6784 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:51,287 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50007} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:51,287 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50007} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:51,287 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50007} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:51,287 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:51,287 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:51,636 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:51,636 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:51,636 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:51,637 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50008} query executed. 0.6555 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:51,637 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50008} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:51,637 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50008} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:51,637 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50008} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:51,637 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:01:51,638 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:08,802 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:08,803 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:08,803 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:08,803 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50009} query executed. 0.651 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:08,803 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50009} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:08,804 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50009} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:08,804 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50009} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:08,804 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50009} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:08,804 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:08,804 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:08,808 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:08,809 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:08,809 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:08,809 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50010} query executed. 0.6381 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:08,810 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50010} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:08,810 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50010} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:08,810 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50010} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:08,810 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:08,810 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:09,152 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:09,153 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:09,153 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:09,154 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50011} query executed. 0.9315 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:09,154 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50011} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:09,154 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50011} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:09,154 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50011} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:09,155 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:09,155 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:15,648 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:16,013 DEBUG [NettyClientWorker-4-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xa345dab9, L:/192.168.76.1:56214 - R:/192.168.76.1:20880]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:16,013 DEBUG [NettyClientWorker-4-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:16,023 DEBUG [NettyClientWorker-4-2][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x260162f7, L:/192.168.76.1:56220 - R:/192.168.76.1:20890]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:16,023 DEBUG [NettyClientWorker-4-3][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xd8a9d0f2, L:/192.168.76.1:56227 - R:/192.168.76.1:20891]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:16,024 DEBUG [NettyClientWorker-4-2][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-2, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:16,024 DEBUG [NettyClientWorker-4-3][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-3, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:23,010 DEBUG [NettyServerWorker-6-1][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:56406, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:35,760 DEBUG [NettyServerWorker-6-2][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:56582, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:41,625 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:41,626 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:41,626 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:41,627 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50012} query executed. 0.7783 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:41,627 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50012} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:41,627 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50012} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:41,627 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50012} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:41,628 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50012} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:41,628 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:41,629 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:41,631 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:41,632 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:41,632 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:41,633 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50013} query executed. 1.4783 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:41,633 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50013} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:41,634 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50013} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:41,634 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50013} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:41,634 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:41,635 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:41,978 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:41,978 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:41,978 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:41,979 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50014} query executed. 0.6386 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:41,979 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50014} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:41,979 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50014} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:41,979 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50014} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:41,979 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:41,979 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:42,667 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:42,668 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:42,668 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:42,669 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50015} query executed. 1.0179 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:42,669 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50015} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:42,669 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50015} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:42,670 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50015} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:42,670 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50015} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:42,671 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:42,671 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:42,673 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:42,674 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:42,674 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:42,675 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50016} query executed. 1.3542 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:42,676 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50016} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:42,676 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50016} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:42,676 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50016} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:42,677 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:42,677 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,028 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,028 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,028 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,028 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50017} query executed. 0.6223 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,028 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50017} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,028 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50017} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,028 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50017} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,030 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,030 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,194 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,194 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,194 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,195 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50018} query executed. 0.8256 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,195 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50018} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,195 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50018} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,195 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50018} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,196 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50018} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,196 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,196 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,199 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,199 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,199 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,199 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50019} query executed. 0.5634 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,200 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50019} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,200 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50019} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,200 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50019} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,201 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,201 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,273 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,273 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,273 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,274 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50020} query executed. 1.0716 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,274 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50020} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,274 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50020} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,275 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50020} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,275 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:43,275 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:45,668 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:02:59,757 DEBUG [NettyServerWorker-6-3][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:56918, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:03:15,678 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:03:16,017 DEBUG [NettyClientWorker-4-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xa345dab9, L:/192.168.76.1:56214 - R:/192.168.76.1:20880]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:03:16,019 DEBUG [NettyClientWorker-4-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:03:16,032 DEBUG [NettyClientWorker-4-3][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xd8a9d0f2, L:/192.168.76.1:56227 - R:/192.168.76.1:20891]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:03:16,032 DEBUG [NettyClientWorker-4-2][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x260162f7, L:/192.168.76.1:56220 - R:/192.168.76.1:20890]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:03:16,034 DEBUG [NettyClientWorker-4-3][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-3, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:03:16,034 DEBUG [NettyClientWorker-4-2][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-2, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:03:23,017 DEBUG [NettyServerWorker-6-1][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:56406, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:03:35,761 DEBUG [NettyServerWorker-6-2][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:56582, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:03:45,696 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:03:59,767 DEBUG [NettyServerWorker-6-3][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:56918, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:12,202 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:12,203 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:12,203 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:12,204 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50021} query executed. 0.7032 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:12,204 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50021} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:12,204 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50021} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:12,204 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50021} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:12,205 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50021} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:12,205 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:12,205 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:12,208 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:12,208 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:12,208 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:12,209 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50022} query executed. 0.5579 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:12,209 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50022} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:12,209 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50022} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:12,209 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50022} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:12,209 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:12,209 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:12,440 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:12,441 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:12,441 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:12,441 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50023} query executed. 0.6885 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:12,441 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50023} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:12,441 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50023} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:12,442 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50023} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:12,442 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:12,442 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:15,715 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:16,024 DEBUG [NettyClientWorker-4-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xa345dab9, L:/192.168.76.1:56214 - R:/192.168.76.1:20880]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:16,025 DEBUG [NettyClientWorker-4-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:16,040 DEBUG [NettyClientWorker-4-3][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xd8a9d0f2, L:/192.168.76.1:56227 - R:/192.168.76.1:20891]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:16,040 DEBUG [NettyClientWorker-4-2][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x260162f7, L:/192.168.76.1:56220 - R:/192.168.76.1:20890]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:16,041 DEBUG [NettyClientWorker-4-3][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-3, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:16,041 DEBUG [NettyClientWorker-4-2][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-2, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:23,024 DEBUG [NettyServerWorker-6-1][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:56406, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:23,807 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:23,808 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:23,808 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:23,809 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50024} query executed. 0.7874 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:23,809 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50024} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:23,809 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50024} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:23,809 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50024} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:23,810 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50024} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:23,810 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:23,810 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:23,812 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:23,813 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:23,813 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:23,814 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50025} query executed. 1.1939 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:23,814 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50025} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:23,815 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50025} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:23,815 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50025} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:23,815 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:23,815 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:24,168 DEBUG [http-nio-56020-exec-10][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:24,168 DEBUG [http-nio-56020-exec-10][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:24,169 DEBUG [http-nio-56020-exec-10][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:24,169 DEBUG [http-nio-56020-exec-10][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50026} query executed. 0.6516 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:24,169 DEBUG [http-nio-56020-exec-10][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50026} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:24,169 DEBUG [http-nio-56020-exec-10][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50026} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:24,170 DEBUG [http-nio-56020-exec-10][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50026} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:24,170 DEBUG [http-nio-56020-exec-10][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:24,170 DEBUG [http-nio-56020-exec-10][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:35,763 DEBUG [NettyServerWorker-6-2][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:56582, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,140 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,140 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,140 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,141 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50027} query executed. 0.6524 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,141 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50027} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,141 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50027} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,142 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50027} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,142 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50027} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,142 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,142 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,155 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,155 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,155 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,155 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50028} query executed. 0.6482 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,155 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50028} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,156 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50028} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,156 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50028} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,156 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50028} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,156 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,157 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,160 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,160 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,161 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,161 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50029} query executed. 1.0951 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,162 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50029} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,162 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50029} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,162 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50029} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,163 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50029} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,163 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,164 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,171 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,172 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,172 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,172 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50030} query executed. 0.7461 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,173 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50030} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,173 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50030} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,173 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50030} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,174 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50030} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,174 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,174 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,208 DEBUG [DubboClientHandler-192.168.76.1:20880-thread-2][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,218 INFO [http-nio-56020-exec-3][IntegrationUserDetailsAuthenticationHandler.java:55] - loginInfoDTO:{"id":3,"mobile":"15269652631","resources":{},"tenantAuthorizationInfoMap":{4:{"rolePrivilegeMap":{"r_001":["sj_m_console","sj_m_app_list","sj_m_transaction_list","sj_m_account_check","sj_m_payment","sj_m_account_list","sj_m_enterprise_auth","sj_m_store_list","sj_m_staff_list","sj_o_member_list","sj_o_entreprise_list","sj_o_audit","sj_o_service_type"]}}},"tenants":[{"bundleCode":"shanju-merchant","id":4,"name":"test01_03jN8Z","tenantTypeCode":"shanju-merchant"}],"username":"test01"}
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,225 DEBUG [DubboClientHandler-192.168.76.1:20880-thread-2][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,228 INFO [http-nio-56020-exec-3][IntegrationUserDetailsAuthenticationHandler.java:116] - @@@@@@@@@@@:{"accountNonExpired":true,"accountNonLocked":true,"authorities":[],"credentialsNonExpired":true,"enabled":true,"mobile":"15269652631","password":"123456","payload":{4:{"user_authorities":{"r_001":["sj_m_console","sj_m_app_list","sj_m_transaction_list","sj_m_account_check","sj_m_payment","sj_m_account_list","sj_m_enterprise_auth","sj_m_store_list","sj_m_staff_list","sj_o_member_list","sj_o_entreprise_list","sj_o_audit","sj_o_service_type"]}}},"tenant":{"tenantId":1},"username":"test01"}
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,235 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,237 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} setAutoCommit false
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,243 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,243 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,244 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50031} query executed. 1.0708 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,244 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50031} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,245 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50031} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,245 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50031} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,245 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50031} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,246 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,247 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,247 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,248 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50032} query executed. 1.6282 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,248 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50032} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,249 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50032} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,249 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50032} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,250 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50032} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,250 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,252 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,252 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,253 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50033} query executed. 0.7014 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,253 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50033} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,253 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50033} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,254 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50033} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,254 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50033} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,254 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,556 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} commited
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,557 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} setAutoCommit true
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:39,557 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:45,729 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:50,152 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:50,158 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:50,161 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:50,171 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50034} query executed. 13.8527 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:50,176 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50034} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:50,181 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50034} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:50,189 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50034} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:50,196 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50034} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:50,200 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:50,203 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:04:59,773 DEBUG [NettyServerWorker-6-3][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:56918, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:05:15,745 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:05:16,054 DEBUG [NettyClientWorker-4-3][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xd8a9d0f2, L:/192.168.76.1:56227 - R:/192.168.76.1:20891]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:05:16,054 DEBUG [NettyClientWorker-4-2][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x260162f7, L:/192.168.76.1:56220 - R:/192.168.76.1:20890]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:05:16,056 DEBUG [NettyClientWorker-4-3][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-3, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:05:16,056 DEBUG [NettyClientWorker-4-2][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-2, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:05:23,036 DEBUG [NettyServerWorker-6-1][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:56406, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:05:35,768 DEBUG [NettyServerWorker-6-2][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:56582, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:05:39,239 DEBUG [NettyClientWorker-4-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xa345dab9, L:/192.168.76.1:56214 - R:/192.168.76.1:20880]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:05:39,242 DEBUG [NettyClientWorker-4-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:05:45,765 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:05:59,777 DEBUG [NettyServerWorker-6-3][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:56918, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:06:15,770 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:06:16,065 DEBUG [NettyClientWorker-4-2][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x260162f7, L:/192.168.76.1:56220 - R:/192.168.76.1:20890]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:06:16,065 DEBUG [NettyClientWorker-4-3][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xd8a9d0f2, L:/192.168.76.1:56227 - R:/192.168.76.1:20891]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:06:16,067 DEBUG [NettyClientWorker-4-3][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-3, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:06:16,067 DEBUG [NettyClientWorker-4-2][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-2, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:06:23,041 DEBUG [NettyServerWorker-6-1][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:56406, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:06:35,779 DEBUG [NettyServerWorker-6-2][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:56582, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:06:39,243 DEBUG [NettyClientWorker-4-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xa345dab9, L:/192.168.76.1:56214 - R:/192.168.76.1:20880]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:06:39,246 DEBUG [NettyClientWorker-4-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:06:45,781 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:06:59,788 DEBUG [NettyServerWorker-6-3][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:56918, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:15,795 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:16,072 DEBUG [NettyClientWorker-4-3][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xd8a9d0f2, L:/192.168.76.1:56227 - R:/192.168.76.1:20891]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:16,072 DEBUG [NettyClientWorker-4-2][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x260162f7, L:/192.168.76.1:56220 - R:/192.168.76.1:20890]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:16,073 DEBUG [NettyClientWorker-4-3][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-3, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:16,073 DEBUG [NettyClientWorker-4-2][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-2, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,014 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,015 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,015 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,016 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50035} query executed. 0.6935 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,016 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50035} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,016 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50035} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,016 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50035} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,016 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50035} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,016 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,017 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,021 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,021 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,021 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,022 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50036} query executed. 0.7517 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,022 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50036} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,022 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50036} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,023 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50036} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,023 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50036} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,023 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,023 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,026 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,027 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,027 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,028 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50037} query executed. 0.857 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,028 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50037} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,028 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50037} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,028 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50037} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,029 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50037} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,029 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,029 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,032 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,033 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,033 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,034 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50038} query executed. 1.1493 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,034 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50038} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,034 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50038} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,035 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50038} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,035 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50038} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,035 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,035 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,073 DEBUG [DubboClientHandler-192.168.76.1:20880-thread-3][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,082 ERROR [http-nio-56020-exec-5][TokenEndpoint.java:169] - Handling error: InternalAuthenticationServiceException, login error org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### The error may exist in com/me/yimu/pay/user/mapper/AuthorizationPrivilegeMapper.java (best guess)
### The error may involve com.me.yimu.pay.user.mapper.AuthorizationPrivilegeMapper.selectPrivilegeRoleInTenant
### The error occurred while executing a query
### SQL: select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### The error may exist in com/me/yimu/pay/user/mapper/AuthorizationPrivilegeMapper.java (best guess)
### The error may involve com.me.yimu.pay.user.mapper.AuthorizationPrivilegeMapper.selectPrivilegeRoleInTenant
### The error occurred while executing a query
### SQL: select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy149.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:168)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:82)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:61)
	at com.sun.proxy.$Proxy158.selectPrivilegeRoleInTenant(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor338.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy159.selectPrivilegeRoleInTenant(Unknown Source)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl.authorize(AuthorizationServiceImpl.java:74)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$FastClassBySpringCGLIB$$f1e0e4a5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$EnhancerBySpringCGLIB$$cf4e8782.authorize(<generated>)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$FastClassBySpringCGLIB$$f1e0e4a5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$EnhancerBySpringCGLIB$$936ef42e.authorize(<generated>)
	at com.me.yimu.pay.user.service.TenantServiceImpl.login(TenantServiceImpl.java:731)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$FastClassBySpringCGLIB$$d00c722.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$EnhancerBySpringCGLIB$$3321b2ca.login(<generated>)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$FastClassBySpringCGLIB$$d00c722.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$EnhancerBySpringCGLIB$$7e320914.login(<generated>)
	at org.apache.dubbo.common.bytecode.Wrapper3.invokeMethod(Wrapper3.java)
	at org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)
	at org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)
	at org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:56)
	at org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)
	at org.apache.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:55)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:92)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:48)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:81)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:96)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:148)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:157)
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:152)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:102)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:193)
	at org.apache.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:51)
	at org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:57)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:806)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:259)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:349)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at sun.reflect.GeneratedMethodAccessor300.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Invocation.proceed(Invocation.java:49)
	at com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor.intercept(PaginationInterceptor.java:156)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor300.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:136)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor306.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 80 more
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:287)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:532)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:182)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:624)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:578)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:793)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:259)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:349)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Invocation.proceed(Invocation.java:49)
	at com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor.intercept(PaginationInterceptor.java:156)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:136)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy149.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:168)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:82)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:61)
	at com.sun.proxy.$Proxy158.selectPrivilegeRoleInTenant(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	... 73 more

org.springframework.security.authentication.InternalAuthenticationServiceException: login error org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### The error may exist in com/me/yimu/pay/user/mapper/AuthorizationPrivilegeMapper.java (best guess)
### The error may involve com.me.yimu.pay.user.mapper.AuthorizationPrivilegeMapper.selectPrivilegeRoleInTenant
### The error occurred while executing a query
### SQL: select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### The error may exist in com/me/yimu/pay/user/mapper/AuthorizationPrivilegeMapper.java (best guess)
### The error may involve com.me.yimu.pay.user.mapper.AuthorizationPrivilegeMapper.selectPrivilegeRoleInTenant
### The error occurred while executing a query
### SQL: select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy149.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:168)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:82)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:61)
	at com.sun.proxy.$Proxy158.selectPrivilegeRoleInTenant(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor338.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy159.selectPrivilegeRoleInTenant(Unknown Source)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl.authorize(AuthorizationServiceImpl.java:74)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$FastClassBySpringCGLIB$$f1e0e4a5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$EnhancerBySpringCGLIB$$cf4e8782.authorize(<generated>)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$FastClassBySpringCGLIB$$f1e0e4a5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$EnhancerBySpringCGLIB$$936ef42e.authorize(<generated>)
	at com.me.yimu.pay.user.service.TenantServiceImpl.login(TenantServiceImpl.java:731)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$FastClassBySpringCGLIB$$d00c722.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$EnhancerBySpringCGLIB$$3321b2ca.login(<generated>)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$FastClassBySpringCGLIB$$d00c722.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$EnhancerBySpringCGLIB$$7e320914.login(<generated>)
	at org.apache.dubbo.common.bytecode.Wrapper3.invokeMethod(Wrapper3.java)
	at org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)
	at org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)
	at org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:56)
	at org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)
	at org.apache.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:55)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:92)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:48)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:81)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:96)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:148)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:157)
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:152)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:102)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:193)
	at org.apache.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:51)
	at org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:57)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:806)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:259)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:349)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at sun.reflect.GeneratedMethodAccessor300.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Invocation.proceed(Invocation.java:49)
	at com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor.intercept(PaginationInterceptor.java:156)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor300.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:136)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor306.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 80 more
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:287)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:532)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:182)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:624)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:578)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:793)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:259)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:349)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Invocation.proceed(Invocation.java:49)
	at com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor.intercept(PaginationInterceptor.java:156)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:136)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy149.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:168)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:82)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:61)
	at com.sun.proxy.$Proxy158.selectPrivilegeRoleInTenant(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	... 73 more

	at com.me.yimu.pay.uaa.integration.IntegrationUserDetailsAuthenticationProvider.retrieveUser(IntegrationUserDetailsAuthenticationProvider.java:53)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:144)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:175)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:200)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator.authenticate(WebSecurityConfigurerAdapter.java:503)
	at org.springframework.security.oauth2.provider.password.ResourceOwnerPasswordTokenGranter.getOAuth2Authentication(ResourceOwnerPasswordTokenGranter.java:71)
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.getAccessToken(AbstractTokenGranter.java:72)
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.grant(AbstractTokenGranter.java:67)
	at org.springframework.security.oauth2.provider.CompositeTokenGranter.grant(CompositeTokenGranter.java:38)
	at org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer$4.grant(AuthorizationServerEndpointsConfigurer.java:583)
	at org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(TokenEndpoint.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter.successfulAuthentication(ClientCredentialsTokenEndpointFilter.java:131)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:240)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:679)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.security.authentication.BadCredentialsException: login error org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### The error may exist in com/me/yimu/pay/user/mapper/AuthorizationPrivilegeMapper.java (best guess)
### The error may involve com.me.yimu.pay.user.mapper.AuthorizationPrivilegeMapper.selectPrivilegeRoleInTenant
### The error occurred while executing a query
### SQL: select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### The error may exist in com/me/yimu/pay/user/mapper/AuthorizationPrivilegeMapper.java (best guess)
### The error may involve com.me.yimu.pay.user.mapper.AuthorizationPrivilegeMapper.selectPrivilegeRoleInTenant
### The error occurred while executing a query
### SQL: select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy149.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:168)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:82)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:61)
	at com.sun.proxy.$Proxy158.selectPrivilegeRoleInTenant(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor338.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy159.selectPrivilegeRoleInTenant(Unknown Source)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl.authorize(AuthorizationServiceImpl.java:74)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$FastClassBySpringCGLIB$$f1e0e4a5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$EnhancerBySpringCGLIB$$cf4e8782.authorize(<generated>)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$FastClassBySpringCGLIB$$f1e0e4a5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$EnhancerBySpringCGLIB$$936ef42e.authorize(<generated>)
	at com.me.yimu.pay.user.service.TenantServiceImpl.login(TenantServiceImpl.java:731)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$FastClassBySpringCGLIB$$d00c722.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$EnhancerBySpringCGLIB$$3321b2ca.login(<generated>)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$FastClassBySpringCGLIB$$d00c722.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$EnhancerBySpringCGLIB$$7e320914.login(<generated>)
	at org.apache.dubbo.common.bytecode.Wrapper3.invokeMethod(Wrapper3.java)
	at org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)
	at org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)
	at org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:56)
	at org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)
	at org.apache.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:55)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:92)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:48)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:81)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:96)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:148)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:157)
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:152)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:102)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:193)
	at org.apache.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:51)
	at org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:57)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:806)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:259)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:349)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at sun.reflect.GeneratedMethodAccessor300.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Invocation.proceed(Invocation.java:49)
	at com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor.intercept(PaginationInterceptor.java:156)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor300.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:136)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor306.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 80 more
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:287)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:532)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:182)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:624)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:578)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:793)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:259)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:349)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Invocation.proceed(Invocation.java:49)
	at com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor.intercept(PaginationInterceptor.java:156)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:136)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy149.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:168)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:82)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:61)
	at com.sun.proxy.$Proxy158.selectPrivilegeRoleInTenant(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	... 73 more

	at com.me.yimu.pay.uaa.integration.IntegrationUserDetailsAuthenticationHandler.authentication(IntegrationUserDetailsAuthenticationHandler.java:63)
	at com.me.yimu.pay.uaa.integration.IntegrationUserDetailsAuthenticationProvider.authenticationUser(IntegrationUserDetailsAuthenticationProvider.java:83)
	at com.me.yimu.pay.uaa.integration.IntegrationUserDetailsAuthenticationProvider.retrieveUser(IntegrationUserDetailsAuthenticationProvider.java:40)
	... 113 more
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:19,102 WARN [http-nio-56020-exec-5][ExceptionHandlerExceptionResolver.java:419] - Failure in @ExceptionHandler public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.exceptions.OAuth2Exception> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.handleException(java.lang.Exception) throws java.lang.Exception
java.lang.IllegalArgumentException: Invalid characters (CR/LF) in header WWW-Authenticate
	at org.springframework.security.web.firewall.FirewalledResponse.validateCrlf(FirewalledResponse.java:73)
	at org.springframework.security.web.firewall.FirewalledResponse.addHeader(FirewalledResponse.java:55)
	at javax.servlet.http.HttpServletResponseWrapper.addHeader(HttpServletResponseWrapper.java:174)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.addHeader(OnCommittedResponseWrapper.java:63)
	at javax.servlet.http.HttpServletResponseWrapper.addHeader(HttpServletResponseWrapper.java:174)
	at org.springframework.http.server.ServletServerHttpResponse.lambda$writeHeaders$0(ServletServerHttpResponse.java:103)
	at java.util.Map.forEach(Map.java:630)
	at org.springframework.http.server.ServletServerHttpResponse.writeHeaders(ServletServerHttpResponse.java:101)
	at org.springframework.http.server.ServletServerHttpResponse.getBody(ServletServerHttpResponse.java:82)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:255)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:103)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:290)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:223)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:119)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:408)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1297)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1109)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1055)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter.successfulAuthentication(ClientCredentialsTokenEndpointFilter.java:131)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:240)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:679)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:23,044 DEBUG [NettyServerWorker-6-1][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:56406, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:35,787 DEBUG [NettyServerWorker-6-2][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:56582, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:45,806 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:07:59,802 DEBUG [NettyServerWorker-6-3][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:56918, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:15,821 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:16,085 DEBUG [NettyClientWorker-4-2][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x260162f7, L:/192.168.76.1:56220 - R:/192.168.76.1:20890]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:16,085 DEBUG [NettyClientWorker-4-3][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xd8a9d0f2, L:/192.168.76.1:56227 - R:/192.168.76.1:20891]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:16,086 DEBUG [NettyClientWorker-4-3][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-3, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:16,086 DEBUG [NettyClientWorker-4-2][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-2, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,757 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,757 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,758 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,758 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50039} query executed. 0.7264 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,758 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50039} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,758 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50039} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,759 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50039} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,759 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50039} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,759 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,759 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,763 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,763 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,763 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,764 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50040} query executed. 0.7166 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,764 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50040} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,764 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50040} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,764 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50040} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,765 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50040} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,765 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,766 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,768 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,768 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,768 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,769 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50041} query executed. 1.0856 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,770 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50041} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,770 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50041} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,770 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50041} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,771 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50041} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,771 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,771 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,774 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,774 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,774 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,775 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50042} query executed. 1.5557 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,776 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50042} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,776 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50042} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,777 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50042} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,777 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50042} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,777 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,777 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,802 DEBUG [DubboClientHandler-192.168.76.1:20880-thread-3][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,803 ERROR [http-nio-56020-exec-6][TokenEndpoint.java:169] - Handling error: InternalAuthenticationServiceException, login error org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### The error may exist in com/me/yimu/pay/user/mapper/AuthorizationPrivilegeMapper.java (best guess)
### The error may involve com.me.yimu.pay.user.mapper.AuthorizationPrivilegeMapper.selectPrivilegeRoleInTenant
### The error occurred while executing a query
### SQL: select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### The error may exist in com/me/yimu/pay/user/mapper/AuthorizationPrivilegeMapper.java (best guess)
### The error may involve com.me.yimu.pay.user.mapper.AuthorizationPrivilegeMapper.selectPrivilegeRoleInTenant
### The error occurred while executing a query
### SQL: select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy149.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:168)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:82)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:61)
	at com.sun.proxy.$Proxy158.selectPrivilegeRoleInTenant(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor338.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy159.selectPrivilegeRoleInTenant(Unknown Source)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl.authorize(AuthorizationServiceImpl.java:74)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$FastClassBySpringCGLIB$$f1e0e4a5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$EnhancerBySpringCGLIB$$cf4e8782.authorize(<generated>)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$FastClassBySpringCGLIB$$f1e0e4a5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$EnhancerBySpringCGLIB$$936ef42e.authorize(<generated>)
	at com.me.yimu.pay.user.service.TenantServiceImpl.login(TenantServiceImpl.java:731)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$FastClassBySpringCGLIB$$d00c722.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$EnhancerBySpringCGLIB$$3321b2ca.login(<generated>)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$FastClassBySpringCGLIB$$d00c722.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$EnhancerBySpringCGLIB$$7e320914.login(<generated>)
	at org.apache.dubbo.common.bytecode.Wrapper3.invokeMethod(Wrapper3.java)
	at org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)
	at org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)
	at org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:56)
	at org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)
	at org.apache.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:55)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:92)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:48)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:81)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:96)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:148)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:157)
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:152)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:102)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:193)
	at org.apache.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:51)
	at org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:57)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:806)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:259)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:349)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at sun.reflect.GeneratedMethodAccessor300.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Invocation.proceed(Invocation.java:49)
	at com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor.intercept(PaginationInterceptor.java:156)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor300.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:136)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor306.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 80 more
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:287)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:532)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:182)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:624)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:578)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:793)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:259)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:349)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Invocation.proceed(Invocation.java:49)
	at com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor.intercept(PaginationInterceptor.java:156)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:136)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy149.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:168)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:82)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:61)
	at com.sun.proxy.$Proxy158.selectPrivilegeRoleInTenant(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	... 73 more

org.springframework.security.authentication.InternalAuthenticationServiceException: login error org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### The error may exist in com/me/yimu/pay/user/mapper/AuthorizationPrivilegeMapper.java (best guess)
### The error may involve com.me.yimu.pay.user.mapper.AuthorizationPrivilegeMapper.selectPrivilegeRoleInTenant
### The error occurred while executing a query
### SQL: select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### The error may exist in com/me/yimu/pay/user/mapper/AuthorizationPrivilegeMapper.java (best guess)
### The error may involve com.me.yimu.pay.user.mapper.AuthorizationPrivilegeMapper.selectPrivilegeRoleInTenant
### The error occurred while executing a query
### SQL: select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy149.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:168)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:82)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:61)
	at com.sun.proxy.$Proxy158.selectPrivilegeRoleInTenant(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor338.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy159.selectPrivilegeRoleInTenant(Unknown Source)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl.authorize(AuthorizationServiceImpl.java:74)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$FastClassBySpringCGLIB$$f1e0e4a5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$EnhancerBySpringCGLIB$$cf4e8782.authorize(<generated>)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$FastClassBySpringCGLIB$$f1e0e4a5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$EnhancerBySpringCGLIB$$936ef42e.authorize(<generated>)
	at com.me.yimu.pay.user.service.TenantServiceImpl.login(TenantServiceImpl.java:731)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$FastClassBySpringCGLIB$$d00c722.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$EnhancerBySpringCGLIB$$3321b2ca.login(<generated>)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$FastClassBySpringCGLIB$$d00c722.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$EnhancerBySpringCGLIB$$7e320914.login(<generated>)
	at org.apache.dubbo.common.bytecode.Wrapper3.invokeMethod(Wrapper3.java)
	at org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)
	at org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)
	at org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:56)
	at org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)
	at org.apache.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:55)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:92)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:48)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:81)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:96)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:148)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:157)
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:152)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:102)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:193)
	at org.apache.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:51)
	at org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:57)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:806)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:259)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:349)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at sun.reflect.GeneratedMethodAccessor300.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Invocation.proceed(Invocation.java:49)
	at com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor.intercept(PaginationInterceptor.java:156)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor300.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:136)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor306.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 80 more
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:287)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:532)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:182)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:624)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:578)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:793)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:259)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:349)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Invocation.proceed(Invocation.java:49)
	at com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor.intercept(PaginationInterceptor.java:156)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:136)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy149.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:168)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:82)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:61)
	at com.sun.proxy.$Proxy158.selectPrivilegeRoleInTenant(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	... 73 more

	at com.me.yimu.pay.uaa.integration.IntegrationUserDetailsAuthenticationProvider.retrieveUser(IntegrationUserDetailsAuthenticationProvider.java:53)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:144)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:175)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:200)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator.authenticate(WebSecurityConfigurerAdapter.java:503)
	at org.springframework.security.oauth2.provider.password.ResourceOwnerPasswordTokenGranter.getOAuth2Authentication(ResourceOwnerPasswordTokenGranter.java:71)
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.getAccessToken(AbstractTokenGranter.java:72)
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.grant(AbstractTokenGranter.java:67)
	at org.springframework.security.oauth2.provider.CompositeTokenGranter.grant(CompositeTokenGranter.java:38)
	at org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer$4.grant(AuthorizationServerEndpointsConfigurer.java:583)
	at org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(TokenEndpoint.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter.successfulAuthentication(ClientCredentialsTokenEndpointFilter.java:131)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:240)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:679)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.security.authentication.BadCredentialsException: login error org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### The error may exist in com/me/yimu/pay/user/mapper/AuthorizationPrivilegeMapper.java (best guess)
### The error may involve com.me.yimu.pay.user.mapper.AuthorizationPrivilegeMapper.selectPrivilegeRoleInTenant
### The error occurred while executing a query
### SQL: select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### The error may exist in com/me/yimu/pay/user/mapper/AuthorizationPrivilegeMapper.java (best guess)
### The error may involve com.me.yimu.pay.user.mapper.AuthorizationPrivilegeMapper.selectPrivilegeRoleInTenant
### The error occurred while executing a query
### SQL: select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy149.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:168)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:82)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:61)
	at com.sun.proxy.$Proxy158.selectPrivilegeRoleInTenant(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor338.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy159.selectPrivilegeRoleInTenant(Unknown Source)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl.authorize(AuthorizationServiceImpl.java:74)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$FastClassBySpringCGLIB$$f1e0e4a5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$EnhancerBySpringCGLIB$$cf4e8782.authorize(<generated>)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$FastClassBySpringCGLIB$$f1e0e4a5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$EnhancerBySpringCGLIB$$936ef42e.authorize(<generated>)
	at com.me.yimu.pay.user.service.TenantServiceImpl.login(TenantServiceImpl.java:731)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$FastClassBySpringCGLIB$$d00c722.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$EnhancerBySpringCGLIB$$3321b2ca.login(<generated>)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$FastClassBySpringCGLIB$$d00c722.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$EnhancerBySpringCGLIB$$7e320914.login(<generated>)
	at org.apache.dubbo.common.bytecode.Wrapper3.invokeMethod(Wrapper3.java)
	at org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)
	at org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)
	at org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:56)
	at org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)
	at org.apache.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:55)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:92)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:48)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:81)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:96)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:148)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:157)
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:152)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:102)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:193)
	at org.apache.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:51)
	at org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:57)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:806)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:259)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:349)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at sun.reflect.GeneratedMethodAccessor300.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Invocation.proceed(Invocation.java:49)
	at com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor.intercept(PaginationInterceptor.java:156)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor300.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:136)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor306.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 80 more
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:287)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:532)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:182)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:624)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:578)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:793)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:259)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:349)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Invocation.proceed(Invocation.java:49)
	at com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor.intercept(PaginationInterceptor.java:156)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:136)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy149.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:168)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:82)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:61)
	at com.sun.proxy.$Proxy158.selectPrivilegeRoleInTenant(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	... 73 more

	at com.me.yimu.pay.uaa.integration.IntegrationUserDetailsAuthenticationHandler.authentication(IntegrationUserDetailsAuthenticationHandler.java:63)
	at com.me.yimu.pay.uaa.integration.IntegrationUserDetailsAuthenticationProvider.authenticationUser(IntegrationUserDetailsAuthenticationProvider.java:83)
	at com.me.yimu.pay.uaa.integration.IntegrationUserDetailsAuthenticationProvider.retrieveUser(IntegrationUserDetailsAuthenticationProvider.java:40)
	... 113 more
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:18,806 WARN [http-nio-56020-exec-6][ExceptionHandlerExceptionResolver.java:419] - Failure in @ExceptionHandler public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.exceptions.OAuth2Exception> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.handleException(java.lang.Exception) throws java.lang.Exception
java.lang.IllegalArgumentException: Invalid characters (CR/LF) in header WWW-Authenticate
	at org.springframework.security.web.firewall.FirewalledResponse.validateCrlf(FirewalledResponse.java:73)
	at org.springframework.security.web.firewall.FirewalledResponse.addHeader(FirewalledResponse.java:55)
	at javax.servlet.http.HttpServletResponseWrapper.addHeader(HttpServletResponseWrapper.java:174)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.addHeader(OnCommittedResponseWrapper.java:63)
	at javax.servlet.http.HttpServletResponseWrapper.addHeader(HttpServletResponseWrapper.java:174)
	at org.springframework.http.server.ServletServerHttpResponse.lambda$writeHeaders$0(ServletServerHttpResponse.java:103)
	at java.util.Map.forEach(Map.java:630)
	at org.springframework.http.server.ServletServerHttpResponse.writeHeaders(ServletServerHttpResponse.java:101)
	at org.springframework.http.server.ServletServerHttpResponse.getBody(ServletServerHttpResponse.java:82)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:255)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:103)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:290)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:223)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:119)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:408)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1297)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1109)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1055)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter.successfulAuthentication(ClientCredentialsTokenEndpointFilter.java:131)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:240)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:679)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:23,054 DEBUG [NettyServerWorker-6-1][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:56406, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:30,956 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:30,956 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:30,957 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:30,957 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50043} query executed. 0.9854 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:30,958 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50043} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:30,958 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50043} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:30,958 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50043} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:30,958 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50043} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:30,959 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:30,959 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:30,963 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:30,963 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [test001]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:30,963 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:30,964 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50044} query executed. 0.893 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:30,964 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50044} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:30,965 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50044} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:30,965 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50044} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:30,965 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:30,965 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:31,304 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:31,305 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [test001]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:31,305 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:31,305 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50045} query executed. 0.7931 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:31,306 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50045} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:31,306 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50045} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:31,306 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50045} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:31,306 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:31,306 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:35,798 DEBUG [NettyServerWorker-6-2][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:56582, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:38,448 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:38,448 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:38,448 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:38,449 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50046} query executed. 1.0532 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:38,449 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50046} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:38,450 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50046} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:38,450 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50046} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:38,450 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50046} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:38,450 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:38,451 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:38,455 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:38,455 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [test001]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:38,455 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:38,456 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50047} query executed. 0.9372 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:38,456 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50047} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:38,456 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50047} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:38,457 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50047} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:38,457 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:38,457 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:38,800 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:38,801 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [test001]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:38,801 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:38,801 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50048} query executed. 0.6655 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:38,801 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50048} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:38,802 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50048} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:38,802 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50048} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:38,802 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:38,802 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:42,601 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:42,601 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:42,602 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:42,603 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50049} query executed. 1.6493 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:42,603 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50049} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:42,604 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50049} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:42,604 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50049} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:42,605 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50049} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:42,605 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:42,606 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:42,609 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:42,610 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [test001]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:42,610 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:42,611 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50050} query executed. 1.0342 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:42,611 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50050} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:42,611 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50050} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:42,611 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50050} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:42,612 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:42,612 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:42,955 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:42,955 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [test001]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:42,955 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:42,956 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50051} query executed. 0.8158 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:42,956 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50051} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:42,956 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50051} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:42,956 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50051} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:42,957 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:42,957 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:45,834 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:52,209 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:52,210 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:52,210 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:52,211 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50052} query executed. 1.045 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:52,211 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50052} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:52,212 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50052} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:52,212 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50052} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:52,213 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50052} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:52,213 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:52,214 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:52,217 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:52,218 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [test001]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:52,218 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:52,219 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50053} query executed. 1.0749 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:52,219 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50053} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:52,219 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50053} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:52,220 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50053} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:52,220 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:52,220 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:52,555 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:52,555 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [test001]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:52,555 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:52,556 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50054} query executed. 0.6174 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:52,556 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50054} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:52,556 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50054} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:52,556 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50054} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:52,556 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:52,556 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:08:59,818 DEBUG [NettyServerWorker-6-3][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:56918, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:02,956 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:02,956 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:02,957 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:02,958 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50055} query executed. 1.6926 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:02,958 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50055} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:02,958 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50055} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:02,959 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50055} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:02,959 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50055} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:02,959 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:02,959 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:02,962 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:02,962 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [test001]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:02,962 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:02,963 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50056} query executed. 0.9517 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:02,963 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50056} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:02,963 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50056} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:02,964 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50056} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:02,964 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:02,965 DEBUG [http-nio-56020-exec-2][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:03,311 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:03,312 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [test001]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:03,312 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:03,312 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50057} query executed. 0.6931 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:03,313 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50057} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:03,313 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50057} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:03,313 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50057} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:03,313 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:03,313 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:15,850 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:16,097 DEBUG [NettyClientWorker-4-2][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x260162f7, L:/192.168.76.1:56220 - R:/192.168.76.1:20890]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:16,097 DEBUG [NettyClientWorker-4-3][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xd8a9d0f2, L:/192.168.76.1:56227 - R:/192.168.76.1:20891]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:16,099 DEBUG [NettyClientWorker-4-2][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-2, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:16,099 DEBUG [NettyClientWorker-4-3][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-3, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,381 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,381 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,381 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,382 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50058} query executed. 0.6348 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,382 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50058} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,382 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50058} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,382 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50058} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,383 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50058} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,383 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,383 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,386 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,386 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,386 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,387 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50059} query executed. 0.6058 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,387 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50059} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,387 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50059} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,387 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50059} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,388 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50059} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,388 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,388 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,390 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,390 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,391 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,391 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50060} query executed. 0.5917 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,391 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50060} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,391 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50060} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,392 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50060} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,392 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50060} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,392 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,392 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,394 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,395 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,395 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,395 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50061} query executed. 0.6706 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,395 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50061} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,396 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50061} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,396 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50061} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,396 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50061} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,396 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,396 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,421 DEBUG [DubboClientHandler-192.168.76.1:20880-thread-3][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,422 INFO [http-nio-56020-exec-7][IntegrationUserDetailsAuthenticationHandler.java:55] - loginInfoDTO:{"id":3,"mobile":"15269652631","resources":{},"tenantAuthorizationInfoMap":{4:{"rolePrivilegeMap":{"r_001":["sj_m_console","sj_m_app_list","sj_m_transaction_list","sj_m_account_check","sj_m_payment","sj_m_account_list","sj_m_enterprise_auth","sj_m_store_list","sj_m_staff_list","sj_o_member_list","sj_o_entreprise_list","sj_o_audit","sj_o_service_type"]}}},"tenants":[{"bundleCode":"shanju-merchant","id":4,"name":"test01_03jN8Z","tenantTypeCode":"shanju-merchant"}],"username":"test01"}
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,430 DEBUG [DubboClientHandler-192.168.76.1:20880-thread-3][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,430 INFO [http-nio-56020-exec-7][IntegrationUserDetailsAuthenticationHandler.java:116] - @@@@@@@@@@@:{"accountNonExpired":true,"accountNonLocked":true,"authorities":[],"credentialsNonExpired":true,"enabled":true,"mobile":"15269652631","password":"123456","payload":{4:{"user_authorities":{"r_001":["sj_m_console","sj_m_app_list","sj_m_transaction_list","sj_m_account_check","sj_m_payment","sj_m_account_list","sj_m_enterprise_auth","sj_m_store_list","sj_m_staff_list","sj_o_member_list","sj_o_entreprise_list","sj_o_audit","sj_o_service_type"]}}},"tenant":{"tenantId":1},"username":"test01"}
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,433 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,434 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} setAutoCommit false
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,434 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,434 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,435 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50062} query executed. 1.0277 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,436 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50062} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,436 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50062} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,436 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50062} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,436 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50062} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,437 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,437 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,438 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,439 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50063} query executed. 1.6942 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,439 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50063} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,440 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50063} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,440 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50063} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,441 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50063} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,441 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,442 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,442 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,443 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50064} query executed. 0.7481 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,443 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50064} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,443 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50064} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,443 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50064} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,444 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50064} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,444 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,445 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} commited
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,445 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} setAutoCommit true
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:17,445 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:20,121 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:20,122 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:20,122 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:20,123 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50065} query executed. 1.1849 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:20,123 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50065} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:20,124 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50065} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:20,124 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50065} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:20,125 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50065} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:20,125 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:20,126 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:23,068 DEBUG [NettyServerWorker-6-1][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:56406, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:35,805 DEBUG [NettyServerWorker-6-2][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:56582, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:45,853 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,765 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,765 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,766 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,767 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50066} query executed. 1.6004 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,767 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50066} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,768 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50066} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,768 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50066} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,769 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50066} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,769 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,769 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,777 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,777 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,777 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,778 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50067} query executed. 1.2484 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,779 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50067} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,779 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50067} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,779 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50067} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,780 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50067} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,780 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,780 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,786 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,787 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,788 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,790 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50068} query executed. 2.6607 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,790 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50068} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,791 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50068} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,791 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50068} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,792 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50068} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,792 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,793 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,797 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,797 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,797 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,798 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50069} query executed. 1.0483 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,798 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50069} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,799 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50069} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,799 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50069} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,799 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50069} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,799 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,800 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,829 DEBUG [DubboClientHandler-192.168.76.1:20880-thread-3][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,832 ERROR [http-nio-56020-exec-9][TokenEndpoint.java:169] - Handling error: InternalAuthenticationServiceException, login error org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### The error may exist in com/me/yimu/pay/user/mapper/AuthorizationPrivilegeMapper.java (best guess)
### The error may involve com.me.yimu.pay.user.mapper.AuthorizationPrivilegeMapper.selectPrivilegeRoleInTenant
### The error occurred while executing a query
### SQL: select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### The error may exist in com/me/yimu/pay/user/mapper/AuthorizationPrivilegeMapper.java (best guess)
### The error may involve com.me.yimu.pay.user.mapper.AuthorizationPrivilegeMapper.selectPrivilegeRoleInTenant
### The error occurred while executing a query
### SQL: select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy149.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:168)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:82)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:61)
	at com.sun.proxy.$Proxy158.selectPrivilegeRoleInTenant(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor338.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy159.selectPrivilegeRoleInTenant(Unknown Source)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl.authorize(AuthorizationServiceImpl.java:74)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$FastClassBySpringCGLIB$$f1e0e4a5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$EnhancerBySpringCGLIB$$cf4e8782.authorize(<generated>)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$FastClassBySpringCGLIB$$f1e0e4a5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$EnhancerBySpringCGLIB$$936ef42e.authorize(<generated>)
	at com.me.yimu.pay.user.service.TenantServiceImpl.login(TenantServiceImpl.java:731)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$FastClassBySpringCGLIB$$d00c722.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$EnhancerBySpringCGLIB$$3321b2ca.login(<generated>)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$FastClassBySpringCGLIB$$d00c722.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$EnhancerBySpringCGLIB$$7e320914.login(<generated>)
	at org.apache.dubbo.common.bytecode.Wrapper3.invokeMethod(Wrapper3.java)
	at org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)
	at org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)
	at org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:56)
	at org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)
	at org.apache.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:55)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:92)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:48)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:81)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:96)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:148)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:157)
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:152)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:102)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:193)
	at org.apache.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:51)
	at org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:57)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:806)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:259)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:349)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at sun.reflect.GeneratedMethodAccessor300.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Invocation.proceed(Invocation.java:49)
	at com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor.intercept(PaginationInterceptor.java:156)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor300.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:136)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor306.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 80 more
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:287)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:532)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:182)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:624)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:578)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:793)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:259)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:349)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Invocation.proceed(Invocation.java:49)
	at com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor.intercept(PaginationInterceptor.java:156)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:136)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy149.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:168)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:82)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:61)
	at com.sun.proxy.$Proxy158.selectPrivilegeRoleInTenant(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	... 73 more

org.springframework.security.authentication.InternalAuthenticationServiceException: login error org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### The error may exist in com/me/yimu/pay/user/mapper/AuthorizationPrivilegeMapper.java (best guess)
### The error may involve com.me.yimu.pay.user.mapper.AuthorizationPrivilegeMapper.selectPrivilegeRoleInTenant
### The error occurred while executing a query
### SQL: select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### The error may exist in com/me/yimu/pay/user/mapper/AuthorizationPrivilegeMapper.java (best guess)
### The error may involve com.me.yimu.pay.user.mapper.AuthorizationPrivilegeMapper.selectPrivilegeRoleInTenant
### The error occurred while executing a query
### SQL: select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy149.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:168)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:82)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:61)
	at com.sun.proxy.$Proxy158.selectPrivilegeRoleInTenant(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor338.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy159.selectPrivilegeRoleInTenant(Unknown Source)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl.authorize(AuthorizationServiceImpl.java:74)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$FastClassBySpringCGLIB$$f1e0e4a5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$EnhancerBySpringCGLIB$$cf4e8782.authorize(<generated>)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$FastClassBySpringCGLIB$$f1e0e4a5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$EnhancerBySpringCGLIB$$936ef42e.authorize(<generated>)
	at com.me.yimu.pay.user.service.TenantServiceImpl.login(TenantServiceImpl.java:731)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$FastClassBySpringCGLIB$$d00c722.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$EnhancerBySpringCGLIB$$3321b2ca.login(<generated>)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$FastClassBySpringCGLIB$$d00c722.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$EnhancerBySpringCGLIB$$7e320914.login(<generated>)
	at org.apache.dubbo.common.bytecode.Wrapper3.invokeMethod(Wrapper3.java)
	at org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)
	at org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)
	at org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:56)
	at org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)
	at org.apache.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:55)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:92)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:48)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:81)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:96)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:148)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:157)
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:152)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:102)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:193)
	at org.apache.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:51)
	at org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:57)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:806)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:259)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:349)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at sun.reflect.GeneratedMethodAccessor300.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Invocation.proceed(Invocation.java:49)
	at com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor.intercept(PaginationInterceptor.java:156)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor300.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:136)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor306.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 80 more
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:287)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:532)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:182)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:624)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:578)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:793)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:259)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:349)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Invocation.proceed(Invocation.java:49)
	at com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor.intercept(PaginationInterceptor.java:156)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:136)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy149.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:168)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:82)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:61)
	at com.sun.proxy.$Proxy158.selectPrivilegeRoleInTenant(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	... 73 more

	at com.me.yimu.pay.uaa.integration.IntegrationUserDetailsAuthenticationProvider.retrieveUser(IntegrationUserDetailsAuthenticationProvider.java:53)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:144)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:175)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:200)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator.authenticate(WebSecurityConfigurerAdapter.java:503)
	at org.springframework.security.oauth2.provider.password.ResourceOwnerPasswordTokenGranter.getOAuth2Authentication(ResourceOwnerPasswordTokenGranter.java:71)
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.getAccessToken(AbstractTokenGranter.java:72)
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.grant(AbstractTokenGranter.java:67)
	at org.springframework.security.oauth2.provider.CompositeTokenGranter.grant(CompositeTokenGranter.java:38)
	at org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer$4.grant(AuthorizationServerEndpointsConfigurer.java:583)
	at org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(TokenEndpoint.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter.successfulAuthentication(ClientCredentialsTokenEndpointFilter.java:131)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:240)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:679)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.security.authentication.BadCredentialsException: login error org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### The error may exist in com/me/yimu/pay/user/mapper/AuthorizationPrivilegeMapper.java (best guess)
### The error may involve com.me.yimu.pay.user.mapper.AuthorizationPrivilegeMapper.selectPrivilegeRoleInTenant
### The error occurred while executing a query
### SQL: select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### The error may exist in com/me/yimu/pay/user/mapper/AuthorizationPrivilegeMapper.java (best guess)
### The error may involve com.me.yimu.pay.user.mapper.AuthorizationPrivilegeMapper.selectPrivilegeRoleInTenant
### The error occurred while executing a query
### SQL: select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy149.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:168)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:82)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:61)
	at com.sun.proxy.$Proxy158.selectPrivilegeRoleInTenant(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor338.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy159.selectPrivilegeRoleInTenant(Unknown Source)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl.authorize(AuthorizationServiceImpl.java:74)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$FastClassBySpringCGLIB$$f1e0e4a5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$EnhancerBySpringCGLIB$$cf4e8782.authorize(<generated>)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$FastClassBySpringCGLIB$$f1e0e4a5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.AuthorizationServiceImpl$$EnhancerBySpringCGLIB$$936ef42e.authorize(<generated>)
	at com.me.yimu.pay.user.service.TenantServiceImpl.login(TenantServiceImpl.java:731)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$FastClassBySpringCGLIB$$d00c722.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$EnhancerBySpringCGLIB$$3321b2ca.login(<generated>)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$FastClassBySpringCGLIB$$d00c722.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.me.yimu.pay.user.service.TenantServiceImpl$$EnhancerBySpringCGLIB$$7e320914.login(<generated>)
	at org.apache.dubbo.common.bytecode.Wrapper3.invokeMethod(Wrapper3.java)
	at org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:47)
	at org.apache.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:84)
	at org.apache.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:56)
	at org.apache.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:56)
	at org.apache.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:55)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:92)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:48)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:81)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:96)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:148)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:38)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:41)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:82)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker.invoke(ProtocolFilterWrapper.java:157)
	at org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:152)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:102)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:193)
	at org.apache.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:51)
	at org.apache.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:57)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY : select r.TENANT_ID,r.`CODE` ROLE_CODE,p.`CODE` PRIVILEGE_CODE from authorization_privilege p LEFT JOIN authorization_role_privilege arp ON arp.PRIVILEGE_ID=p.ID LEFT JOIN authorization_role r ON arp.ROLE_ID = r.ID where r.ID IN   ORDER BY r.TENANT_ID
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:806)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:259)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:349)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at sun.reflect.GeneratedMethodAccessor300.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Invocation.proceed(Invocation.java:49)
	at com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor.intercept(PaginationInterceptor.java:156)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor300.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:136)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor306.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 80 more
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :'RDER BY r.TENANT_ID', expect BY, actual BY pos 238, line 1, column 236, token BY
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:287)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:532)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:182)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:624)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:578)
	at com.alibaba.druid.wall.WallFilter.checkInternal(WallFilter.java:793)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:259)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:930)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:568)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:349)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Invocation.proceed(Invocation.java:49)
	at com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor.intercept(PaginationInterceptor.java:156)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy212.prepare(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:136)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy149.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:168)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:82)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:61)
	at com.sun.proxy.$Proxy158.selectPrivilegeRoleInTenant(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	... 73 more

	at com.me.yimu.pay.uaa.integration.IntegrationUserDetailsAuthenticationHandler.authentication(IntegrationUserDetailsAuthenticationHandler.java:63)
	at com.me.yimu.pay.uaa.integration.IntegrationUserDetailsAuthenticationProvider.authenticationUser(IntegrationUserDetailsAuthenticationProvider.java:83)
	at com.me.yimu.pay.uaa.integration.IntegrationUserDetailsAuthenticationProvider.retrieveUser(IntegrationUserDetailsAuthenticationProvider.java:40)
	... 113 more
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:55,834 WARN [http-nio-56020-exec-9][ExceptionHandlerExceptionResolver.java:419] - Failure in @ExceptionHandler public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.exceptions.OAuth2Exception> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.handleException(java.lang.Exception) throws java.lang.Exception
java.lang.IllegalArgumentException: Invalid characters (CR/LF) in header WWW-Authenticate
	at org.springframework.security.web.firewall.FirewalledResponse.validateCrlf(FirewalledResponse.java:73)
	at org.springframework.security.web.firewall.FirewalledResponse.addHeader(FirewalledResponse.java:55)
	at javax.servlet.http.HttpServletResponseWrapper.addHeader(HttpServletResponseWrapper.java:174)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.addHeader(OnCommittedResponseWrapper.java:63)
	at javax.servlet.http.HttpServletResponseWrapper.addHeader(HttpServletResponseWrapper.java:174)
	at org.springframework.http.server.ServletServerHttpResponse.lambda$writeHeaders$0(ServletServerHttpResponse.java:103)
	at java.util.Map.forEach(Map.java:630)
	at org.springframework.http.server.ServletServerHttpResponse.writeHeaders(ServletServerHttpResponse.java:101)
	at org.springframework.http.server.ServletServerHttpResponse.getBody(ServletServerHttpResponse.java:82)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:255)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:103)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:290)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:223)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:119)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:408)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1297)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1109)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1055)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter.successfulAuthentication(ClientCredentialsTokenEndpointFilter.java:131)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:240)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:679)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:59,500 DEBUG [http-nio-56020-exec-10][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:59,500 DEBUG [http-nio-56020-exec-10][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:59,501 DEBUG [http-nio-56020-exec-10][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:59,501 DEBUG [http-nio-56020-exec-10][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50070} query executed. 0.6823 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:59,501 DEBUG [http-nio-56020-exec-10][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50070} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:59,501 DEBUG [http-nio-56020-exec-10][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50070} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:59,502 DEBUG [http-nio-56020-exec-10][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50070} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:59,502 DEBUG [http-nio-56020-exec-10][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50070} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:59,502 DEBUG [http-nio-56020-exec-10][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:59,503 DEBUG [http-nio-56020-exec-10][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:59,506 DEBUG [http-nio-56020-exec-10][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:59,506 DEBUG [http-nio-56020-exec-10][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [test001]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:59,506 DEBUG [http-nio-56020-exec-10][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:59,507 DEBUG [http-nio-56020-exec-10][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50071} query executed. 0.6502 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:59,507 DEBUG [http-nio-56020-exec-10][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50071} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:59,507 DEBUG [http-nio-56020-exec-10][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50071} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:59,508 DEBUG [http-nio-56020-exec-10][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50071} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:59,508 DEBUG [http-nio-56020-exec-10][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:59,508 DEBUG [http-nio-56020-exec-10][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:59,535 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:59,535 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [test001]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:59,536 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:59,537 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50072} query executed. 1.7293 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:59,538 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50072} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:59,538 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50072} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:59,539 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50072} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:59,539 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:59,539 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:09:59,828 DEBUG [NettyServerWorker-6-3][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:56918, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:10:15,872 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:10:16,103 DEBUG [NettyClientWorker-4-2][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x260162f7, L:/192.168.76.1:56220 - R:/192.168.76.1:20890]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:10:16,103 DEBUG [NettyClientWorker-4-3][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xd8a9d0f2, L:/192.168.76.1:56227 - R:/192.168.76.1:20891]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:10:16,105 DEBUG [NettyClientWorker-4-3][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-3, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:10:16,105 DEBUG [NettyClientWorker-4-2][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-2, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:10:23,081 DEBUG [NettyServerWorker-6-1][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:56406, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:10:35,810 DEBUG [NettyServerWorker-6-2][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:56582, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:10:45,886 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:10:55,832 DEBUG [NettyClientWorker-4-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xa345dab9, L:/192.168.76.1:56214 - R:/192.168.76.1:20880]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:10:55,834 DEBUG [NettyClientWorker-4-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:10:59,831 DEBUG [NettyServerWorker-6-3][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:56918, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:11:15,892 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:11:16,106 DEBUG [NettyClientWorker-4-2][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x260162f7, L:/192.168.76.1:56220 - R:/192.168.76.1:20890]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:11:16,106 DEBUG [NettyClientWorker-4-3][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xd8a9d0f2, L:/192.168.76.1:56227 - R:/192.168.76.1:20891]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:11:16,108 DEBUG [NettyClientWorker-4-2][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-2, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:11:16,108 DEBUG [NettyClientWorker-4-3][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-3, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:11:23,094 DEBUG [NettyServerWorker-6-1][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:56406, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:11:35,825 DEBUG [NettyServerWorker-6-2][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:56582, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:11:45,901 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:11:55,838 DEBUG [NettyClientWorker-4-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xa345dab9, L:/192.168.76.1:56214 - R:/192.168.76.1:20880]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:11:55,841 DEBUG [NettyClientWorker-4-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:11:59,846 DEBUG [NettyServerWorker-6-3][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:56918, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:12:15,920 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:12:16,118 DEBUG [NettyClientWorker-4-3][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xd8a9d0f2, L:/192.168.76.1:56227 - R:/192.168.76.1:20891]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:12:16,118 DEBUG [NettyClientWorker-4-2][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x260162f7, L:/192.168.76.1:56220 - R:/192.168.76.1:20890]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:12:16,120 DEBUG [NettyClientWorker-4-2][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-2, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:12:16,120 DEBUG [NettyClientWorker-4-3][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-3, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:12:23,110 DEBUG [NettyServerWorker-6-1][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:56406, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:12:35,829 DEBUG [NettyServerWorker-6-2][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:56582, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:12:45,925 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:12:55,849 DEBUG [NettyClientWorker-4-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xa345dab9, L:/192.168.76.1:56214 - R:/192.168.76.1:20880]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:12:55,851 DEBUG [NettyClientWorker-4-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:12:59,861 DEBUG [NettyServerWorker-6-3][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:56918, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:10,193 INFO [RMI TCP Connection(2)-127.0.0.1][SpringApplicationAdminMXBeanRegistrar.java:163] - Application shutdown requested.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:10,193 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://192.168.76.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15800&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674795676061&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:10,196 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://192.168.76.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15800&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674795676061&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:10,197 INFO [Exporter-Unexport-thread-1][RegistryProtocol.java:689] -  [DUBBO] Waiting 10000ms for registry to notify all consumers before unexport. Usually, this is called when you use dubbo API, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:10,197 INFO [RMI TCP Connection(2)-127.0.0.1][DubboMetadataServiceExporter.java:107] - The Dubbo service[<dubbo:service path="com.alibaba.cloud.dubbo.service.DubboMetadataService" ref="com.alibaba.cloud.dubbo.service.IntrospectiveDubboMetadataService@18d8da77" prefix="dubbo.service.com.alibaba.cloud.dubbo.service.DubboMetadataService" generic="false" unexported="true" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" exported="true" version="1.0.0" dynamic="true" group="uaa-service" deprecated="false" register="true" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" />] has been unexported.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:10,198 INFO [RMI TCP Connection(2)-127.0.0.1][AwaitingNonWebApplicationListener.java:155] -  [Dubbo] Current Spring Boot Application is about to shutdown...
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:10,198 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistryFactory.java:68] -  [DUBBO] Close all registries [nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&timestamp=1674795672031], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:10,198 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:458] -  [DUBBO] Destroy registry:nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&timestamp=1674795672031, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:10,199 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:291] -  [DUBBO] Unregister: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795672964&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:10,200 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:467] -  [DUBBO] Destroy unregister url consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795672964&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:10,200 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:291] -  [DUBBO] Unregister: consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795671843, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:10,201 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:467] -  [DUBBO] Destroy unregister url consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795671843, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:10,201 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15800&register=true&release=2.7.3&side=provider&timestamp=1674795675645, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:10,203 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:467] -  [DUBBO] Destroy unregister url dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15800&register=true&release=2.7.3&side=provider&timestamp=1674795675645, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:10,203 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:291] -  [DUBBO] Unregister: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795673009&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:10,204 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:467] -  [DUBBO] Destroy unregister url consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795673009&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:10,205 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:291] -  [DUBBO] Unregister: consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795673125, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:10,206 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:467] -  [DUBBO] Destroy unregister url consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795673125, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:10,206 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:291] -  [DUBBO] Unregister: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795672027&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:10,208 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:467] -  [DUBBO] Destroy unregister url consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795672027&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:10,208 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15800&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674795675645, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:10,208 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:483] -  [DUBBO] Destroy unsubscribe url provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15800&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674795675645, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:10,208 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795673009&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:10,208 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:483] -  [DUBBO] Destroy unsubscribe url consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795673009&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:10,208 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795672027&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:10,209 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:483] -  [DUBBO] Destroy unsubscribe url consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795672027&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:10,209 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795671843, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:10,209 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:483] -  [DUBBO] Destroy unsubscribe url consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795671843, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:10,209 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795672964&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:10,209 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:483] -  [DUBBO] Destroy unsubscribe url consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795672964&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:10,209 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795673125, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:10,209 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:483] -  [DUBBO] Destroy unsubscribe url consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15800&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674795673125, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:10,210 INFO [RMI TCP Connection(2)-127.0.0.1][DubboProtocol.java:616] -  [DUBBO] Close dubbo server: /192.168.76.1:20881, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:11,204 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.76.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15800&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674795676061&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:11,218 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15800&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674795675645, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:15,940 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:16,122 DEBUG [NettyClientWorker-4-3][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xd8a9d0f2, L:/192.168.76.1:56227 - R:/192.168.76.1:20891]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:16,123 DEBUG [NettyClientWorker-4-2][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x260162f7, L:/192.168.76.1:56220 - R:/192.168.76.1:20890]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:16,124 DEBUG [NettyClientWorker-4-3][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-3, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:16,125 DEBUG [NettyClientWorker-4-2][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-2, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,215 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractServer.java:153] -  [DUBBO] Close NettyServer bind /0.0.0.0:20881, export /192.168.76.1:20881, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,217 INFO [RMI TCP Connection(2)-127.0.0.1][NettyChannel.java:172] -  [DUBBO] Close netty channel [id: 0x756d067a, L:/192.168.76.1:20881 - R:/192.168.76.1:56582], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,217 INFO [RMI TCP Connection(2)-127.0.0.1][NettyChannel.java:172] -  [DUBBO] Close netty channel [id: 0x97362e37, L:/192.168.76.1:20881 - R:/192.168.76.1:56918], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,218 INFO [RMI TCP Connection(2)-127.0.0.1][NettyChannel.java:172] -  [DUBBO] Close netty channel [id: 0xa349f834, L:/192.168.76.1:20881 - R:/192.168.76.1:56406], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,223 INFO [RMI TCP Connection(2)-127.0.0.1][DubboProtocol.java:654] -  [DUBBO] Close dubbo connect: /192.168.76.1:56220-->/192.168.76.1:20890, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,223 INFO [RMI TCP Connection(2)-127.0.0.1][DubboProtocol.java:654] -  [DUBBO] Close dubbo connect: /192.168.76.1:56214-->/192.168.76.1:20880, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,223 INFO [RMI TCP Connection(2)-127.0.0.1][DubboProtocol.java:654] -  [DUBBO] Close dubbo connect: /192.168.76.1:56227-->/192.168.76.1:20891, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,223 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractProtocol.java:66] -  [DUBBO] Destroy reference: dubbo://192.168.76.1:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=15800&protocol=dubbo&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.76.1&release=2.7.3&remote.application=merchant-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=60000&timestamp=1674788797941&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,223 WARN [NettyServerWorker-6-1][AbstractServer.java:213] -  [DUBBO] All clients has disconnected from /192.168.76.1:20881. You can graceful shutdown now., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,223 WARN [NettyServerWorker-6-3][AbstractServer.java:213] -  [DUBBO] All clients has disconnected from /192.168.76.1:20881. You can graceful shutdown now., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,223 WARN [NettyServerWorker-6-2][AbstractServer.java:213] -  [DUBBO] All clients has disconnected from /192.168.76.1:20881. You can graceful shutdown now., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,224 INFO [RMI TCP Connection(2)-127.0.0.1][NettyChannel.java:172] -  [DUBBO] Close netty channel [id: 0x260162f7, L:/192.168.76.1:56220 - R:/192.168.76.1:20890], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,224 DEBUG [DubboSharedHandler-thread-2][DubboProtocol.java:174] -  [DUBBO] disconnected from /192.168.76.1:56582,url:dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&channel.readonly.sent=true&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&heartbeat=60000&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15800&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674795675645, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,224 DEBUG [DubboSharedHandler-thread-3][DubboProtocol.java:174] -  [DUBBO] disconnected from /192.168.76.1:56406,url:dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&channel.readonly.sent=true&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&heartbeat=60000&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15800&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674795675645, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,224 DEBUG [DubboSharedHandler-thread-1][DubboProtocol.java:174] -  [DUBBO] disconnected from /192.168.76.1:56918,url:dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&channel.readonly.sent=true&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&heartbeat=60000&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15800&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674795675645, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,225 DEBUG [DubboSharedHandler-thread-4][DubboProtocol.java:174] -  [DUBBO] disconnected from /192.168.76.1:20890,url:dubbo://192.168.76.1:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20890&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-service&heartbeat=60000&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15800&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.76.1&release=2.7.3&remote.application=merchant-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=60000&timestamp=1674788797941&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,226 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractProtocol.java:66] -  [DUBBO] Destroy reference: dubbo://192.168.76.1:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20880&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15800&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.76.1&release=2.7.3&remote.application=user-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=60000&timestamp=1674789028034&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,227 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractProtocol.java:66] -  [DUBBO] Destroy reference: dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.TenantService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.TenantService&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,createTenantRelateAccount,sendMessage,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&pid=15800&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.76.1&release=2.7.3&remote.application=user-service&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674789027661, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,227 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractProtocol.java:66] -  [DUBBO] Destroy reference: dubbo://192.168.76.1:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=15800&protocol=dubbo&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.76.1&release=2.7.3&remote.application=user-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=60000&timestamp=1674789028034&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,227 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractProtocol.java:66] -  [DUBBO] Destroy reference: dubbo://192.168.76.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20891&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15800&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.76.1&release=2.7.3&remote.application=merchant-application&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=60000&timestamp=1674788760943&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,228 INFO [RMI TCP Connection(2)-127.0.0.1][NettyChannel.java:172] -  [DUBBO] Close netty channel [id: 0xd8a9d0f2, L:/192.168.76.1:56227 - R:/192.168.76.1:20891], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,228 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractProtocol.java:66] -  [DUBBO] Destroy reference: dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.AuthorizationService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.AuthorizationService&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15800&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.76.1&release=2.7.3&remote.application=user-service&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674789026550, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,229 DEBUG [DubboSharedHandler-thread-4][DubboProtocol.java:174] -  [DUBBO] disconnected from /192.168.76.1:20891,url:dubbo://192.168.76.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20891&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-application&heartbeat=60000&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15800&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.76.1&release=2.7.3&remote.application=merchant-application&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=60000&timestamp=1674788760943&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,229 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractProtocol.java:66] -  [DUBBO] Destroy reference: dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.AuthorizationService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.AuthorizationService&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&path=com.me.yimu.pay.user.api.AuthorizationService&pid=15800&protocol=dubbo&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.76.1&release=2.7.3&remote.application=user-service&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674789026550, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,229 INFO [RMI TCP Connection(2)-127.0.0.1][NettyChannel.java:172] -  [DUBBO] Close netty channel [id: 0xa345dab9, L:/192.168.76.1:56214 - R:/192.168.76.1:20880], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,230 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractProtocol.java:66] -  [DUBBO] Destroy reference: dubbo://192.168.76.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=15800&protocol=dubbo&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.76.1&release=2.7.3&remote.application=merchant-application&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=60000&timestamp=1674788760943&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,230 DEBUG [DubboSharedHandler-thread-4][DubboProtocol.java:174] -  [DUBBO] disconnected from /192.168.76.1:20880,url:dubbo://192.168.76.1:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20880&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=user-service&heartbeat=60000&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15800&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.76.1&release=2.7.3&remote.application=user-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=60000&timestamp=1674789028034&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,230 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractProtocol.java:66] -  [DUBBO] Destroy reference: dubbo://192.168.76.1:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20890&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15800&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.76.1&release=2.7.3&remote.application=merchant-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=60000&timestamp=1674788797941&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,230 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractProtocol.java:66] -  [DUBBO] Destroy reference: dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.TenantService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.TenantService&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,createTenantRelateAccount,sendMessage,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&path=com.me.yimu.pay.user.api.TenantService&pid=15800&protocol=dubbo&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.76.1&release=2.7.3&remote.application=user-service&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674789027661, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,231 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractProtocol.java:79] -  [DUBBO] Unexport service: dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15800&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674795675645, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,234 INFO [RMI TCP Connection(2)-127.0.0.1][Server.java:112] -  [DUBBO] qos-server stopped., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,234 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractProtocol.java:79] -  [DUBBO] Unexport service: injvm://127.0.0.1/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15800&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674795675645, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,235 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15800&register=true&release=2.7.3&side=provider&timestamp=1674795675645, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,236 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15800&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674795675645, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,237 INFO [Exporter-Unexport-thread-1][RegistryProtocol.java:689] -  [DUBBO] Waiting 10000ms for registry to notify all consumers before unexport. Usually, this is called when you use dubbo API, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,240 INFO [RMI TCP Connection(2)-127.0.0.1][NacosServiceRegistry.java:74] - De-registering from Nacos Server now...
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,242 INFO [RMI TCP Connection(2)-127.0.0.1][NacosServiceRegistry.java:93] - De-registration finished.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,245 INFO [RMI TCP Connection(2)-127.0.0.1][ExecutorConfigurationSupport.java:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,253 DEBUG [RMI TCP Connection(2)-127.0.0.1][AbstractRedisClient.java:436] - Initiate shutdown ([100, 100, MILLISECONDS], [100, 100, MILLISECONDS], {})
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,260 DEBUG [RMI TCP Connection(2)-127.0.0.1][DefaultClientResources.java:576] - Initiate shutdown ([0, 2, SECONDS], [0, 2, SECONDS], {})
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,264 DEBUG [RMI TCP Connection(2)-127.0.0.1][DefaultEventLoopGroupProvider.java:202] - Initiate shutdown ([0, 2, SECONDS], [0, 2, SECONDS], {})
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,279 INFO [RMI TCP Connection(2)-127.0.0.1][DruidDataSource.java:1885] - {dataSource-1} closing ...
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,283 DEBUG [RMI TCP Connection(2)-127.0.0.1][Log4j2Filter.java:132] - {conn-10001} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,284 DEBUG [RMI TCP Connection(2)-127.0.0.1][Log4j2Filter.java:132] - {conn-10002} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,285 DEBUG [RMI TCP Connection(2)-127.0.0.1][Log4j2Filter.java:132] - {conn-10003} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,285 DEBUG [RMI TCP Connection(2)-127.0.0.1][Log4j2Filter.java:132] - {conn-10004} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,286 DEBUG [RMI TCP Connection(2)-127.0.0.1][PreparedStatementPool.java:160] - {conn-10005, pstmt-20000} exit cache
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,286 DEBUG [RMI TCP Connection(2)-127.0.0.1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,286 DEBUG [RMI TCP Connection(2)-127.0.0.1][Log4j2Filter.java:132] - {conn-10005} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,288 INFO [RMI TCP Connection(2)-127.0.0.1][DruidDataSource.java:1955] - {dataSource-1} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,292 INFO [RMI TCP Connection(2)-127.0.0.1][DubboGenericServiceFactory.java:159] - The Dubbo GenericService ReferenceBeans are destroying...
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,292 INFO [RMI TCP Connection(2)-127.0.0.1][DubboGenericServiceFactory.java:164] - Destroyed the ReferenceBean  : <dubbo:reference singleton="true" prefix="dubbo.reference.com.alibaba.cloud.dubbo.service.DubboMetadataService" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" generic="true" version="1.0.0" generic="true" group="merchant-application" sticky="false" lazy="false" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" /> 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,292 INFO [RMI TCP Connection(2)-127.0.0.1][DubboGenericServiceFactory.java:164] - Destroyed the ReferenceBean  : <dubbo:reference singleton="true" prefix="dubbo.reference.com.alibaba.cloud.dubbo.service.DubboMetadataService" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" generic="true" version="1.0.0" generic="true" group="merchant-service" sticky="false" lazy="false" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" /> 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,293 INFO [RMI TCP Connection(2)-127.0.0.1][DubboGenericServiceFactory.java:164] - Destroyed the ReferenceBean  : <dubbo:reference singleton="true" prefix="dubbo.reference.com.alibaba.cloud.dubbo.service.DubboMetadataService" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" generic="true" version="1.0.0" generic="true" group="user-service" sticky="false" lazy="false" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" /> 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,293 INFO [RMI TCP Connection(2)-127.0.0.1][AnnotationInjectedBeanPostProcessor.java:293] - org.apache.dubbo.common.bytecode.proxy2@77e71802 was destroying!
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,293 INFO [RMI TCP Connection(2)-127.0.0.1][AnnotationInjectedBeanPostProcessor.java:293] - org.apache.dubbo.common.bytecode.proxy1@6d5761b was destroying!
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,294 INFO [RMI TCP Connection(2)-127.0.0.1][AnnotationInjectedBeanPostProcessor.java:305] - class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,295 INFO [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - Pausing ProtocolHandler ["http-nio-56020"]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,509 INFO [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - Stopping service [Tomcat]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,514 INFO [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - Destroying Spring FrameworkServlet 'dispatcherServlet'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,520 INFO [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - Stopping ProtocolHandler ["http-nio-56020"]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:20,528 INFO [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - Destroying ProtocolHandler ["http-nio-56020"]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:22,471 DEBUG [NettyServerWorker-6-2][PoolThreadCache.java:250] - Freed 7 thread-local buffer(s) from thread: NettyServerWorker-6-2
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:22,471 DEBUG [NettyServerWorker-6-1][PoolThreadCache.java:250] - Freed 7 thread-local buffer(s) from thread: NettyServerWorker-6-1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:13:22,471 DEBUG [NettyServerWorker-6-3][PoolThreadCache.java:250] - Freed 7 thread-local buffer(s) from thread: NettyServerWorker-6-3
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:33,734 INFO [main][:] - using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:33,743 INFO [main][WelcomeLogoApplicationListener.java:63] - 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:33,747 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=uaa-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22220, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=60000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.me.yimu.pay}
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:33,998 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$16988f57] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:34,061 INFO [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] -  [Dubbo] Current Spring Boot Application is await...
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:34,426 INFO [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=uaa-service, dubbo.application.qos-enable=false, dubbo.application.qos.port=22220, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=60000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20881, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base-packages=com.me.yimu.pay}
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:34,512 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:34,520 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-starter-druid.yaml', group: 'COMMON_GROUP'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:34,526 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'jwt.yaml', group: 'COMMON_GROUP'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:34,530 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'uaa-service.yaml', group: 'YIMUPAY_GROUP'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:34,531 INFO [main][PropertySourceBootstrapConfiguration.java:98] - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@1240843015 {name='uaa-service.yaml', properties={spring.datasource.druid.url=jdbc:mysql://127.0.0.1:3306/yimupay_uaa?useUnicode=true&serverTimezone=Asia/Shanghai&useSSL=false, server.servlet.context‐path=/uaa, spring.datasource.druid.password=mnj852123, spring.datasource.druid.username=root}}, NacosPropertySource@697460450 {name='jwt.yaml', properties={siging-key=yimu123}}, NacosPropertySource@1416706187 {name='spring-boot-starter-druid.yaml', properties={spring.datasource.druid.stat‐view‐servlet.enabled=true, spring.datasource.druid.web‐stat‐filter.session‐stat‐max‐count=1000, spring.datasource.druid.validation‐query=SELECT 1 FROM DUAL, spring.datasource.druid.min‐idle=5, spring.datasource.druid.stat‐view‐servlet.reset‐enable=false, spring.datasource.druid.stat‐view‐servlet.allow=127.0.0.1,192.168.163.1, spring.datasource.druid.stat‐view‐servlet.login‐username=admin, spring.datasource.druid.stat‐view‐servlet.deny=192.168.1.73, spring.datasource.druid.filters=config,stat,wall,log4j2, spring.datasource.druid.test‐on‐borrow=true, spring.datasource.druid.filter.stat.slow‐sql‐millis=1, spring.datasource.druid.web‐stat‐filter.session‐stat‐enable=false, spring.datasource.druid.web‐stat‐filter.principal‐cookie‐name=admin, spring.datasource.druid.test‐on‐return=false, spring.datasource.druid.web‐stat‐filter.enabled=true, spring.datasource.druid.pool‐prepared‐statements=true, spring.datasource.druid.test‐while‐idle=true, spring.datasource.druid.filter.stat.log‐slow‐sql=true, spring.datasource.druid.time‐between‐eviction‐runs‐millis=60000, spring.datasource.password=yourpassword, spring.datasource.druid.web‐stat‐filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*, spring.datasource.druid.stat‐view‐servlet.login‐password=admin, spring.datasource.druid.web‐stat‐filter.url‐pattern=/*, spring.datasource.username=root, spring.datasource.druid.web‐stat‐filter.profile‐enable=true, spring.datasource.druid.aop‐patterns=com.me.yimu.pay.*.service.*, spring.datasource.druid.max‐wait=60000, spring.datasource.url=jdbc:mysql://localhost:3306/oauth?useUnicode=true, spring.datasource.driver‐class‐name=com.mysql.cj.jdbc.Driver, spring.datasource.druid.web‐stat‐filter.principal‐session‐name=admin, spring.datasource.druid.max‐pool‐prepared‐statement‐per‐connection‐size=20, spring.datasource.druid.min‐evictable‐idle‐time‐millis=300000, spring.datasource.type=com.alibaba.druid.pool.DruidDataSource, spring.datasource.druid.initial‐size=5, spring.datasource.druid.max‐active=20, spring.datasource.druid.stat‐view‐servlet.url‐pattern=/druid/*}}, NacosPropertySource@1726616678 {name='spring-boot-http.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.enabled=true, server.servlet.context‐path=/, spring.messages.encoding=UTF‐8, spring.http.encoding.force=true, server.tomcat.protocol_header=x‐forwarded‐proto, server.tomcat.remote_ip_header=x‐forwarded‐for, server.use‐forward‐headers=true}}]}
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:34,554 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,107 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,109 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,120 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ApplicationConfig] within prefix [dubbo.applications]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,121 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.modules]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,121 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.RegistryConfig] within prefix [dubbo.registries]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,122 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ProtocolConfig] within prefix [dubbo.protocols]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,122 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitors]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,122 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.providers]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,123 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ConsumerConfig] within prefix [dubbo.consumers]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,124 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-centers]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,124 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-reports]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,126 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,127 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,127 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.module]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,127 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,127 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,128 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,128 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,128 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,129 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,129 INFO [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,129 INFO [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,130 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-center]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,130 DEBUG [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-report]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,251 INFO [main][RepositoryConfigurationDelegate.java:244] - Multiple Spring Data modules found, entering strict repository configuration mode!
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,253 INFO [main][RepositoryConfigurationDelegate.java:126] - Bootstrapping Spring Data repositories in DEFAULT mode.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,282 INFO [main][RepositoryConfigurationDelegate.java:182] - Finished Spring Data repository scanning in 19ms. Found 0 repository interfaces.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,352 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,400 INFO [main][ServiceAnnotationBeanPostProcessor.java:204] -  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,400 INFO [main][ServiceAnnotationBeanPostProcessor.java:206] -  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,408 DEBUG [main][ClassPathScanningCandidateComponentProvider.java:437] - Identified candidate component class: file [D:\projects\yimu-pay\yimupay-uaa\yimupay-uaa-service\target\classes\com\me\yimu\pay\uaa\service\OauthClientDetailsServiceImpl.class]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,428 DEBUG [main][ClassPathScanningCandidateComponentProvider.java:437] - Identified candidate component class: file [D:\projects\yimu-pay\yimupay-uaa\yimupay-uaa-service\target\classes\com\me\yimu\pay\uaa\service\OauthClientDetailsServiceImpl.class]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,435 INFO [main][ServiceAnnotationBeanPostProcessor.java:284] -  [DUBBO] The BeanDefinition[Root bean: class [org.apache.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,435 INFO [main][ServiceAnnotationBeanPostProcessor.java:161] -  [DUBBO] 1 annotated Dubbo's @Service Components { [Bean definition with name 'oauthClientDetailsServiceImpl': Generic bean: class [com.me.yimu.pay.uaa.service.OauthClientDetailsServiceImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\projects\yimu-pay\yimupay-uaa\yimupay-uaa-service\target\classes\com\me\yimu\pay\uaa\service\OauthClientDetailsServiceImpl.class]] } were scanned under package[com.me.yimu.pay], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,437 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,438 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,601 INFO [main][GenericScope.java:294] - BeanFactory id=c13da032-47f5-3e81-9f50-09c7d6c438dd
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,631 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,722 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fa7e8c5a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,789 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,798 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,801 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$7e3fdb5e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,815 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,827 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,838 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,845 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,847 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,847 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$f07f77d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,853 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$83298030] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,859 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,863 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,868 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$436eb9ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,873 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$3739c2af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,883 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$c22c55de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,888 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:35,890 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,209 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,214 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,232 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,236 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$f9d52b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,561 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,564 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,567 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,571 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,616 WARN [main][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,616 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,643 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,658 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,664 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$47c01e8e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,671 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,676 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$81961a8e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,682 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$56120beb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,689 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$85ece04] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,694 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$c375b3f3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,701 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,705 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,712 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$ea412b21] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,722 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,728 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$381da97a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,739 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,742 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,748 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,753 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,774 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,783 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,788 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$14b257ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,795 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,798 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,803 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,809 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,811 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,822 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,829 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,832 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,834 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:36,849 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$16988f57] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,104 INFO [main][TomcatWebServer.java:90] - Tomcat initialized with port(s): 56020 (http)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,114 INFO [main][DirectJDKLog.java:173] - Initializing ProtocolHandler ["http-nio-56020"]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,123 INFO [main][DirectJDKLog.java:173] - Starting service [Tomcat]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,123 INFO [main][DirectJDKLog.java:173] - Starting Servlet engine: [Apache Tomcat/9.0.16]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,128 INFO [main][DirectJDKLog.java:173] - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\jdk\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/jdk/bin/../jre/bin/server;D:/jdk/bin/../jre/bin;D:/jdk/bin/../jre/lib/amd64;D:\VMware-workstation-full-16\bin\;D:\jdk\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\maven\apache-maven-3.6.3\bin;D:\Mysql5.6.31\mysql\bin;D:\VSCode\bin;D:\node-v10.14.2\;D:\winscp\;D:\Git\cmd;D:\projects\yimu-pay-web\shanjupay-web\node_modules\.bin;C:\Program Files (x86)\Yarn\bin\;C:\Users\PC\AppData\Local\Microsoft\WindowsApps;C:\Users\PC\AppData\Roaming\npm;C:\Users\PC\AppData\Local\Yarn\bin;D:\ecplise\eclipse;;.]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,220 INFO [main][DirectJDKLog.java:173] - Initializing Spring embedded WebApplicationContext
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,220 INFO [main][ServletWebServerApplicationContext.java:296] - Root WebApplicationContext: initialization completed in 2659 ms
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,551 INFO [main][DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,725 DEBUG [main][Log4j2Filter.java:132] - {conn-10001,procId-53} connected
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,732 DEBUG [main][Log4j2Filter.java:132] - {conn-10002,procId-54} connected
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,735 DEBUG [main][Log4j2Filter.java:132] - {conn-10003,procId-55} connected
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,741 DEBUG [main][Log4j2Filter.java:132] - {conn-10004,procId-56} connected
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,745 DEBUG [main][Log4j2Filter.java:132] - {conn-10005,procId-57} connected
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,748 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,834 DEBUG [main][InternalLoggerFactory.java:43] - Using SLF4J as the default logging framework
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,837 DEBUG [main][DefaultClientResources.java:109] - -Dio.netty.eventLoopThreads: 16
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,845 DEBUG [main][DefaultEventLoopGroupProvider.java:138] - Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,862 DEBUG [main][ResourceLeakDetector.java:129] - -Dio.netty.leakDetection.level: simple
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,862 DEBUG [main][ResourceLeakDetector.java:130] - -Dio.netty.leakDetection.targetRecords: 4
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,865 DEBUG [main][PlatformDependent.java:955] - Platform: Windows
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,867 DEBUG [main][PlatformDependent0.java:395] - -Dio.netty.noUnsafe: false
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,868 DEBUG [main][PlatformDependent0.java:871] - Java version: 8
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,869 DEBUG [main][PlatformDependent0.java:120] - sun.misc.Unsafe.theUnsafe: available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,870 DEBUG [main][PlatformDependent0.java:144] - sun.misc.Unsafe.copyMemory: available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,871 DEBUG [main][PlatformDependent0.java:182] - java.nio.Buffer.address: available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,871 DEBUG [main][PlatformDependent0.java:243] - direct buffer constructor: available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,872 DEBUG [main][PlatformDependent0.java:313] - java.nio.Bits.unaligned: available, true
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,872 DEBUG [main][PlatformDependent0.java:378] - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,872 DEBUG [main][PlatformDependent0.java:385] - java.nio.DirectByteBuffer.<init>(long, int): available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,873 DEBUG [main][PlatformDependent.java:992] - sun.misc.Unsafe: available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,873 DEBUG [main][PlatformDependent.java:1086] - -Dio.netty.tmpdir: C:\Users\PC\AppData\Local\Temp (java.io.tmpdir)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,874 DEBUG [main][PlatformDependent.java:1165] - -Dio.netty.bitMode: 64 (sun.arch.data.model)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,875 DEBUG [main][PlatformDependent.java:157] - -Dio.netty.maxDirectMemory: 15237906432 bytes
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,875 DEBUG [main][PlatformDependent.java:164] - -Dio.netty.uninitializedArrayAllocationThreshold: -1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,877 DEBUG [main][CleanerJava6.java:92] - java.nio.ByteBuffer.cleaner(): available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,877 DEBUG [main][PlatformDependent.java:184] - -Dio.netty.noPreferDirect: false
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,877 DEBUG [main][ResourceLeakDetectorFactory.java:202] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@f95d64d
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,879 DEBUG [main][PlatformDependent.java:860] - org.jctools-core.MpscChunkedArrayQueue: available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,888 DEBUG [main][Loggers.java:249] - Using Slf4j logging framework
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,901 DEBUG [main][Loggers.java:249] - Starting UnsafeSupport init in Java 1.8
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,902 DEBUG [main][Loggers.java:249] - Unsafe is available
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,951 DEBUG [main][PooledByteBufAllocator.java:126] - -Dio.netty.allocator.numHeapArenas: 32
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,952 DEBUG [main][PooledByteBufAllocator.java:127] - -Dio.netty.allocator.numDirectArenas: 32
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,952 DEBUG [main][PooledByteBufAllocator.java:129] - -Dio.netty.allocator.pageSize: 8192
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,953 DEBUG [main][PooledByteBufAllocator.java:134] - -Dio.netty.allocator.maxOrder: 11
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,953 DEBUG [main][PooledByteBufAllocator.java:138] - -Dio.netty.allocator.chunkSize: 16777216
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,953 DEBUG [main][PooledByteBufAllocator.java:139] - -Dio.netty.allocator.tinyCacheSize: 512
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,954 DEBUG [main][PooledByteBufAllocator.java:140] - -Dio.netty.allocator.smallCacheSize: 256
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,954 DEBUG [main][PooledByteBufAllocator.java:141] - -Dio.netty.allocator.normalCacheSize: 64
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,954 DEBUG [main][PooledByteBufAllocator.java:142] - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,955 DEBUG [main][PooledByteBufAllocator.java:143] - -Dio.netty.allocator.cacheTrimInterval: 8192
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,955 DEBUG [main][PooledByteBufAllocator.java:144] - -Dio.netty.allocator.useCacheForAllThreads: true
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,955 DEBUG [main][PooledByteBufAllocator.java:145] - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,958 DEBUG [main][InternalThreadLocalMap.java:54] - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:37,958 DEBUG [main][InternalThreadLocalMap.java:57] - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,463 WARN [main][JwtAccessTokenConverter.java:302] - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,562 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements org.apache.dubbo.rpc.Protocol {
public void destroy()  {
throw new UnsupportedOperationException("The method public abstract void org.apache.dubbo.rpc.Protocol.destroy() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort()  {
throw new UnsupportedOperationException("The method public abstract int org.apache.dubbo.rpc.Protocol.getDefaultPort() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public org.apache.dubbo.rpc.Exporter export(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public org.apache.dubbo.rpc.Invoker refer(java.lang.Class arg0, org.apache.dubbo.common.URL arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,618 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements org.apache.dubbo.rpc.cluster.Cluster {
public org.apache.dubbo.rpc.Invoker join(org.apache.dubbo.rpc.cluster.Directory arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.Cluster) name from url (" + url.toString() + ") use keys([cluster])");
org.apache.dubbo.rpc.cluster.Cluster extension = (org.apache.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,629 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements org.apache.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0, boolean arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public org.apache.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, org.apache.dubbo.common.URL arg2) throws org.apache.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,664 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,679 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,686 INFO [main][AnnotatedInterfaceConfigBeanBuilder.java:84] - The configBean[type:ReferenceBean] has been built.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,702 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,742 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,743 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,752 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.registry;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements org.apache.dubbo.registry.RegistryFactory {
public org.apache.dubbo.registry.Registry getRegistry(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.registry.RegistryFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.registry.RegistryFactory extension = (org.apache.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,757 INFO [main][QosProtocolWrapper.java:89] -  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,757 WARN [main][SpringExtensionFactory.java:86] -  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,759 DEBUG [main][SpringExtensionFactory.java:99] -  [DUBBO] Error when get spring extension(bean) for type:org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.76.1
org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.context.ConfigurableApplicationContext' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1123)
	at org.apache.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:94)
	at org.apache.dubbo.common.extension.factory.AdaptiveExtensionFactory.getExtension(AdaptiveExtensionFactory.java:47)
	at org.apache.dubbo.common.extension.ExtensionLoader.injectExtension(ExtensionLoader.java:566)
	at org.apache.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:535)
	at org.apache.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:351)
	at org.apache.dubbo.registry.RegistryFactory$Adaptive.getRegistry(RegistryFactory$Adaptive.java)
	at org.apache.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:379)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:70)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:128)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:69)
	at org.apache.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at org.apache.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:401)
	at org.apache.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:329)
	at org.apache.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:250)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.init(ReferenceAnnotationBeanPostProcessor.java:269)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.access$100(ReferenceAnnotationBeanPostProcessor.java:242)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildInvocationHandler(ReferenceAnnotationBeanPostProcessor.java:236)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildProxy(ReferenceAnnotationBeanPostProcessor.java:219)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.doGetInjectedBean(ReferenceAnnotationBeanPostProcessor.java:134)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.getInjectedObject(AnnotationInjectedBeanPostProcessor.java:360)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor$AnnotatedFieldElement.inject(AnnotationInjectedBeanPostProcessor.java:540)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.postProcessPropertyValues(AnnotationInjectedBeanPostProcessor.java:147)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.me.yimu.pay.uaa.UAABootstrap.main(UAABootstrap.java:14)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,763 WARN [main][SpringExtensionFactory.java:104] -  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,777 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements org.apache.dubbo.rpc.cluster.RouterFactory {
public org.apache.dubbo.rpc.cluster.Router getRouter(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.RouterFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.cluster.RouterFactory extension = (org.apache.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,783 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538703, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,784 DEBUG [main][AbstractSpringCloudRegistry.java:116] - The URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538703] should not be registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,788 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538703, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,792 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : user-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,792 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] can't be found when the subscribed service[name : user-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,793 INFO [main][DubboServiceMetadataRepository.java:280] - The metadata of Dubbo service[name : user-service] is about to be initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,849 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,853 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,853 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,854 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538850&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,855 DEBUG [main][AbstractSpringCloudRegistry.java:116] - The URL[consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538850&version=1.0.0] should not be registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,855 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538850&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,873 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {
public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([client, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public org.apache.dubbo.remoting.Server bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([server, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,884 DEBUG [main][MultithreadEventLoopGroup.java:44] - -Dio.netty.eventLoopThreads: 32
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,887 DEBUG [main][NioEventLoop.java:105] - -Dio.netty.noKeySetOptimization: false
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,888 DEBUG [main][NioEventLoop.java:106] - -Dio.netty.selectorAutoRebuildThreshold: 512
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,903 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {
public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,913 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.common.threadpool;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements org.apache.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.common.threadpool.ThreadPool) name from url (" + url.toString() + ") use keys([threadpool])");
org.apache.dubbo.common.threadpool.ThreadPool extension = (org.apache.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(org.apache.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,941 DEBUG [main][DefaultChannelId.java:79] - -Dio.netty.processId: 15544 (auto-detected)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,943 DEBUG [main][NetUtil.java:139] - -Djava.net.preferIPv4Stack: false
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:38,943 DEBUG [main][NetUtil.java:140] - -Djava.net.preferIPv6Addresses: false
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,155 DEBUG [main][NetUtil.java:224] - Loopback interface: [lo, Software Loopback Interface 1, 127.0.0.1] ([lo, Software Loopback Interface 1, 127.0.0.1], {})
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,156 DEBUG [main][NetUtil.java:289] - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,376 DEBUG [main][DefaultChannelId.java:101] - -Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,388 DEBUG [main][ByteBufUtil.java:83] - -Dio.netty.allocator.type: pooled
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,389 DEBUG [main][ByteBufUtil.java:92] - -Dio.netty.threadLocalDirectBufferSize: 0
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,389 DEBUG [main][ByteBufUtil.java:95] - -Dio.netty.maxThreadLocalCharBufferSize: 16384
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,412 INFO [main][AbstractClient.java:199] -  [DUBBO] Succeed connect to server /192.168.76.1:20880 from NettyClient 192.168.76.1 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0x47370edc, L:/192.168.76.1:51354 - R:/192.168.76.1:20880]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,412 INFO [main][AbstractClient.java:71] -  [DUBBO] Start NettyClient DESKTOP-82R6ISH/192.168.76.1 connect to the server /192.168.76.1:20880, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,428 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.cache;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements org.apache.dubbo.cache.CacheFactory {
public org.apache.dubbo.cache.Cache getCache(org.apache.dubbo.common.URL arg0, org.apache.dubbo.rpc.Invocation arg1)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.cache.CacheFactory) name from url (" + url.toString() + ") use keys([cache])");
org.apache.dubbo.cache.CacheFactory extension = (org.apache.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,438 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.monitor;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory {
public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,446 DEBUG [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.validation;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements org.apache.dubbo.validation.Validation {
public org.apache.dubbo.validation.Validator getValidator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.validation.Validation) name from url (" + url.toString() + ") use keys([validation])");
org.apache.dubbo.validation.Validation extension = (org.apache.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(org.apache.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,459 INFO [main][AbstractRegistry.java:212] -  [DUBBO] Load registry cache file C:\Users\PC\.dubbo\dubbo-registry-uaa-service-127.0.0.1:8848.cache, data: {com.me.yimu.pay.user.api.TenantService=dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.TenantService?anyhost=true&application=user-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.TenantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,createTenantRelateAccount,sendMessage,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&path=com.me.yimu.pay.user.api.TenantService&pid=10084&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1674789027661, user-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.76.1:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=user-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=10084&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674789028034&version=1.0.0, merchant-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.76.1:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=912&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674788797941&version=1.0.0, com.me.yimu.pay.user.api.AuthorizationService=dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.AuthorizationService?anyhost=true&application=user-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.AuthorizationService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&path=com.me.yimu.pay.user.api.AuthorizationService&pid=10084&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1674789026550, merchant-application/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.76.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=9996&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674788760943&version=1.0.0}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,460 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538850&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,468 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538850&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,473 INFO [main][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538850&version=1.0.0, urls: [dubbo://192.168.76.1:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=user-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=10084&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674789028034&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,476 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538850&version=1.0.0, urls: [dubbo://192.168.76.1:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=user-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=10084&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674789028034&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,477 INFO [main][ReferenceConfig.java:421] -  [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&check=false&cluster=registryaware&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&refer=application%3Duaa-service%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dtrue%26group%3Duser-service%26interface%3Dcom.alibaba.cloud.dubbo.service.DubboMetadataService%26lazy%3Dfalse%26pid%3D15544%26qos.enable%3Dfalse%26qos.port%3D22220%26register.ip%3D192.168.76.1%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D60000%26timestamp%3D1674796538850%26version%3D1.0.0&register.ip=192.168.76.1&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538850&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,499 DEBUG [main][Recycler.java:96] - -Dio.netty.recycler.maxCapacityPerThread: 4096
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,500 DEBUG [main][Recycler.java:97] - -Dio.netty.recycler.maxSharedCapacityFactor: 2
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,500 DEBUG [main][Recycler.java:98] - -Dio.netty.recycler.linkCapacity: 16
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,501 DEBUG [main][Recycler.java:99] - -Dio.netty.recycler.ratio: 8
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,662 DEBUG [NettyClientWorker-4-1][AbstractByteBuf.java:61] - -Dio.netty.buffer.checkAccessible: true
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,662 DEBUG [NettyClientWorker-4-1][AbstractByteBuf.java:62] - -Dio.netty.buffer.checkBounds: true
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,662 DEBUG [NettyClientWorker-4-1][ResourceLeakDetectorFactory.java:202] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@7471f27c
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,696 DEBUG [DubboClientHandler-192.168.76.1:20880-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,697 WARN [main][DubboServiceMetadataRepository.java:484] - The Spring application[name : user-service] does not expose The REST metadata in the Dubbo services.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,700 DEBUG [DubboClientHandler-192.168.76.1:20880-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,700 DEBUG [main][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538703] will notify all URLs : [dubbo://192.168.76.1:20880?anyhost=true&application=user-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.TenantService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,createTenantRelateAccount,sendMessage,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&pid=10084&register=true&release=2.7.3&side=provider&timestamp=1674789027661]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,702 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : merchant-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,702 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] can't be found when the subscribed service[name : merchant-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,702 INFO [main][DubboServiceMetadataRepository.java:280] - The metadata of Dubbo service[name : merchant-service] is about to be initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,711 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,714 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,715 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,715 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539711&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,716 DEBUG [main][AbstractSpringCloudRegistry.java:116] - The URL[consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539711&version=1.0.0] should not be registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,716 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539711&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,719 INFO [main][AbstractClient.java:199] -  [DUBBO] Succeed connect to server /192.168.76.1:20890 from NettyClient 192.168.76.1 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0xdfd942a4, L:/192.168.76.1:51360 - R:/192.168.76.1:20890]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,719 INFO [main][AbstractClient.java:71] -  [DUBBO] Start NettyClient DESKTOP-82R6ISH/192.168.76.1 connect to the server /192.168.76.1:20890, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,720 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539711&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,725 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539711&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,728 INFO [main][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539711&version=1.0.0, urls: [dubbo://192.168.76.1:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=912&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674788797941&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,728 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539711&version=1.0.0, urls: [dubbo://192.168.76.1:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=912&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674788797941&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,729 INFO [main][ReferenceConfig.java:421] -  [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&check=false&cluster=registryaware&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&refer=application%3Duaa-service%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dtrue%26group%3Dmerchant-service%26interface%3Dcom.alibaba.cloud.dubbo.service.DubboMetadataService%26lazy%3Dfalse%26pid%3D15544%26qos.enable%3Dfalse%26qos.port%3D22220%26register.ip%3D192.168.76.1%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D60000%26timestamp%3D1674796539711%26version%3D1.0.0&register.ip=192.168.76.1&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539711&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,734 DEBUG [DubboClientHandler-192.168.76.1:20890-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,734 WARN [main][DubboServiceMetadataRepository.java:484] - The Spring application[name : merchant-service] does not expose The REST metadata in the Dubbo services.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,735 DEBUG [DubboClientHandler-192.168.76.1:20890-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,736 DEBUG [main][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538703] will notify all URLs : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,736 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : gateway-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,736 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,736 INFO [main][DubboServiceMetadataRepository.java:280] - The metadata of Dubbo service[name : gateway-service] is about to be initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,739 WARN [main][DubboServiceMetadataRepository.java:484] - The Spring application[name : gateway-service] does not expose The REST metadata in the Dubbo services.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,739 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,740 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : merchant-application]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,740 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] can't be found when the subscribed service[name : merchant-application], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,741 INFO [main][DubboServiceMetadataRepository.java:280] - The metadata of Dubbo service[name : merchant-application] is about to be initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,749 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,750 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,751 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,751 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539749&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,752 DEBUG [main][AbstractSpringCloudRegistry.java:116] - The URL[consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539749&version=1.0.0] should not be registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,752 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539749&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,754 INFO [main][AbstractClient.java:199] -  [DUBBO] Succeed connect to server /192.168.76.1:20891 from NettyClient 192.168.76.1 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0xfab3eb18, L:/192.168.76.1:51365 - R:/192.168.76.1:20891]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,754 INFO [main][AbstractClient.java:71] -  [DUBBO] Start NettyClient DESKTOP-82R6ISH/192.168.76.1 connect to the server /192.168.76.1:20891, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,755 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539749&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,758 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539749&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,760 INFO [main][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539749&version=1.0.0, urls: [dubbo://192.168.76.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=9996&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674788760943&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,761 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539749&version=1.0.0, urls: [dubbo://192.168.76.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=9996&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674788760943&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,761 INFO [main][ReferenceConfig.java:421] -  [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&check=false&cluster=registryaware&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&refer=application%3Duaa-service%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dtrue%26group%3Dmerchant-application%26interface%3Dcom.alibaba.cloud.dubbo.service.DubboMetadataService%26lazy%3Dfalse%26pid%3D15544%26qos.enable%3Dfalse%26qos.port%3D22220%26register.ip%3D192.168.76.1%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D60000%26timestamp%3D1674796539749%26version%3D1.0.0&register.ip=192.168.76.1&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539749&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,765 DEBUG [DubboClientHandler-192.168.76.1:20891-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,765 WARN [main][DubboServiceMetadataRepository.java:484] - The Spring application[name : merchant-application] does not expose The REST metadata in the Dubbo services.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,767 DEBUG [DubboClientHandler-192.168.76.1:20891-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,768 DEBUG [main][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538703] will notify all URLs : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,769 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538703, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,772 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538703, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,776 INFO [main][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538703, urls: [dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.TenantService?anyhost=true&application=user-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.TenantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,createTenantRelateAccount,sendMessage,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&path=com.me.yimu.pay.user.api.TenantService&pid=10084&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1674789027661], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,777 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538703, urls: [dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.TenantService?anyhost=true&application=user-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.TenantService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,createTenantRelateAccount,sendMessage,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&path=com.me.yimu.pay.user.api.TenantService&pid=10084&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1674789027661], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,777 INFO [main][ReferenceConfig.java:421] -  [DUBBO] Refer dubbo service com.me.yimu.pay.user.api.TenantService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&check=false&cluster=registryaware&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15544&qos.enable=false&qos.port=22220&refer=application%3Duaa-service%26check%3Dfalse%26dubbo%3D2.0.2%26interface%3Dcom.me.yimu.pay.user.api.TenantService%26lazy%3Dfalse%26methods%3DmodifyBundle%2CgetTenantByAccount%2CgetAccountByUsername%2CcreateBundle%2CinitBundle%2Clogin%2CisExistAccountByUsername%2CgetBundle%2CunbindTenant%2CremoveTenant%2CqueryTenants%2CqueryBundleByTenantType%2CgetAccountByMobile%2CgetApplicationDTOByClientId%2CqueryAccount%2CchangeBundle%2CisExistAccountInTenantByUsername%2CcreateAccountInTenant%2Cauthentication%2CqueryAccountRole%2CqueryAccountInTenant%2CisExistAccountByMobile%2CsendMessage%2CcreateTenantRelateAccount%2CcreateAccount%2CqueryAllBundle%2CgetTenant%2CqueryAdministratorByPage%2CisExistAccountInTenantByMobile%2CaccountPassword%2CcreateTenantAndAccount%2CbindTenant%26pid%3D15544%26qos.enable%3Dfalse%26qos.port%3D22220%26register.ip%3D192.168.76.1%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D60000%26timestamp%3D1674796538703&register.ip=192.168.76.1&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538703, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,809 INFO [main][AnnotatedInterfaceConfigBeanBuilder.java:84] - The configBean[type:ReferenceBean] has been built.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,812 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,822 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,822 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,828 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539813, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,828 DEBUG [main][AbstractSpringCloudRegistry.java:116] - The URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539813] should not be registered.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,828 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539813, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,828 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : user-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,831 DEBUG [DubboClientHandler-192.168.76.1:20880-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,831 DEBUG [main][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539813] will notify all URLs : [dubbo://192.168.76.1:20880?anyhost=true&application=user-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.AuthorizationService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=10084&register=true&release=2.7.3&side=provider&timestamp=1674789026550]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,831 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : merchant-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,834 DEBUG [DubboClientHandler-192.168.76.1:20890-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,835 DEBUG [main][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539813] will notify all URLs : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,836 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : gateway-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,836 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,836 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,836 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,837 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : merchant-application]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,839 DEBUG [DubboClientHandler-192.168.76.1:20891-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,840 DEBUG [main][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539813] will notify all URLs : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,841 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539813, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,843 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539813, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,845 INFO [main][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539813, urls: [dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.AuthorizationService?anyhost=true&application=user-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.AuthorizationService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&path=com.me.yimu.pay.user.api.AuthorizationService&pid=10084&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1674789026550], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,846 INFO [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539813, urls: [dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.AuthorizationService?anyhost=true&application=user-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.AuthorizationService&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&path=com.me.yimu.pay.user.api.AuthorizationService&pid=10084&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1674789026550], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:39,847 INFO [main][ReferenceConfig.java:421] -  [DUBBO] Refer dubbo service com.me.yimu.pay.user.api.AuthorizationService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&check=false&cluster=registryaware&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15544&qos.enable=false&qos.port=22220&refer=application%3Duaa-service%26check%3Dfalse%26dubbo%3D2.0.2%26interface%3Dcom.me.yimu.pay.user.api.AuthorizationService%26lazy%3Dfalse%26methods%3DremoveRole%2CroleBindPrivilege%2CmodifyRole%2CcreateRole%2CunbindAccountRole%2CqueryPrivilege%2CqueryRole%2CqueryPrivilegeTree%2CqueryRoleByPage%2CbindAccountRole%2CqueryPrivilegeByGroupId%2CqueryTenantRole%2Cauthorize%26pid%3D15544%26qos.enable%3Dfalse%26qos.port%3D22220%26register.ip%3D192.168.76.1%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D60000%26timestamp%3D1674796539813&register.ip=192.168.76.1&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539813, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:40,099 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:40,099 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:40,102 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:40,102 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:40,129 DEBUG [main][TraversableResolvers.java:60] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:40,130 DEBUG [main][ResourceBundleMessageInterpolator.java:89] - Loaded expression factory via original TCCL
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:40,135 DEBUG [main][TraversableResolvers.java:60] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:40,136 DEBUG [main][ConfigurationImpl.java:148] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:40,136 DEBUG [main][ConfigurationImpl.java:180] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:40,137 DEBUG [main][ConfigurationImpl.java:194] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:40,137 DEBUG [main][ValidationXmlParser.java:120] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:40,137 DEBUG [main][ResourceLoaderHelper.java:53] - Trying to load META-INF/validation.xml via user class loader
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:40,138 DEBUG [main][ResourceLoaderHelper.java:60] - Trying to load META-INF/validation.xml via TCCL
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:40,138 DEBUG [main][ResourceLoaderHelper.java:66] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:40,138 DEBUG [main][ValidationXmlParser.java:127] - No META-INF/validation.xml found. Using annotation based configuration only.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:40,142 DEBUG [main][ValidatorFactoryImpl.java:578] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:40,142 DEBUG [main][ValidatorFactoryImpl.java:579] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:40,142 DEBUG [main][ValidatorFactoryImpl.java:580] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:40,142 DEBUG [main][ValidatorFactoryImpl.java:581] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:40,142 DEBUG [main][ValidatorFactoryImpl.java:582] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:40,244 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:40,520 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:40,537 INFO [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:40,951 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/public/**'], []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:40,951 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/webjars/**'], []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:40,951 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/v2/**'], []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:40,952 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/swagger**'], []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:40,952 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/static/**'], []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:40,952 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/resources/**'], []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,048 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3be50b2c, org.springframework.security.web.context.SecurityContextPersistenceFilter@87fc0fc, org.springframework.security.web.header.HeaderWriterFilter@2d3eb1ea, org.springframework.security.web.authentication.logout.LogoutFilter@1c4aa701, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@1ecec098, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@383e6734, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@c335b9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7c8b37a8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6be80629, org.springframework.security.web.session.SessionManagementFilter@1bde9a22, org.springframework.security.web.access.ExceptionTranslationFilter@7cd3860, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@8afce3]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,058 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1bbb48dd, org.springframework.security.web.context.SecurityContextPersistenceFilter@323c6f9c, org.springframework.security.web.header.HeaderWriterFilter@52c6e959, org.springframework.security.web.authentication.logout.LogoutFilter@19d9ba89, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@359ea595, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@dbca149, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@68550d86, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@f9de1fd, org.springframework.security.web.session.SessionManagementFilter@4b475742, org.springframework.security.web.access.ExceptionTranslationFilter@3d405fe5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@37b470df]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,278 INFO [main][EndpointLinksResolver.java:59] - Exposing 4 endpoint(s) beneath base path '/actuator'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,482 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : user-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,482 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : merchant-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,482 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,482 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : merchant-application] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,482 INFO [main][DubboServiceMetadataRepository.java:262] - The metadata of Dubbo services has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,531 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,533 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : user-service , size : 1] change is about to be dispatched
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,534 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : user-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,537 DEBUG [DubboClientHandler-192.168.76.1:20880-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,537 DEBUG [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538703] will notify all URLs : [dubbo://192.168.76.1:20880?anyhost=true&application=user-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.TenantService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.TenantService&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,createTenantRelateAccount,sendMessage,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&pid=10084&register=true&release=2.7.3&side=provider&timestamp=1674789027661]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,538 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : user-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,540 DEBUG [DubboClientHandler-192.168.76.1:20880-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,541 DEBUG [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539813] will notify all URLs : [dubbo://192.168.76.1:20880?anyhost=true&application=user-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.AuthorizationService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.AuthorizationService&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=10084&register=true&release=2.7.3&side=provider&timestamp=1674789026550]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,542 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : merchant-service , size : 1] change is about to be dispatched
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,542 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : merchant-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,545 DEBUG [DubboClientHandler-192.168.76.1:20890-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,545 DEBUG [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538703] will notify all URLs : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,546 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : merchant-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,548 DEBUG [DubboClientHandler-192.168.76.1:20890-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,548 DEBUG [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539813] will notify all URLs : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,549 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : gateway-service , size : 1] change is about to be dispatched
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,549 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : gateway-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,549 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,549 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,550 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.TenantService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,550 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : gateway-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,550 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,550 DEBUG [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,550 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.user.api.AuthorizationService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,550 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : merchant-application , size : 1] change is about to be dispatched
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,551 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : merchant-application]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,552 INFO [main][ServiceBean.java:112] -  [DUBBO] The service ready on spring started. service: com.me.yimu.pay.uaa.api.OauthClientDetailsService, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,553 DEBUG [DubboClientHandler-192.168.76.1:20891-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,554 DEBUG [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538703] will notify all URLs : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,554 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : merchant-application]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,556 DEBUG [DubboClientHandler-192.168.76.1:20891-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,556 DEBUG [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539813] will notify all URLs : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,559 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,575 INFO [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.me.yimu.pay.uaa.api.OauthClientDetailsService to local registry url : injvm://127.0.0.1/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674796541560, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,575 INFO [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.me.yimu.pay.uaa.api.OauthClientDetailsService to url dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674796541560, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,575 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,576 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.me.yimu.pay.uaa.api.OauthClientDetailsService url dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674796541560 to registry registry://localhost:9090/org.apache.dubbo.registry.RegistryService?application=uaa-service&dubbo=2.0.2&pid=15544&qos.enable=false&qos.port=22220&registry=spring-cloud&release=2.7.3&timestamp=1674796541559, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,594 INFO [main][AbstractServer.java:73] -  [DUBBO] Start NettyServer bind /0.0.0.0:20881, export /192.168.76.1:20881, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,600 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15544&register=true&release=2.7.3&side=provider&timestamp=1674796541560, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,919 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674796541560, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,919 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService] is being subscribed for service[name : user-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,923 DEBUG [DubboClientHandler-192.168.76.1:20880-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,923 DEBUG [main][AbstractSpringCloudRegistry.java:289] - The subscribed URL[provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674796541560] will notify all URLs : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,923 DEBUG [main][RegistryProtocol.java:524] -  [DUBBO] original override urls: [], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,923 DEBUG [main][RegistryProtocol.java:528] -  [DUBBO] subscribe url: provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674796541560, override urls: [], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,924 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService] is being subscribed for service[name : merchant-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,926 DEBUG [DubboClientHandler-192.168.76.1:20890-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,927 DEBUG [main][AbstractSpringCloudRegistry.java:289] - The subscribed URL[provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674796541560] will notify all URLs : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,927 DEBUG [main][RegistryProtocol.java:524] -  [DUBBO] original override urls: [], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,927 DEBUG [main][RegistryProtocol.java:528] -  [DUBBO] subscribe url: provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674796541560, override urls: [], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,927 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService] is being subscribed for service[name : gateway-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,927 INFO [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.me.yimu.pay.uaa.api.OauthClientDetailsService] can't be found when the subscribed service[name : gateway-service], and then try to initialize it
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,927 DEBUG [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : gateway-service] has been initialized
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,927 WARN [main][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.me.yimu.pay.uaa.api.OauthClientDetailsService] still can't be found, it could effect the further Dubbo service invocation
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,928 INFO [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService] is being subscribed for service[name : merchant-application]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,930 DEBUG [DubboClientHandler-192.168.76.1:20891-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,930 DEBUG [main][AbstractSpringCloudRegistry.java:289] - The subscribed URL[provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674796541560] will notify all URLs : []
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,930 DEBUG [main][RegistryProtocol.java:524] -  [DUBBO] original override urls: [], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,930 DEBUG [main][RegistryProtocol.java:528] -  [DUBBO] subscribe url: provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674796541560, override urls: [], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,931 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,932 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.me.yimu.pay.uaa.api.OauthClientDetailsService url dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674796541560 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&dubbo=2.0.2&pid=15544&qos.enable=false&qos.port=22220&registry=nacos&release=2.7.3&timestamp=1674796541559, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,932 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15544&register=true&release=2.7.3&side=provider&timestamp=1674796541560, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,934 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674796541560, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,936 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674796541560, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,936 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674796541560, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,940 INFO [main][DirectJDKLog.java:173] - Starting ProtocolHandler ["http-nio-56020"]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,952 INFO [main][TomcatWebServer.java:204] - Tomcat started on port(s): 56020 (http) with context path '/uaa'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,964 WARN [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,970 INFO [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to local registry url : injvm://127.0.0.1/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674796541964&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,970 INFO [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to url dubbo://192.168.76.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674796541964&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,971 INFO [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,971 INFO [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService url dubbo://192.168.76.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674796541964&version=1.0.0 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&dubbo=2.0.2&pid=15544&qos.enable=false&qos.port=22220&registry=nacos&release=2.7.3&timestamp=1674796541964, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,972 INFO [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.76.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15544&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674796541964&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,975 INFO [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.76.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674796541964&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,979 WARN [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.76.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674796541964&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,979 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.76.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674796541964&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,979 INFO [main][DubboMetadataServiceExporter.java:86] - The Dubbo service[<dubbo:service path="com.alibaba.cloud.dubbo.service.DubboMetadataService" ref="com.alibaba.cloud.dubbo.service.IntrospectiveDubboMetadataService@1e288c76" prefix="dubbo.service.com.alibaba.cloud.dubbo.service.DubboMetadataService" generic="false" exported="true" unexported="false" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" dynamic="true" version="1.0.0" group="uaa-service" deprecated="false" register="true" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" />] has been exported.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,991 INFO [main][NacosServiceRegistry.java:62] - nacos registry, uaa-service 192.168.76.1:56020 register finished
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:41,995 INFO [main][StartupInfoLogger.java:59] - Started UAABootstrap in 8.885 seconds (JVM running for 9.806)
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:42,941 WARN [com.alibaba.nacos.naming.push.receiver][HostReactor.java:110] - out of date data received, old-t: 1674796542939, new-t: 1674796542937
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:43,006 DEBUG [DubboServerHandler-192.168.76.1:20881-thread-2][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:43,011 DEBUG [DubboServerHandler-192.168.76.1:20881-thread-3][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:43,013 DEBUG [DubboServerHandler-192.168.76.1:20881-thread-4][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:15:43,015 DEBUG [DubboServerHandler-192.168.76.1:20881-thread-5][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:11,544 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:20,696 INFO [http-nio-56020-exec-1][DirectJDKLog.java:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:20,696 INFO [http-nio-56020-exec-1][FrameworkServlet.java:524] - Initializing Servlet 'dispatcherServlet'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:20,711 INFO [http-nio-56020-exec-1][FrameworkServlet.java:546] - Completed initialization in 15 ms
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:20,732 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:20,808 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} created. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:20,815 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:20,815 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:20,826 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50000} query executed. 13.5571 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:20,826 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50000} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:20,828 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50000} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:20,830 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50000} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:20,831 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50000} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:20,832 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:20,832 DEBUG [http-nio-56020-exec-1][PreparedStatementPool.java:129] - {conn-10005, pstmt-20000} enter cache
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:20,833 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:20,838 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:20,838 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [test001]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:20,838 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:20,838 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50001} query executed. 0.6484 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:20,838 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50001} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:20,839 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50001} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:20,839 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50001} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:20,839 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:20,839 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:20,917 DEBUG [http-nio-56020-exec-2][TemplateEngine.java:325] - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,007 DEBUG [http-nio-56020-exec-2][ConfigurationPrinterHelper.java:158] - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.11.RELEASE (built 2018-10-28T22:35:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@1ddc795a
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@73c878df
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@2516862e
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,008 DEBUG [http-nio-56020-exec-2][TemplateEngine.java:348] - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,100 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,101 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [test001]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,102 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,104 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50002} query executed. 2.1249 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,104 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50002} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,104 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50002} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,104 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50002} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,105 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,105 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,443 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,444 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,444 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,445 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50003} query executed. 0.8789 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,445 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50003} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,445 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50003} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,445 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50003} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,446 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50003} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,446 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,446 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,449 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,449 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [test001]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,449 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,450 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50004} query executed. 0.8801 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,450 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50004} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,450 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50004} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,450 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50004} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,450 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,451 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,696 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,696 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,697 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,698 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50005} query executed. 1.2594 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,698 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50005} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,698 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50005} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,699 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50005} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,699 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50005} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,699 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,699 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,700 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:132] - {conn-10004} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,700 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:137] - {conn-10004, pstmt-20001} created. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,700 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:137] - {conn-10004, pstmt-20001} Parameters : [test001]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,700 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:137] - {conn-10004, pstmt-20001} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,701 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:137] - {conn-10004, pstmt-20001, rs-50006} query executed. 0.586 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,701 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:142] - {conn-10004, pstmt-20001, rs-50006} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,701 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:142] - {conn-10004, pstmt-20001, rs-50006} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,702 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:142] - {conn-10004, pstmt-20001, rs-50006} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,702 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:137] - {conn-10004, pstmt-20001} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,702 DEBUG [http-nio-56020-exec-8][PreparedStatementPool.java:129] - {conn-10004, pstmt-20001} enter cache
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,703 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,703 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:132] - {conn-10004} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,703 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [test001]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,703 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,704 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50007} query executed. 0.9478 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,704 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50007} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,704 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50007} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,704 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50007} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,705 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,705 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,800 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,800 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [test001]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,800 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,801 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50008} query executed. 0.7146 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,801 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50008} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,801 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50008} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,801 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50008} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,802 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:21,802 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:22,047 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:22,048 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:22,048 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:22,048 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50009} query executed. 0.7759 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:22,048 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50009} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:22,049 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50009} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:22,049 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50009} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:22,049 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50009} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:22,049 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:22,049 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:22,052 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:22,052 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [test001]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:22,053 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:22,053 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50010} query executed. 0.6184 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:22,053 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50010} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:22,053 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50010} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:22,054 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50010} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:22,054 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:22,054 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:22,202 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:22,202 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [test001]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:22,202 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:22,203 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50011} query executed. 0.7697 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:22,203 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50011} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:22,204 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50011} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:22,204 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50011} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:22,204 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:22,204 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:32,897 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:32,897 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:32,898 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:32,899 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50012} query executed. 1.8458 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:32,900 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50012} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:32,900 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50012} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:32,901 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50012} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:32,902 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50012} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:32,902 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:32,903 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:32,907 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:32,907 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [test001]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:32,907 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:32,908 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50013} query executed. 1.1189 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:32,908 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50013} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:32,909 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50013} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:32,909 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50013} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:32,909 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:32,909 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:33,245 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:33,245 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [test001]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:33,246 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:33,246 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50014} query executed. 0.6053 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:33,246 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50014} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:33,247 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50014} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:33,247 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50014} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:33,247 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:33,247 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:33,876 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:33,877 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:33,877 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:33,878 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50015} query executed. 0.8832 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:33,878 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50015} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:33,878 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50015} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:33,878 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50015} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:33,879 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50015} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:33,879 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:33,879 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:33,883 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:33,884 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [test001]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:33,884 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:33,885 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50016} query executed. 1.0254 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:33,885 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50016} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:33,885 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50016} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:33,886 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50016} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:33,886 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:33,886 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,233 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,234 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [test001]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,234 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,235 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50017} query executed. 1.0903 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,235 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50017} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,235 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50017} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,235 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50017} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,236 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,236 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,497 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,498 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,498 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,498 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50018} query executed. 0.6868 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,499 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50018} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,499 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50018} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,499 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50018} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,499 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50018} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,500 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,500 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,502 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,502 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [test001]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,503 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,503 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50019} query executed. 0.6613 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,503 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50019} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,503 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50019} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,504 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50019} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,504 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,504 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,558 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,558 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [test001]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,559 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,560 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50020} query executed. 1.5509 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,560 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50020} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,561 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50020} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,561 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50020} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,561 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:34,561 DEBUG [http-nio-56020-exec-8][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:40,881 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:40,881 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:40,881 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:40,882 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50021} query executed. 0.9379 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:40,882 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50021} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:40,882 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50021} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:40,883 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50021} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:40,883 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50021} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:40,883 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:40,883 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:40,886 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:40,887 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [test001]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:40,887 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:40,887 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50022} query executed. 0.6805 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:40,887 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50022} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:40,888 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50022} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:40,888 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50022} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:40,888 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:40,888 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:41,237 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:41,238 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [test001]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:41,238 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:41,239 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50023} query executed. 0.816 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:41,239 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50023} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:41,239 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50023} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:41,239 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50023} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:41,239 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:41,239 DEBUG [http-nio-56020-exec-1][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:41,553 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:41,934 DEBUG [NettyClientWorker-4-2][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xdfd942a4, L:/192.168.76.1:51360 - R:/192.168.76.1:20890]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:41,934 DEBUG [NettyClientWorker-4-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x47370edc, L:/192.168.76.1:51354 - R:/192.168.76.1:20880]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:41,936 DEBUG [NettyClientWorker-4-2][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-2, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:41,936 DEBUG [NettyClientWorker-4-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:41,946 DEBUG [NettyClientWorker-4-3][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xfab3eb18, L:/192.168.76.1:51365 - R:/192.168.76.1:20891]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:41,948 DEBUG [NettyClientWorker-4-3][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-3, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:43,029 DEBUG [NettyServerWorker-6-1][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:51393, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,776 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,777 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,777 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,777 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50024} query executed. 0.6667 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,778 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50024} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,778 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50024} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,778 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50024} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,778 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50024} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,778 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,778 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,788 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,788 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,788 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,790 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50025} query executed. 1.383 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,790 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50025} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,790 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50025} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,791 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50025} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,791 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50025} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,791 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,792 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,794 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,794 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,794 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,795 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50026} query executed. 0.6478 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,795 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50026} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,796 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50026} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,796 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50026} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,796 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50026} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,796 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,797 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,802 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,802 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,802 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,803 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50027} query executed. 0.5957 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,803 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50027} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,803 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50027} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,804 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50027} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,804 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50027} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,804 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,805 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,832 DEBUG [DubboClientHandler-192.168.76.1:20880-thread-2][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,840 INFO [http-nio-56020-exec-3][IntegrationUserDetailsAuthenticationHandler.java:55] - loginInfoDTO:{"id":3,"mobile":"15269652631","resources":{},"tenantAuthorizationInfoMap":{4:{"rolePrivilegeMap":{"r_001":["sj_m_console","sj_m_app_list","sj_m_transaction_list","sj_m_account_check","sj_m_payment","sj_m_account_list","sj_m_enterprise_auth","sj_m_store_list","sj_m_staff_list","sj_o_member_list","sj_o_entreprise_list","sj_o_audit","sj_o_service_type"]}}},"tenants":[{"bundleCode":"shanju-merchant","id":4,"name":"test01_03jN8Z","tenantTypeCode":"shanju-merchant"}],"username":"test01"}
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,848 DEBUG [DubboClientHandler-192.168.76.1:20880-thread-2][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,851 INFO [http-nio-56020-exec-3][IntegrationUserDetailsAuthenticationHandler.java:116] - @@@@@@@@@@@:{"accountNonExpired":true,"accountNonLocked":true,"authorities":[],"credentialsNonExpired":true,"enabled":true,"mobile":"15269652631","password":"123456","payload":{4:{"user_authorities":{"r_001":["sj_m_console","sj_m_app_list","sj_m_transaction_list","sj_m_account_check","sj_m_payment","sj_m_account_list","sj_m_enterprise_auth","sj_m_store_list","sj_m_staff_list","sj_o_member_list","sj_o_entreprise_list","sj_o_audit","sj_o_service_type"]}}},"tenant":{"tenantId":1},"username":"test01"}
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,856 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,858 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} setAutoCommit false
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,862 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,862 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,863 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50028} query executed. 1.1853 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,863 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50028} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,864 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50028} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,864 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50028} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,865 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50028} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,865 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,865 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,866 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,866 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50029} query executed. 1.0072 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,867 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50029} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,867 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50029} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,867 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50029} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,868 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50029} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,869 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,870 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,870 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,871 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50030} query executed. 0.9643 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,871 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50030} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,872 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50030} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,872 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50030} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,873 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50030} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:48,873 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:49,197 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} commited
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:49,197 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} setAutoCommit true
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:49,198 DEBUG [http-nio-56020-exec-3][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:49,247 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:49,248 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:49,248 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:49,249 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50031} query executed. 1.1023 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:49,249 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50031} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:49,249 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50031} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:49,249 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50031} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:49,250 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50031} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:49,250 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:49,251 DEBUG [http-nio-56020-exec-4][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:53,773 DEBUG [NettyServerWorker-6-2][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:51599, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,005 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,006 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,006 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,007 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50032} query executed. 1.2496 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,007 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50032} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,008 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50032} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,008 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50032} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,008 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50032} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,008 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,009 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,012 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,012 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,013 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,013 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50033} query executed. 0.8367 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,013 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50033} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,014 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50033} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,014 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50033} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,014 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50033} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,014 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,015 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,017 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,017 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,017 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,018 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50034} query executed. 0.7064 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,018 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50034} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,018 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50034} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,019 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50034} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,019 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50034} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,019 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,019 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,022 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,022 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,022 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,023 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50035} query executed. 0.7706 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,023 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50035} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,024 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50035} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,024 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50035} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,024 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50035} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,025 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,025 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,062 DEBUG [DubboClientHandler-192.168.76.1:20880-thread-2][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,063 INFO [http-nio-56020-exec-5][IntegrationUserDetailsAuthenticationHandler.java:55] - loginInfoDTO:{"id":3,"mobile":"15269652631","resources":{},"tenantAuthorizationInfoMap":{4:{"rolePrivilegeMap":{"r_001":["sj_m_console","sj_m_app_list","sj_m_transaction_list","sj_m_account_check","sj_m_payment","sj_m_account_list","sj_m_enterprise_auth","sj_m_store_list","sj_m_staff_list","sj_o_member_list","sj_o_entreprise_list","sj_o_audit","sj_o_service_type"]}}},"tenants":[{"bundleCode":"shanju-merchant","id":4,"name":"test01_03jN8Z","tenantTypeCode":"shanju-merchant"}],"username":"test01"}
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,072 DEBUG [DubboClientHandler-192.168.76.1:20880-thread-2][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,073 INFO [http-nio-56020-exec-5][IntegrationUserDetailsAuthenticationHandler.java:116] - @@@@@@@@@@@:{"accountNonExpired":true,"accountNonLocked":true,"authorities":[],"credentialsNonExpired":true,"enabled":true,"mobile":"15269652631","password":"123456","payload":{4:{"user_authorities":{"r_001":["sj_m_console","sj_m_app_list","sj_m_transaction_list","sj_m_account_check","sj_m_payment","sj_m_account_list","sj_m_enterprise_auth","sj_m_store_list","sj_m_staff_list","sj_o_member_list","sj_o_entreprise_list","sj_o_audit","sj_o_service_type"]}}},"tenant":{"tenantId":1},"username":"test01"}
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,076 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,076 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} setAutoCommit false
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,077 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,077 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,078 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50036} query executed. 1.1776 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,078 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50036} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,078 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50036} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,078 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50036} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,079 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50036} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,079 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,080 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,080 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,080 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50037} query executed. 0.8485 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,081 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50037} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,081 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50037} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,082 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50037} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,083 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50037} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,083 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,084 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,084 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,086 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50038} query executed. 1.6774 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,086 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50038} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,086 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50038} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,086 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50038} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,087 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50038} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,087 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,088 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} commited
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,089 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} setAutoCommit true
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,090 DEBUG [http-nio-56020-exec-5][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,104 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,105 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,105 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,105 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50039} query executed. 0.6952 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,106 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50039} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,106 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50039} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,106 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50039} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,107 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50039} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,107 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:16:58,107 DEBUG [http-nio-56020-exec-6][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:11,562 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:17,746 DEBUG [NettyServerWorker-6-3][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:51914, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:41,576 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:41,948 DEBUG [NettyClientWorker-4-2][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xdfd942a4, L:/192.168.76.1:51360 - R:/192.168.76.1:20890]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:41,948 DEBUG [NettyClientWorker-4-2][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-2, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:41,963 DEBUG [NettyClientWorker-4-3][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xfab3eb18, L:/192.168.76.1:51365 - R:/192.168.76.1:20891]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:41,964 DEBUG [NettyClientWorker-4-3][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-3, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:43,034 DEBUG [NettyServerWorker-6-1][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:51393, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,121 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,122 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,122 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,123 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50040} query executed. 0.8794 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,123 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50040} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,123 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50040} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,123 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50040} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,124 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50040} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,124 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,125 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,129 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,129 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,129 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,130 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50041} query executed. 0.8165 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,130 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50041} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,130 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50041} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,130 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50041} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,131 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50041} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,131 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,131 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,133 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,134 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,134 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,135 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50042} query executed. 1.2608 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,135 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50042} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,135 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50042} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,136 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50042} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,136 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50042} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,136 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,136 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,139 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,140 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,140 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,140 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50043} query executed. 0.633 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,141 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50043} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,141 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50043} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,141 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50043} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,141 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50043} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,142 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,142 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,168 DEBUG [DubboClientHandler-192.168.76.1:20880-thread-2][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,169 INFO [http-nio-56020-exec-7][IntegrationUserDetailsAuthenticationHandler.java:55] - loginInfoDTO:{"id":3,"mobile":"15269652631","resources":{},"tenantAuthorizationInfoMap":{4:{"rolePrivilegeMap":{"r_001":["sj_m_console","sj_m_app_list","sj_m_transaction_list","sj_m_account_check","sj_m_payment","sj_m_account_list","sj_m_enterprise_auth","sj_m_store_list","sj_m_staff_list","sj_o_member_list","sj_o_entreprise_list","sj_o_audit","sj_o_service_type"]}}},"tenants":[{"bundleCode":"shanju-merchant","id":4,"name":"test01_03jN8Z","tenantTypeCode":"shanju-merchant"}],"username":"test01"}
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,176 DEBUG [DubboClientHandler-192.168.76.1:20880-thread-2][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,177 INFO [http-nio-56020-exec-7][IntegrationUserDetailsAuthenticationHandler.java:116] - @@@@@@@@@@@:{"accountNonExpired":true,"accountNonLocked":true,"authorities":[],"credentialsNonExpired":true,"enabled":true,"mobile":"15269652631","password":"123456","payload":{4:{"user_authorities":{"r_001":["sj_m_console","sj_m_app_list","sj_m_transaction_list","sj_m_account_check","sj_m_payment","sj_m_account_list","sj_m_enterprise_auth","sj_m_store_list","sj_m_staff_list","sj_o_member_list","sj_o_entreprise_list","sj_o_audit","sj_o_service_type"]}}},"tenant":{"tenantId":1},"username":"test01"}
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,180 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,180 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} setAutoCommit false
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,181 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,181 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,181 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50044} query executed. 0.7957 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,182 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50044} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,182 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50044} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,182 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50044} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,182 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50044} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,183 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,183 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,183 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,184 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50045} query executed. 0.8047 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,184 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50045} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,184 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50045} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,184 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50045} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,185 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50045} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,185 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,185 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,186 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,187 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50046} query executed. 1.3849 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,187 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50046} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,187 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50046} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,188 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50046} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,188 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50046} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,188 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,189 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} commited
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,189 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} setAutoCommit true
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,190 DEBUG [http-nio-56020-exec-7][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,523 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:132] - {conn-10005} pool-connect
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,523 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Parameters : [merchant-platform]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,524 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} Types : [VARCHAR]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,524 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000, rs-50047} query executed. 0.9996 millis. select client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove from oauth_client_details where client_id = ?
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,525 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50047} open
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,525 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50047} Header: [client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,525 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50047} Result: [merchant-platform, 123456, yimu-resource, read, client_credentials,password,authorization_code,implicit,refresh_token, null, ROLE_MERCHANT,ROLE_USER, 31536000, 259200, null, false]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,525 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:142] - {conn-10005, pstmt-20000, rs-50047} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,526 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} clearParameters. 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:49,526 DEBUG [http-nio-56020-exec-9][Log4j2Filter.java:132] - {conn-10005} pool-recycle
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:17:53,778 DEBUG [NettyServerWorker-6-2][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:51599, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:11,594 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:17,341 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538850&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:17,344 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538703, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:17,345 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539813, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:17,759 DEBUG [NettyServerWorker-6-3][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:51914, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:26,380 DEBUG [DubboClientHandler-192.168.76.1:20880-thread-2][DubboProtocol.java:174] -  [DUBBO] disconnected from /192.168.76.1:20880,url:dubbo://192.168.76.1:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20880&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=user-service&heartbeat=60000&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15544&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.76.1&release=2.7.3&remote.application=user-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=60000&timestamp=1674789028034&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:26,385 DEBUG [DubboServerHandler-192.168.76.1:20881-thread-8][DubboProtocol.java:174] -  [DUBBO] disconnected from /192.168.76.1:51393,url:dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&channel.readonly.sent=true&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&heartbeat=60000&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674796541560, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:27,411 INFO [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : user-service , size : 0] change is about to be dispatched
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:27,413 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService] is being subscribed for service[name : user-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:27,413 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:249] - There is no instance from service[name : user-service], and then Dubbo Service[key : com.me.yimu.pay.user.api.TenantService] will not be available , please make sure the further impact
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:27,414 DEBUG [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538703] will notify all URLs : [empty://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538703]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:27,414 WARN [com.alibaba.nacos.naming.client.listener][RegistryDirectory.java:659] -  [DUBBO] Unsupported category providers,configurators,routers in notified url: empty://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538703 from registry localhost:9090 to consumer 192.168.76.1, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:27,414 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService] is being subscribed for service[name : user-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:27,414 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:249] - There is no instance from service[name : user-service], and then Dubbo Service[key : com.me.yimu.pay.user.api.AuthorizationService] will not be available , please make sure the further impact
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:27,414 DEBUG [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539813] will notify all URLs : [empty://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539813]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:27,415 WARN [com.alibaba.nacos.naming.client.listener][RegistryDirectory.java:659] -  [DUBBO] Unsupported category providers,configurators,routers in notified url: empty://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539813 from registry localhost:9090 to consumer 192.168.76.1, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:27,415 INFO [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService] is being subscribed for service[name : user-service]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:27,415 WARN [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:249] - There is no instance from service[name : user-service], and then Dubbo Service[key : com.me.yimu.pay.uaa.api.OauthClientDetailsService] will not be available , please make sure the further impact
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:27,415 DEBUG [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] - The subscribed URL[provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674796541560] will notify all URLs : [empty://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674796541560]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:27,415 DEBUG [com.alibaba.nacos.naming.client.listener][RegistryProtocol.java:524] -  [DUBBO] original override urls: [empty://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674796541560], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:27,415 DEBUG [com.alibaba.nacos.naming.client.listener][RegistryProtocol.java:528] -  [DUBBO] subscribe url: provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674796541560, override urls: [empty://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674796541560], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:27,416 DEBUG [com.alibaba.nacos.naming.client.listener][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adaptive implements org.apache.dubbo.rpc.cluster.ConfiguratorFactory {
public org.apache.dubbo.rpc.cluster.Configurator getConfigurator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.ConfiguratorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.cluster.ConfiguratorFactory extension = (org.apache.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:41,599 WARN [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:5) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:41,957 DEBUG [NettyClientWorker-4-2][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xdfd942a4, L:/192.168.76.1:51360 - R:/192.168.76.1:20890]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:41,959 DEBUG [NettyClientWorker-4-2][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-2, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:41,972 DEBUG [NettyClientWorker-4-3][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xfab3eb18, L:/192.168.76.1:51365 - R:/192.168.76.1:20891]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:41,974 DEBUG [NettyClientWorker-4-3][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-3, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:42,426 INFO [dubbo-client-idleCheck-thread-1][ReconnectTimerTask.java:48] -  [DUBBO] Initial connection to HeaderExchangeClient [channel=org.apache.dubbo.remoting.transport.netty4.NettyClient [192.168.76.1:0 -> /192.168.76.1:20880]], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:44,464 ERROR [dubbo-client-idleCheck-thread-1][ReconnectTimerTask.java:51] -  [DUBBO] Fail to connect to HeaderExchangeClient [channel=org.apache.dubbo.remoting.transport.netty4.NettyClient [192.168.76.1:0 -> /192.168.76.1:20880]], dubbo version: 2.7.3, current host: 192.168.76.1
org.apache.dubbo.remoting.RemotingException: client(url: dubbo://192.168.76.1:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20880&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=user-service&heartbeat=60000&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15544&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.76.1&release=2.7.3&remote.application=user-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=60000&timestamp=1674789028034&version=1.0.0) failed to connect to server /192.168.76.1:20880, error message is:Connection refused: no further information: /192.168.76.1:20880
	at org.apache.dubbo.remoting.transport.netty4.NettyClient.doConnect(NettyClient.java:166)
	at org.apache.dubbo.remoting.transport.AbstractClient.connect(AbstractClient.java:190)
	at org.apache.dubbo.remoting.transport.AbstractClient.reconnect(AbstractClient.java:246)
	at org.apache.dubbo.remoting.exchange.support.header.HeaderExchangeClient.reconnect(HeaderExchangeClient.java:155)
	at org.apache.dubbo.remoting.exchange.support.header.ReconnectTimerTask.doTask(ReconnectTimerTask.java:49)
	at org.apache.dubbo.remoting.exchange.support.header.AbstractTimerTask.run(AbstractTimerTask.java:87)
	at org.apache.dubbo.common.timer.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:648)
	at org.apache.dubbo.common.timer.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:727)
	at org.apache.dubbo.common.timer.HashedWheelTimer$Worker.run(HashedWheelTimer.java:449)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /192.168.76.1:20880
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:715)
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:327)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:340)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:665)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:612)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:529)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:491)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:905)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	... 1 more
Caused by: java.net.ConnectException: Connection refused: no further information
	... 11 more
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:53,780 DEBUG [NettyServerWorker-6-2][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.76.1:51599, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:55,693 INFO [RMI TCP Connection(2)-127.0.0.1][SpringApplicationAdminMXBeanRegistrar.java:163] - Application shutdown requested.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:55,694 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://192.168.76.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15544&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674796541964&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:55,697 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://192.168.76.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674796541964&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:55,697 INFO [Exporter-Unexport-thread-1][RegistryProtocol.java:689] -  [DUBBO] Waiting 10000ms for registry to notify all consumers before unexport. Usually, this is called when you use dubbo API, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:55,697 INFO [RMI TCP Connection(2)-127.0.0.1][DubboMetadataServiceExporter.java:107] - The Dubbo service[<dubbo:service path="com.alibaba.cloud.dubbo.service.DubboMetadataService" ref="com.alibaba.cloud.dubbo.service.IntrospectiveDubboMetadataService@1e288c76" prefix="dubbo.service.com.alibaba.cloud.dubbo.service.DubboMetadataService" generic="false" exported="true" unexported="true" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" dynamic="true" version="1.0.0" group="uaa-service" deprecated="false" register="true" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" />] has been unexported.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:55,698 INFO [RMI TCP Connection(2)-127.0.0.1][AwaitingNonWebApplicationListener.java:155] -  [Dubbo] Current Spring Boot Application is about to shutdown...
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:55,698 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistryFactory.java:68] -  [DUBBO] Close all registries [nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&timestamp=1674796538853], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:55,698 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:458] -  [DUBBO] Destroy registry:nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=uaa-service&dubbo=2.0.2&interface=org.apache.dubbo.registry.RegistryService&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&timestamp=1674796538853, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:55,698 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15544&register=true&release=2.7.3&side=provider&timestamp=1674796541560, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:55,700 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:467] -  [DUBBO] Destroy unregister url dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15544&register=true&release=2.7.3&side=provider&timestamp=1674796541560, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:55,700 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:291] -  [DUBBO] Unregister: consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539813, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:55,702 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:467] -  [DUBBO] Destroy unregister url consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539813, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:55,702 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:291] -  [DUBBO] Unregister: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538850&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:55,703 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:467] -  [DUBBO] Destroy unregister url consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538850&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:55,704 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:291] -  [DUBBO] Unregister: consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538703, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:55,705 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:467] -  [DUBBO] Destroy unregister url consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538703, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:55,705 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:291] -  [DUBBO] Unregister: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539749&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:55,706 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:467] -  [DUBBO] Destroy unregister url consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539749&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:55,706 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:291] -  [DUBBO] Unregister: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539711&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:55,707 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:467] -  [DUBBO] Destroy unregister url consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539711&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:55,707 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674796541560, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:55,707 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:483] -  [DUBBO] Destroy unsubscribe url provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674796541560, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:55,708 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539813, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:55,708 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:483] -  [DUBBO] Destroy unsubscribe url consumer://192.168.76.1/com.me.yimu.pay.user.api.AuthorizationService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539813, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:55,708 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538850&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:55,708 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:483] -  [DUBBO] Destroy unsubscribe url consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538850&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:55,708 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539711&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:55,708 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:483] -  [DUBBO] Destroy unsubscribe url consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539711&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:55,709 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539749&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:55,709 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:483] -  [DUBBO] Destroy unsubscribe url consumer://192.168.76.1/org.apache.dubbo.rpc.service.GenericService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796539749&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:55,709 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538703, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:55,709 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:483] -  [DUBBO] Destroy unsubscribe url consumer://192.168.76.1/com.me.yimu.pay.user.api.TenantService?application=uaa-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,login,isExistAccountByUsername,getBundle,unbindTenant,removeTenant,queryTenants,queryBundleByTenantType,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,sendMessage,createTenantRelateAccount,createAccount,queryAllBundle,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,accountPassword,createTenantAndAccount,bindTenant&pid=15544&qos.enable=false&qos.port=22220&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674796538703, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:55,709 INFO [RMI TCP Connection(2)-127.0.0.1][DubboProtocol.java:616] -  [DUBBO] Close dubbo server: /192.168.76.1:20881, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:56,698 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.76.1:20881/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=uaa-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1674796541964&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:56,713 WARN [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674796541560, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:18:58,892 INFO [RMI TCP Connection(3)-127.0.0.1][SpringApplicationAdminMXBeanRegistrar.java:163] - Application shutdown requested.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,718 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractServer.java:153] -  [DUBBO] Close NettyServer bind /0.0.0.0:20881, export /192.168.76.1:20881, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,719 INFO [RMI TCP Connection(2)-127.0.0.1][NettyChannel.java:172] -  [DUBBO] Close netty channel [id: 0x488e71b7, L:/192.168.76.1:20881 - R:/192.168.76.1:51914], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,719 INFO [RMI TCP Connection(2)-127.0.0.1][NettyChannel.java:172] -  [DUBBO] Close netty channel [id: 0x35bb8e9f, L:/192.168.76.1:20881 - R:/192.168.76.1:51599], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,719 WARN [NettyServerWorker-6-3][AbstractServer.java:213] -  [DUBBO] All clients has disconnected from /192.168.76.1:20881. You can graceful shutdown now., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,720 WARN [NettyServerWorker-6-2][AbstractServer.java:213] -  [DUBBO] All clients has disconnected from /192.168.76.1:20881. You can graceful shutdown now., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,720 DEBUG [DubboSharedHandler-thread-1][DubboProtocol.java:174] -  [DUBBO] disconnected from /192.168.76.1:51914,url:dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&channel.readonly.sent=true&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&heartbeat=60000&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674796541560, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,720 DEBUG [DubboSharedHandler-thread-2][DubboProtocol.java:174] -  [DUBBO] disconnected from /192.168.76.1:51599,url:dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&channel.readonly.sent=true&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&heartbeat=60000&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674796541560, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,721 DEBUG [NettyServerWorker-6-1][PoolThreadCache.java:250] - Freed 5 thread-local buffer(s) from thread: NettyServerWorker-6-1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,723 INFO [RMI TCP Connection(2)-127.0.0.1][DubboProtocol.java:654] -  [DUBBO] Close dubbo connect: /192.168.76.1:51360-->/192.168.76.1:20890, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,723 INFO [RMI TCP Connection(2)-127.0.0.1][DubboProtocol.java:654] -  [DUBBO] Close dubbo connect: 192.168.76.1:0-->/192.168.76.1:20880, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,724 INFO [RMI TCP Connection(2)-127.0.0.1][DubboProtocol.java:654] -  [DUBBO] Close dubbo connect: /192.168.76.1:51365-->/192.168.76.1:20891, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,724 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractProtocol.java:66] -  [DUBBO] Destroy reference: dubbo://192.168.76.1:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20890&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15544&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.76.1&release=2.7.3&remote.application=merchant-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=60000&timestamp=1674788797941&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,724 INFO [RMI TCP Connection(2)-127.0.0.1][NettyChannel.java:172] -  [DUBBO] Close netty channel [id: 0xdfd942a4, L:/192.168.76.1:51360 - R:/192.168.76.1:20890], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,725 DEBUG [DubboSharedHandler-thread-2][DubboProtocol.java:174] -  [DUBBO] disconnected from /192.168.76.1:20890,url:dubbo://192.168.76.1:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20890&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-service&heartbeat=60000&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15544&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.76.1&release=2.7.3&remote.application=merchant-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=60000&timestamp=1674788797941&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,726 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractProtocol.java:66] -  [DUBBO] Destroy reference: dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.AuthorizationService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.AuthorizationService&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&path=com.me.yimu.pay.user.api.AuthorizationService&pid=15544&protocol=dubbo&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.76.1&release=2.7.3&remote.application=user-service&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674789026550, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,726 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractProtocol.java:66] -  [DUBBO] Destroy reference: dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.TenantService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.TenantService&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,createTenantRelateAccount,sendMessage,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&path=com.me.yimu.pay.user.api.TenantService&pid=15544&protocol=dubbo&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.76.1&release=2.7.3&remote.application=user-service&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674789027661, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,726 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractProtocol.java:66] -  [DUBBO] Destroy reference: dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.AuthorizationService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.AuthorizationService&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.AuthorizationService&lazy=false&methods=removeRole,roleBindPrivilege,modifyRole,createRole,unbindAccountRole,queryPrivilege,queryRole,queryPrivilegeTree,queryRoleByPage,bindAccountRole,queryPrivilegeByGroupId,queryTenantRole,authorize&pid=15544&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.76.1&release=2.7.3&remote.application=user-service&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674789026550, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,726 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractProtocol.java:66] -  [DUBBO] Destroy reference: dubbo://192.168.76.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20891&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15544&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.76.1&release=2.7.3&remote.application=merchant-application&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=60000&timestamp=1674788760943&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,726 INFO [RMI TCP Connection(2)-127.0.0.1][NettyChannel.java:172] -  [DUBBO] Close netty channel [id: 0xfab3eb18, L:/192.168.76.1:51365 - R:/192.168.76.1:20891], dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,727 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractProtocol.java:66] -  [DUBBO] Destroy reference: dubbo://192.168.76.1:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20880&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15544&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.76.1&release=2.7.3&remote.application=user-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=60000&timestamp=1674789028034&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,727 DEBUG [DubboSharedHandler-thread-2][DubboProtocol.java:174] -  [DUBBO] disconnected from /192.168.76.1:20891,url:dubbo://192.168.76.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&bind.ip=192.168.76.1&bind.port=20891&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-application&heartbeat=60000&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=15544&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.76.1&release=2.7.3&remote.application=merchant-application&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=60000&timestamp=1674788760943&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,727 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractProtocol.java:66] -  [DUBBO] Destroy reference: dubbo://192.168.76.1:20880/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=user-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=15544&protocol=dubbo&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.76.1&release=2.7.3&remote.application=user-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=60000&timestamp=1674789028034&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,728 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractProtocol.java:66] -  [DUBBO] Destroy reference: dubbo://192.168.76.1:20880/com.me.yimu.pay.user.api.TenantService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.user.api.TenantService&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.user.api.TenantService&lazy=false&methods=modifyBundle,getTenantByAccount,getAccountByUsername,createBundle,initBundle,isExistAccountByUsername,login,getBundle,unbindTenant,removeTenant,queryBundleByTenantType,queryTenants,getAccountByMobile,getApplicationDTOByClientId,queryAccount,changeBundle,isExistAccountInTenantByUsername,createAccountInTenant,authentication,queryAccountRole,queryAccountInTenant,isExistAccountByMobile,createTenantRelateAccount,sendMessage,queryAllBundle,createAccount,getTenant,queryAdministratorByPage,isExistAccountInTenantByMobile,createTenantAndAccount,accountPassword,bindTenant&pid=15544&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.76.1&release=2.7.3&remote.application=user-service&retries=-1&side=consumer&sticky=false&timeout=60000&timestamp=1674789027661, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,728 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractProtocol.java:66] -  [DUBBO] Destroy reference: dubbo://192.168.76.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=15544&protocol=dubbo&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.76.1&release=2.7.3&remote.application=merchant-application&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=60000&timestamp=1674788760943&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,728 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractProtocol.java:66] -  [DUBBO] Destroy reference: dubbo://192.168.76.1:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=uaa-service&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=15544&protocol=dubbo&qos.enable=false&qos.port=22220&register=true&register.ip=192.168.76.1&release=2.7.3&remote.application=merchant-service&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=60000&timestamp=1674788797941&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,728 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractProtocol.java:79] -  [DUBBO] Unexport service: dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674796541560, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,729 INFO [RMI TCP Connection(2)-127.0.0.1][Server.java:112] -  [DUBBO] qos-server stopped., dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,730 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractProtocol.java:79] -  [DUBBO] Unexport service: injvm://127.0.0.1/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674796541560, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,730 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:291] -  [DUBBO] Unregister: dubbo://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15544&register=true&release=2.7.3&side=provider&timestamp=1674796541560, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,731 INFO [RMI TCP Connection(2)-127.0.0.1][AbstractRegistry.java:320] -  [DUBBO] Unsubscribe: provider://192.168.76.1:20881/com.me.yimu.pay.uaa.api.OauthClientDetailsService?anyhost=true&application=uaa-service&bean.name=ServiceBean:com.me.yimu.pay.uaa.api.OauthClientDetailsService&bind.ip=192.168.76.1&bind.port=20881&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.me.yimu.pay.uaa.api.OauthClientDetailsService&methods=getClientDetailsByClientId,createClientDetails&pid=15544&qos.enable=false&qos.port=22220&register=true&release=2.7.3&side=provider&timestamp=1674796541560, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,732 INFO [Exporter-Unexport-thread-1][RegistryProtocol.java:689] -  [DUBBO] Waiting 10000ms for registry to notify all consumers before unexport. Usually, this is called when you use dubbo API, dubbo version: 2.7.3, current host: 192.168.76.1
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,735 INFO [RMI TCP Connection(2)-127.0.0.1][NacosServiceRegistry.java:74] - De-registering from Nacos Server now...
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,736 INFO [RMI TCP Connection(2)-127.0.0.1][NacosServiceRegistry.java:93] - De-registration finished.
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,739 INFO [RMI TCP Connection(2)-127.0.0.1][ExecutorConfigurationSupport.java:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,742 DEBUG [RMI TCP Connection(2)-127.0.0.1][AbstractRedisClient.java:436] - Initiate shutdown ([100, 100, MILLISECONDS], [100, 100, MILLISECONDS], {})
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,746 DEBUG [RMI TCP Connection(2)-127.0.0.1][DefaultClientResources.java:576] - Initiate shutdown ([0, 2, SECONDS], [0, 2, SECONDS], {})
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,747 DEBUG [RMI TCP Connection(2)-127.0.0.1][DefaultEventLoopGroupProvider.java:202] - Initiate shutdown ([0, 2, SECONDS], [0, 2, SECONDS], {})
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,755 INFO [RMI TCP Connection(2)-127.0.0.1][DruidDataSource.java:1885] - {dataSource-1} closing ...
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,757 DEBUG [RMI TCP Connection(2)-127.0.0.1][Log4j2Filter.java:132] - {conn-10001} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,757 DEBUG [RMI TCP Connection(2)-127.0.0.1][Log4j2Filter.java:132] - {conn-10002} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,758 DEBUG [RMI TCP Connection(2)-127.0.0.1][Log4j2Filter.java:132] - {conn-10003} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,759 DEBUG [RMI TCP Connection(2)-127.0.0.1][PreparedStatementPool.java:160] - {conn-10004, pstmt-20001} exit cache
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,759 DEBUG [RMI TCP Connection(2)-127.0.0.1][Log4j2Filter.java:137] - {conn-10004, pstmt-20001} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,759 DEBUG [RMI TCP Connection(2)-127.0.0.1][Log4j2Filter.java:132] - {conn-10004} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,760 DEBUG [RMI TCP Connection(2)-127.0.0.1][PreparedStatementPool.java:160] - {conn-10005, pstmt-20000} exit cache
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,760 DEBUG [RMI TCP Connection(2)-127.0.0.1][Log4j2Filter.java:137] - {conn-10005, pstmt-20000} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,760 DEBUG [RMI TCP Connection(2)-127.0.0.1][Log4j2Filter.java:132] - {conn-10005} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,761 INFO [RMI TCP Connection(2)-127.0.0.1][DruidDataSource.java:1955] - {dataSource-1} closed
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,765 INFO [RMI TCP Connection(2)-127.0.0.1][DubboGenericServiceFactory.java:159] - The Dubbo GenericService ReferenceBeans are destroying...
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,765 INFO [RMI TCP Connection(2)-127.0.0.1][DubboGenericServiceFactory.java:164] - Destroyed the ReferenceBean  : <dubbo:reference singleton="true" prefix="dubbo.reference.com.alibaba.cloud.dubbo.service.DubboMetadataService" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" generic="true" version="1.0.0" generic="true" group="merchant-application" sticky="false" lazy="false" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" /> 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,766 INFO [RMI TCP Connection(2)-127.0.0.1][DubboGenericServiceFactory.java:164] - Destroyed the ReferenceBean  : <dubbo:reference singleton="true" prefix="dubbo.reference.com.alibaba.cloud.dubbo.service.DubboMetadataService" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" generic="true" version="1.0.0" generic="true" group="merchant-service" sticky="false" lazy="false" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" /> 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,766 INFO [RMI TCP Connection(2)-127.0.0.1][DubboGenericServiceFactory.java:164] - Destroyed the ReferenceBean  : <dubbo:reference singleton="true" prefix="dubbo.reference.com.alibaba.cloud.dubbo.service.DubboMetadataService" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" generic="true" version="1.0.0" generic="true" group="user-service" sticky="false" lazy="false" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" /> 
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,766 INFO [RMI TCP Connection(2)-127.0.0.1][AnnotationInjectedBeanPostProcessor.java:293] - org.apache.dubbo.common.bytecode.proxy3@1909adf7 was destroying!
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,767 INFO [RMI TCP Connection(2)-127.0.0.1][AnnotationInjectedBeanPostProcessor.java:293] - org.apache.dubbo.common.bytecode.proxy2@6dd3addb was destroying!
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,767 INFO [RMI TCP Connection(2)-127.0.0.1][AnnotationInjectedBeanPostProcessor.java:305] - class org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor was destroying!
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,767 INFO [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - Pausing ProtocolHandler ["http-nio-56020"]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:05,996 INFO [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - Stopping service [Tomcat]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:06,001 INFO [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - Destroying Spring FrameworkServlet 'dispatcherServlet'
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:06,007 INFO [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - Stopping ProtocolHandler ["http-nio-56020"]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:06,012 INFO [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - Destroying ProtocolHandler ["http-nio-56020"]
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:07,957 DEBUG [NettyServerWorker-6-2][PoolThreadCache.java:250] - Freed 3 thread-local buffer(s) from thread: NettyServerWorker-6-2
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:07,957 DEBUG [NettyServerWorker-6-3][PoolThreadCache.java:250] - Freed 2 thread-local buffer(s) from thread: NettyServerWorker-6-3
[yimupay-uaa-service][${env:SERVER_PORT}] 2023-01-27 13:19:11,606 ERROR [ThreadPoolTaskScheduler-1][TaskUtils.java:96] - Unexpected error occurred in scheduled task.
java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a5b0b86 has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1089)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1104)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.getTargetBean(ApplicationListenerMethodAdapter.java:286)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:256)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:179)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.onApplicationEvent(ApplicationListenerMethodAdapter.java:142)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.nacos.discovery.NacosWatch.nacosServicesWatch(NacosWatch.java:120)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
