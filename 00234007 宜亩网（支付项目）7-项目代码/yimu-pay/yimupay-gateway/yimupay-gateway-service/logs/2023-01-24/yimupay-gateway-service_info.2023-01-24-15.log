[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:00:06,080 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:00:06,080 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:00:06,080 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:00:06,080 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:00:06,080 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:00:06,080 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:00:06,080 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:00:27,322 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:00:27,322 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:00:27,323 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:00:27,323 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:00:27,324 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:00:27,324 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:00:27,324 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:00:36,093 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:00:36,094 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:00:36,094 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:00:36,094 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:00:36,095 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:00:36,095 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:00:36,095 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:00:57,337 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:00:57,338 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:00:57,338 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:00:57,338 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:00:57,339 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:00:57,339 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:00:57,339 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:06,103 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:06,103 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:06,103 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:06,103 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:06,103 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:06,103 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:06,104 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:10,914 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:10,915 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:10,915 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:10,915 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:232] - Content-Length header = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:10,915 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:10,917 DEBUG [http-nio-56010-exec-6][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:27,345 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:27,345 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:27,345 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:27,345 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:27,345 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:27,345 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:27,345 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:36,109 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:36,109 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:36,110 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:36,110 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:36,110 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:36,110 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:36,111 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:57,350 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:57,350 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:57,350 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:57,350 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:57,350 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:57,350 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:01:57,350 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:06,124 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:06,125 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:06,125 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:06,125 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:06,126 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:06,126 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:06,126 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:27,353 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:27,353 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:27,353 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:27,353 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:27,353 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:27,353 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:27,353 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:36,127 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:36,127 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:36,127 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:36,127 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:36,128 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:36,128 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:36,128 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:41,179 DEBUG [http-nio-56010-exec-8][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:41,179 DEBUG [http-nio-56010-exec-8][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:41,180 DEBUG [http-nio-56010-exec-8][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:41,180 DEBUG [http-nio-56010-exec-8][HttpServletRequestWrapper.java:232] - Content-Length header = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:41,180 DEBUG [http-nio-56010-exec-8][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:41,181 DEBUG [http-nio-56010-exec-8][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:57,361 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:57,361 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:57,361 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:57,361 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:57,361 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:57,361 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:02:57,361 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:03:01,199 DEBUG [http-nio-56010-exec-8][AbstractCommand.java:1027] - Error executing HystrixCommand.run(). Proceeding to fallback logic ...
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:137)
	at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:153)
	at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:280)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:163)
	at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:157)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:272)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.lambda$execute$0(RetryableRibbonLoadBalancingHttpClient.java:109)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:180)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.executeWithRetry(RetryableRibbonLoadBalancingHttpClient.java:153)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:125)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:58)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:184)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:03:01,217 DEBUG [http-nio-56010-exec-8][AbstractCommand.java:815] - No fallback for HystrixCommand. 
java.lang.UnsupportedOperationException: No fallback available.
	at com.netflix.hystrix.HystrixCommand.getFallback(HystrixCommand.java:293)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.getFallback(AbstractRibbonCommand.java:207)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.getFallback(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$3.call(HystrixCommand.java:322)
	at com.netflix.hystrix.HystrixCommand$3.call(HystrixCommand.java:318)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:142)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$3.onError(AbstractCommand.java:1194)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnRunHookApplication$1.onError(AbstractCommand.java:1431)
	at com.netflix.hystrix.AbstractCommand$ExecutionHookApplication$1.onError(AbstractCommand.java:1362)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:03:01,222 WARN [http-nio-56010-exec-8][SendErrorFilter.java:81] - Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:191)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:166)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.hystrix.exception.HystrixRuntimeException: uaa-service failed and no fallback available.
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:822)
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:807)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:140)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnFallbackHookApplication$1.onError(AbstractCommand.java:1472)
	at com.netflix.hystrix.AbstractCommand$FallbackHookApplication$1.onError(AbstractCommand.java:1397)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:142)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$3.onError(AbstractCommand.java:1194)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnRunHookApplication$1.onError(AbstractCommand.java:1431)
	at com.netflix.hystrix.AbstractCommand$ExecutionHookApplication$1.onError(AbstractCommand.java:1362)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)
	... 100 more
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:137)
	at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:153)
	at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:280)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:163)
	at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:157)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:272)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.lambda$execute$0(RetryableRibbonLoadBalancingHttpClient.java:109)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:180)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.executeWithRetry(RetryableRibbonLoadBalancingHttpClient.java:153)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:125)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:58)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:184)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	... 157 more
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:03:06,142 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:03:06,142 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:03:06,142 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:03:06,142 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:03:06,142 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:03:06,143 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:03:06,143 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:03:27,377 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:03:27,377 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:03:27,377 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:03:27,377 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:03:27,377 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:03:27,378 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:03:27,378 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:03:36,156 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:03:36,157 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:03:36,157 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:03:36,157 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:03:36,157 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:03:36,158 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:03:36,158 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:03:57,391 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:03:57,392 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:03:57,392 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:03:57,392 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:03:57,393 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:03:57,393 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:03:57,393 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:04:06,158 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:04:06,158 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:04:06,159 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:04:06,159 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:04:06,159 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:04:06,160 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:04:06,160 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:04:27,407 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:04:27,407 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:04:27,407 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:04:27,407 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:04:27,408 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:04:27,408 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:04:27,408 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:04:36,169 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:04:36,169 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:04:36,169 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:04:36,170 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:04:36,170 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:04:36,170 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:04:36,170 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:04:57,412 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:04:57,412 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:04:57,412 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:04:57,412 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:04:57,412 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:04:57,413 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:04:57,413 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:01,591 DEBUG [http-nio-56010-exec-7][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:01,592 DEBUG [http-nio-56010-exec-7][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:01,592 DEBUG [http-nio-56010-exec-7][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:01,593 DEBUG [http-nio-56010-exec-7][HttpServletRequestWrapper.java:232] - Content-Length header = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:01,594 DEBUG [http-nio-56010-exec-7][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:01,597 DEBUG [http-nio-56010-exec-7][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:06,172 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:06,173 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:06,173 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:06,173 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:06,174 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:06,174 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:06,174 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:21,615 DEBUG [http-nio-56010-exec-7][AbstractCommand.java:1027] - Error executing HystrixCommand.run(). Proceeding to fallback logic ...
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:137)
	at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:153)
	at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:280)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:163)
	at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:157)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:272)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.lambda$execute$0(RetryableRibbonLoadBalancingHttpClient.java:109)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:180)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.executeWithRetry(RetryableRibbonLoadBalancingHttpClient.java:153)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:125)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:58)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:184)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:21,620 DEBUG [http-nio-56010-exec-7][AbstractCommand.java:815] - No fallback for HystrixCommand. 
java.lang.UnsupportedOperationException: No fallback available.
	at com.netflix.hystrix.HystrixCommand.getFallback(HystrixCommand.java:293)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.getFallback(AbstractRibbonCommand.java:207)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.getFallback(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$3.call(HystrixCommand.java:322)
	at com.netflix.hystrix.HystrixCommand$3.call(HystrixCommand.java:318)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:142)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$3.onError(AbstractCommand.java:1194)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnRunHookApplication$1.onError(AbstractCommand.java:1431)
	at com.netflix.hystrix.AbstractCommand$ExecutionHookApplication$1.onError(AbstractCommand.java:1362)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:21,622 WARN [http-nio-56010-exec-7][SendErrorFilter.java:81] - Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:191)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:166)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.hystrix.exception.HystrixRuntimeException: uaa-service failed and no fallback available.
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:822)
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:807)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:140)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnFallbackHookApplication$1.onError(AbstractCommand.java:1472)
	at com.netflix.hystrix.AbstractCommand$FallbackHookApplication$1.onError(AbstractCommand.java:1397)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:142)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$3.onError(AbstractCommand.java:1194)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnRunHookApplication$1.onError(AbstractCommand.java:1431)
	at com.netflix.hystrix.AbstractCommand$ExecutionHookApplication$1.onError(AbstractCommand.java:1362)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)
	... 100 more
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:137)
	at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:153)
	at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:280)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:163)
	at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:157)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:272)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.lambda$execute$0(RetryableRibbonLoadBalancingHttpClient.java:109)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:180)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.executeWithRetry(RetryableRibbonLoadBalancingHttpClient.java:153)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:125)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:58)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:184)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	... 157 more
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:27,426 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:27,426 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:27,426 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:27,426 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:27,426 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:27,426 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:27,426 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:36,178 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:36,179 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:36,179 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:36,179 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:36,179 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:36,180 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:36,180 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:57,441 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:57,442 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:57,442 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:57,442 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:57,442 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:57,443 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:05:57,443 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:06:06,190 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:06:06,191 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:06:06,191 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:06:06,191 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:06:06,192 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:06:06,192 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:06:06,192 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:06:27,459 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:06:27,459 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:06:27,460 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:06:27,460 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:06:27,460 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:06:27,460 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:06:27,461 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:06:36,205 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:06:36,206 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:06:36,206 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:06:36,206 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:06:36,206 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:06:36,207 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:06:36,207 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:06:57,463 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:06:57,463 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:06:57,463 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:06:57,463 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:06:57,463 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:06:57,463 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:06:57,463 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:07:06,214 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:07:06,215 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:07:06,215 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:07:06,215 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:07:06,215 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:07:06,216 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:07:06,216 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:07:27,465 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:07:27,466 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:07:27,466 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:07:27,466 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:07:27,466 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:07:27,467 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:07:27,467 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:07:36,224 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:07:36,224 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:07:36,224 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:07:36,224 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:07:36,224 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:07:36,225 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:07:36,225 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:07:57,478 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:07:57,478 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:07:57,478 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:07:57,478 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:07:57,478 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:07:57,478 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:07:57,478 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:08:06,232 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:08:06,232 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:08:06,232 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:08:06,232 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:08:06,233 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:08:06,233 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:08:06,233 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:08:27,485 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:08:27,486 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:08:27,486 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:08:27,486 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:08:27,487 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:08:27,487 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:08:27,487 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:08:36,247 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:08:36,247 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:08:36,247 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:08:36,247 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:08:36,247 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:08:36,247 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:08:36,247 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:08:57,496 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:08:57,496 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:08:57,496 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:08:57,496 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:08:57,496 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:08:57,496 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:08:57,496 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:09:06,251 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:09:06,251 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:09:06,251 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:09:06,251 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:09:06,252 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:09:06,252 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:09:06,252 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:09:27,505 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:09:27,506 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:09:27,506 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:09:27,506 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:09:27,506 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:09:27,507 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:09:27,507 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:09:36,255 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:09:36,256 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:09:36,256 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:09:36,256 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:09:36,257 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:09:36,257 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:09:36,257 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:09:57,515 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:09:57,515 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:09:57,515 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:09:57,515 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:09:57,515 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:09:57,515 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:09:57,515 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:06,266 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:06,266 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:06,266 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:06,266 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:06,266 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:06,266 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:06,266 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:27,519 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:27,519 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:27,519 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:27,519 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:27,519 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:27,519 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:27,519 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:36,269 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:36,269 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:36,270 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:36,270 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:36,270 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:36,270 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:36,271 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:56,410 DEBUG [http-nio-56010-exec-10][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:56,411 DEBUG [http-nio-56010-exec-10][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:56,411 DEBUG [http-nio-56010-exec-10][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:56,411 DEBUG [http-nio-56010-exec-10][HttpServletRequestWrapper.java:232] - Content-Length header = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:56,411 DEBUG [http-nio-56010-exec-10][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:56,413 DEBUG [http-nio-56010-exec-10][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:57,521 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:57,521 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:57,521 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:57,521 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:57,521 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:57,521 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:10:57,521 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:06,273 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:06,273 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:06,273 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:06,273 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:06,273 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:06,273 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:06,273 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:13,454 DEBUG [http-nio-56010-exec-9][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:13,455 DEBUG [http-nio-56010-exec-9][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:13,455 DEBUG [http-nio-56010-exec-9][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:13,455 DEBUG [http-nio-56010-exec-9][HttpServletRequestWrapper.java:232] - Content-Length header = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:13,455 DEBUG [http-nio-56010-exec-9][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:13,456 DEBUG [http-nio-56010-exec-9][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:13,497 DEBUG [http-nio-56010-exec-1][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:13,498 DEBUG [http-nio-56010-exec-1][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:13,498 DEBUG [http-nio-56010-exec-1][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:13,498 DEBUG [http-nio-56010-exec-1][HttpServletRequestWrapper.java:232] - Content-Length header = -1
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:13,500 DEBUG [http-nio-56010-exec-1][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:24,504 DEBUG [http-nio-56010-exec-2][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:24,505 DEBUG [http-nio-56010-exec-2][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:24,506 DEBUG [http-nio-56010-exec-2][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:24,506 DEBUG [http-nio-56010-exec-2][HttpServletRequestWrapper.java:232] - Content-Length header = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:24,507 DEBUG [http-nio-56010-exec-2][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:24,510 DEBUG [http-nio-56010-exec-2][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:24,532 DEBUG [http-nio-56010-exec-3][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:24,532 DEBUG [http-nio-56010-exec-3][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:24,533 DEBUG [http-nio-56010-exec-3][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:24,533 DEBUG [http-nio-56010-exec-3][HttpServletRequestWrapper.java:232] - Content-Length header = -1
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:24,534 DEBUG [http-nio-56010-exec-3][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:26,093 DEBUG [http-nio-56010-exec-4][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:26,094 DEBUG [http-nio-56010-exec-4][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:26,094 DEBUG [http-nio-56010-exec-4][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:26,094 DEBUG [http-nio-56010-exec-4][HttpServletRequestWrapper.java:232] - Content-Length header = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:26,094 DEBUG [http-nio-56010-exec-4][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:26,096 DEBUG [http-nio-56010-exec-4][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:26,123 DEBUG [http-nio-56010-exec-5][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:26,123 DEBUG [http-nio-56010-exec-5][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:26,124 DEBUG [http-nio-56010-exec-5][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:26,124 DEBUG [http-nio-56010-exec-5][HttpServletRequestWrapper.java:232] - Content-Length header = -1
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:26,126 DEBUG [http-nio-56010-exec-5][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:27,523 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:27,524 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:27,524 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:27,524 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:27,525 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:27,525 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:27,525 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:36,281 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:36,281 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:36,281 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:36,281 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:36,281 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:36,281 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:36,281 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:51,989 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:51,989 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:51,989 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:51,989 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:232] - Content-Length header = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:51,989 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:51,991 DEBUG [http-nio-56010-exec-6][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:52,021 DEBUG [http-nio-56010-exec-8][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:52,021 DEBUG [http-nio-56010-exec-8][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:52,021 DEBUG [http-nio-56010-exec-8][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:52,022 DEBUG [http-nio-56010-exec-8][HttpServletRequestWrapper.java:232] - Content-Length header = -1
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:52,023 DEBUG [http-nio-56010-exec-8][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:53,034 DEBUG [http-nio-56010-exec-7][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:53,034 DEBUG [http-nio-56010-exec-7][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:53,034 DEBUG [http-nio-56010-exec-7][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:53,035 DEBUG [http-nio-56010-exec-7][HttpServletRequestWrapper.java:232] - Content-Length header = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:53,035 DEBUG [http-nio-56010-exec-7][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:53,036 DEBUG [http-nio-56010-exec-7][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:53,063 DEBUG [http-nio-56010-exec-10][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:53,063 DEBUG [http-nio-56010-exec-10][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:53,064 DEBUG [http-nio-56010-exec-10][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:53,064 DEBUG [http-nio-56010-exec-10][HttpServletRequestWrapper.java:232] - Content-Length header = -1
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:53,065 DEBUG [http-nio-56010-exec-10][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:57,533 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:57,533 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:57,533 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:57,533 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:57,533 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:57,533 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:11:57,533 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:12:06,291 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:12:06,291 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:12:06,291 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:12:06,291 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:12:06,291 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:12:06,291 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:12:06,291 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:12:27,549 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:12:27,549 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:12:27,549 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:12:27,549 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:12:27,549 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:12:27,549 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:12:27,549 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:12:36,302 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:12:36,302 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:12:36,302 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:12:36,303 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:12:36,303 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:12:36,303 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:12:36,303 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:12:57,550 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:12:57,551 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:12:57,551 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:12:57,551 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:12:57,551 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:13:06,309 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:13:06,310 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:13:06,310 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:13:06,310 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:13:06,311 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:13:06,311 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:13:06,311 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:13:27,557 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:13:27,557 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:13:27,557 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:13:27,557 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:13:27,557 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:13:36,325 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:13:36,325 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:13:36,325 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:13:36,325 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:13:36,325 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:13:57,568 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:13:57,568 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:13:57,568 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:13:57,569 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:13:57,569 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:14:06,336 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:14:06,336 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:14:06,337 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:14:06,337 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:14:06,337 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:14:17,399 INFO [RMI TCP Connection(2)-127.0.0.1][SpringApplicationAdminMXBeanRegistrar.java:163] - Application shutdown requested.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:14:17,401 INFO [RMI TCP Connection(2)-127.0.0.1][ZuulFilterInitializer.java:77] - Stopping filter initializer
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:14:17,408 INFO [RMI TCP Connection(2)-127.0.0.1][NacosServiceRegistry.java:74] - De-registering from Nacos Server now...
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:14:17,411 INFO [RMI TCP Connection(2)-127.0.0.1][NacosServiceRegistry.java:93] - De-registration finished.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:14:17,412 INFO [RMI TCP Connection(2)-127.0.0.1][ExecutorConfigurationSupport.java:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:14:17,425 INFO [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - Pausing ProtocolHandler ["http-nio-56010"]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:14:17,646 INFO [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - Stopping service [Tomcat]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:14:17,648 INFO [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - Destroying Spring FrameworkServlet 'dispatcherServlet'
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:14:17,652 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [com.alibaba.nacos.naming.client.listener] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:467)
 com.alibaba.nacos.client.naming.core.EventDispatcher$Notifier.run(EventDispatcher.java:114)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:14:17,652 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [com.alibaba.nacos.naming.failover] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:14:17,653 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [com.alibaba.nacos.naming.push.receiver] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.net.DualStackPlainDatagramSocketImpl.socketReceiveOrPeekData(Native Method)
 java.net.DualStackPlainDatagramSocketImpl.receive0(DualStackPlainDatagramSocketImpl.java:124)
 java.net.AbstractPlainDatagramSocketImpl.receive(AbstractPlainDatagramSocketImpl.java:149)
 java.net.DatagramSocket.receive(DatagramSocket.java:812)
 com.alibaba.nacos.client.naming.core.PushReceiver.run(PushReceiver.java:73)
 java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
 java.util.concurrent.FutureTask.run(FutureTask.java:266)
 java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
 java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:14:17,653 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [RxIoScheduler-1 (Evictor)] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:14:17,654 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [expiringMap-0] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:14:17,655 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [PollingServerListUpdater-0] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1088)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:14:17,656 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [com.alibaba.nacos.client.naming.updater] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1088)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:14:17,656 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [DataPublisher] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:14:17,657 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [RxComputationScheduler-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1081)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:14:17,658 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [PollingServerListUpdater-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:14:17,658 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [com.alibaba.nacos.client.naming.updater] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1088)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:14:17,659 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [com.alibaba.nacos.client.naming.updater] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1088)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:14:17,660 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [com.alibaba.nacos.client.naming.updater] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:14:17,660 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [com.alibaba.nacos.client.naming.updater] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1088)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:14:17,661 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [com.alibaba.nacos.client.naming.updater] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1088)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:14:17,663 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [com.alibaba.nacos.client.naming.updater] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1088)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:14:17,664 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [com.alibaba.nacos.client.naming.updater] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1088)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:14:17,664 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [RxComputationScheduler-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:14:17,665 INFO [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - Stopping ProtocolHandler ["http-nio-56010"]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:14:17,669 INFO [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - Destroying ProtocolHandler ["http-nio-56010"]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:06,083 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$adb7510d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:06,664 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'jwt.yaml', group: 'COMMON_GROUP'
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:06,670 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'gateway-service.yaml', group: 'YIMUPAY_GROUP'
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:06,676 INFO [main][PropertySourceBootstrapConfiguration.java:98] - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@1153933106 {name='gateway-service.yaml', properties={zuul.ignoredServices=*, feign.compression.request.min-request-size=2048, zuul.sensitiveHeaders=*, feign.compression.response.enabled=true, feign.compression.request.mime-types[1]=application/xml, zuul.routes.uaa-service.stripPrefix=false, zuul.routes.operation-application.stripPrefix=false, zuul.retryable=true, ribbon.ReadTimeout=20000, zuul.routes.operation-application.path=/operation/**, zuul.routes.merchant-application.stripPrefix=false, ribbon.MaxAutoRetriesNextServer=1, hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=93000, ribbon.MaxAutoRetries=1, zuul.routes.uaa-service.path=/uaa/**, feign.compression.request.enabled=true, ribbon.ConnectTimeout=3000, zuul.routes.merchant-application.path=/merchant/**, zuul.add-host-header=true, hystrix.command.default.execution.timeout.enabled=true, ribbon.OkToRetryOnAllOperations=false, feign.hystrix.enabled=true, feign.compression.request.mime-types[2]=application/json, ribbon.nacos.enabled=true, feign.compression.request.mime-types[0]=text/xml}}, NacosPropertySource@2144067911 {name='jwt.yaml', properties={siging-key=yimu123}}]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:06,701 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:07,166 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:07,168 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:07,303 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:07,323 WARN [main][EndpointId.java:135] - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:07,481 INFO [main][GenericScope.java:294] - BeanFactory id=f40fe2a6-d37e-3783-98bf-7e7f4ae88785
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:07,607 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$adb7510d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:07,873 INFO [main][TomcatWebServer.java:90] - Tomcat initialized with port(s): 56010 (http)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:07,882 INFO [main][DirectJDKLog.java:173] - Initializing ProtocolHandler ["http-nio-56010"]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:07,888 INFO [main][DirectJDKLog.java:173] - Starting service [Tomcat]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:07,888 INFO [main][DirectJDKLog.java:173] - Starting Servlet engine: [Apache Tomcat/9.0.16]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:07,893 INFO [main][DirectJDKLog.java:173] - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\jdk\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/jdk/bin/../jre/bin/server;D:/jdk/bin/../jre/bin;D:/jdk/bin/../jre/lib/amd64;D:\VMware-workstation-full-16\bin\;D:\jdk\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\maven\apache-maven-3.6.3\bin;D:\Mysql5.6.31\mysql\bin;D:\VSCode\bin;D:\node-v10.14.2\;D:\winscp\;D:\Git\cmd;D:\projects\yimu-pay-web\shanjupay-web\node_modules\.bin;C:\Program Files (x86)\Yarn\bin\;C:\Users\PC\AppData\Local\Microsoft\WindowsApps;C:\Users\PC\AppData\Roaming\npm;C:\Users\PC\AppData\Local\Yarn\bin;D:\ecplise\eclipse;;.]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:07,998 INFO [main][DirectJDKLog.java:173] - Initializing Spring embedded WebApplicationContext
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:07,999 INFO [main][ServletWebServerApplicationContext.java:296] - Root WebApplicationContext: initialization completed in 1288 ms
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:08,074 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:08,075 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:08,078 DEBUG [main][HystrixPlugins.java:386] - Created HystrixDynamicProperties. Using class : com.netflix.hystrix.strategy.properties.archaius.HystrixDynamicPropertiesArchaius
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:08,083 INFO [main][DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4da1f38a
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:09,275 WARN [main][JwtAccessTokenConverter.java:302] - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:09,324 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:09,324 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:09,344 DEBUG [main][TraversableResolvers.java:60] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:09,345 DEBUG [main][ResourceBundleMessageInterpolator.java:89] - Loaded expression factory via original TCCL
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:09,347 DEBUG [main][TraversableResolvers.java:60] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:09,348 DEBUG [main][ConfigurationImpl.java:148] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:09,349 DEBUG [main][ConfigurationImpl.java:180] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:09,350 DEBUG [main][ConfigurationImpl.java:194] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:09,351 DEBUG [main][ValidationXmlParser.java:120] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:09,351 DEBUG [main][ResourceLoaderHelper.java:53] - Trying to load META-INF/validation.xml via user class loader
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:09,352 DEBUG [main][ResourceLoaderHelper.java:60] - Trying to load META-INF/validation.xml via TCCL
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:09,352 DEBUG [main][ResourceLoaderHelper.java:66] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:09,352 DEBUG [main][ValidationXmlParser.java:127] - No META-INF/validation.xml found. Using annotation based configuration only.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:09,358 DEBUG [main][ValidatorFactoryImpl.java:578] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:09,358 DEBUG [main][ValidatorFactoryImpl.java:579] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:09,359 DEBUG [main][ValidatorFactoryImpl.java:580] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:09,359 DEBUG [main][ValidatorFactoryImpl.java:581] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:09,359 DEBUG [main][ValidatorFactoryImpl.java:582] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:09,458 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:09,545 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:09,700 INFO [main][UserDetailsServiceAutoConfiguration.java:86] - 

Using generated security password: 822698a7-0c16-4746-88c4-6b49a8f4649b

[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:09,801 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@629b780f, org.springframework.security.web.context.SecurityContextPersistenceFilter@1af677f8, org.springframework.security.web.header.HeaderWriterFilter@53cb0bcb, org.springframework.security.web.authentication.logout.LogoutFilter@21516c88, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@3bd08435, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1b409a79, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1883871b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3af36922, org.springframework.security.web.session.SessionManagementFilter@6060146b, org.springframework.security.web.access.ExceptionTranslationFilter@730bea0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@f03ee8f]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:09,804 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1a717d79, org.springframework.security.web.context.SecurityContextPersistenceFilter@6ee37ca7, org.springframework.security.web.header.HeaderWriterFilter@4ce267cc, org.springframework.security.web.authentication.logout.LogoutFilter@4899799b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6775c0d1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@38f617f4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4cb00fa5, org.springframework.security.web.session.SessionManagementFilter@2eebce87, org.springframework.security.web.access.ExceptionTranslationFilter@51eb0e84, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@12cd129c]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:09,851 INFO [main][EndpointLinksResolver.java:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:10,385 INFO [main][ZuulFilterInitializer.java:65] - Starting filter initializer
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:10,498 INFO [main][DirectJDKLog.java:173] - Starting ProtocolHandler ["http-nio-56010"]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:10,514 INFO [main][TomcatWebServer.java:204] - Tomcat started on port(s): 56010 (http) with context path ''
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:10,523 INFO [main][NacosServiceRegistry.java:62] - nacos registry, gateway-service 192.168.76.1:56010 register finished
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:16:10,529 INFO [main][StartupInfoLogger.java:59] - Started GatewayBootstrap in 5.313 seconds (JVM running for 6.25)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,032 INFO [http-nio-56010-exec-1][DirectJDKLog.java:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,032 INFO [http-nio-56010-exec-1][FrameworkServlet.java:524] - Initializing Servlet 'dispatcherServlet'
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,040 INFO [http-nio-56010-exec-1][FrameworkServlet.java:546] - Completed initialization in 8 ms
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,106 DEBUG [http-nio-56010-exec-1][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,106 DEBUG [http-nio-56010-exec-1][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,107 DEBUG [http-nio-56010-exec-1][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,107 DEBUG [http-nio-56010-exec-1][HttpServletRequestWrapper.java:232] - Content-Length header = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,109 DEBUG [http-nio-56010-exec-1][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,201 DEBUG [http-nio-56010-exec-1][ZoneAffinityServerListFilter.java:83] - ZoneAffinity is set to false
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,201 DEBUG [http-nio-56010-exec-1][ZoneAffinityServerListFilter.java:93] - activeReqeustsPerServerThreshold: 0.6
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,202 DEBUG [http-nio-56010-exec-1][ZoneAffinityServerListFilter.java:95] - blackOutServerPercentageThreshold: 0.8
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,203 DEBUG [http-nio-56010-exec-1][ZoneAffinityServerListFilter.java:97] - availableServersThreshold: 2
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,215 INFO [http-nio-56010-exec-1][ChainedDynamicProperty.java:115] - Flipping property: uaa-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,228 DEBUG [http-nio-56010-exec-1][BaseLoadBalancer.java:338] - LoadBalancer [uaa-service]:  pingIntervalSeconds set to 30
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,229 DEBUG [http-nio-56010-exec-1][BaseLoadBalancer.java:356] - LoadBalancer [uaa-service]: maxTotalPingTime set to 2
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,229 INFO [http-nio-56010-exec-1][BaseLoadBalancer.java:197] - Client: uaa-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=uaa-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,234 INFO [http-nio-56010-exec-1][DynamicServerListLoadBalancer.java:222] - Using serverListUpdater PollingServerListUpdater
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,253 DEBUG [http-nio-56010-exec-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,254 DEBUG [http-nio-56010-exec-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,254 DEBUG [http-nio-56010-exec-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,255 DEBUG [http-nio-56010-exec-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,259 DEBUG [http-nio-56010-exec-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,261 INFO [http-nio-56010-exec-1][ChainedDynamicProperty.java:115] - Flipping property: uaa-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,261 DEBUG [http-nio-56010-exec-1][BaseLoadBalancer.java:147] - LoadBalancer [uaa-service_unknown]:  initialized
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,262 DEBUG [http-nio-56010-exec-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,263 DEBUG [http-nio-56010-exec-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,264 INFO [http-nio-56010-exec-1][DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client uaa-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=uaa-service,current list of Servers=[192.168.76.1:56020],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.76.1:56020;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@b0b5c6e
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,290 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.circuitBreaker.enabled to use NEXT property: hystrix.command.default.circuitBreaker.enabled = true
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,291 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.circuitBreaker.requestVolumeThreshold to use NEXT property: hystrix.command.default.circuitBreaker.requestVolumeThreshold = 20
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,292 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.circuitBreaker.sleepWindowInMilliseconds to use NEXT property: hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds = 5000
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,292 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.circuitBreaker.errorThresholdPercentage to use NEXT property: hystrix.command.default.circuitBreaker.errorThresholdPercentage = 50
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,293 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.circuitBreaker.forceOpen to use NEXT property: hystrix.command.default.circuitBreaker.forceOpen = false
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,294 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.circuitBreaker.forceClosed to use NEXT property: hystrix.command.default.circuitBreaker.forceClosed = false
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,295 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:90] - Flipping property: hystrix.command.uaa-service.execution.isolation.strategy to use its current value: SEMAPHORE
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,296 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:90] - Flipping property: hystrix.command.uaa-service.execution.isolation.thread.timeoutInMilliseconds to use its current value: 93000
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,296 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.execution.timeout.enabled to use NEXT property: hystrix.command.default.execution.timeout.enabled = true
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,296 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.execution.isolation.thread.interruptOnTimeout to use NEXT property: hystrix.command.default.execution.isolation.thread.interruptOnTimeout = true
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,296 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.execution.isolation.thread.interruptOnFutureCancel to use NEXT property: hystrix.command.default.execution.isolation.thread.interruptOnFutureCancel = false
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,297 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:90] - Flipping property: hystrix.command.uaa-service.execution.isolation.semaphore.maxConcurrentRequests to use its current value: 100
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,298 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.fallback.isolation.semaphore.maxConcurrentRequests to use NEXT property: hystrix.command.default.fallback.isolation.semaphore.maxConcurrentRequests = 10
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,298 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.fallback.enabled to use NEXT property: hystrix.command.default.fallback.enabled = true
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,299 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.metrics.rollingStats.timeInMilliseconds to use NEXT property: hystrix.command.default.metrics.rollingStats.timeInMilliseconds = 10000
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,299 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.metrics.rollingStats.numBuckets to use NEXT property: hystrix.command.default.metrics.rollingStats.numBuckets = 10
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,300 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.metrics.rollingPercentile.enabled to use NEXT property: hystrix.command.default.metrics.rollingPercentile.enabled = true
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,300 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.metrics.rollingPercentile.timeInMilliseconds to use NEXT property: hystrix.command.default.metrics.rollingPercentile.timeInMilliseconds = 60000
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,300 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.metrics.rollingPercentile.numBuckets to use NEXT property: hystrix.command.default.metrics.rollingPercentile.numBuckets = 6
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,300 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.metrics.rollingPercentile.bucketSize to use NEXT property: hystrix.command.default.metrics.rollingPercentile.bucketSize = 100
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,301 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.metrics.healthSnapshot.intervalInMilliseconds to use NEXT property: hystrix.command.default.metrics.healthSnapshot.intervalInMilliseconds = 500
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,301 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.requestCache.enabled to use NEXT property: hystrix.command.default.requestCache.enabled = true
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,302 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.requestLog.enabled to use NEXT property: hystrix.command.default.requestLog.enabled = true
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,353 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.threadpool.RibbonCommand.allowMaximumSizeToDivergeFromCoreSize to use NEXT property: hystrix.threadpool.default.allowMaximumSizeToDivergeFromCoreSize = false
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,354 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.threadpool.RibbonCommand.coreSize to use NEXT property: hystrix.threadpool.default.coreSize = 10
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,354 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.threadpool.RibbonCommand.maximumSize to use NEXT property: hystrix.threadpool.default.maximumSize = 10
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,354 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.threadpool.RibbonCommand.keepAliveTimeMinutes to use NEXT property: hystrix.threadpool.default.keepAliveTimeMinutes = 1
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,355 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.threadpool.RibbonCommand.maxQueueSize to use NEXT property: hystrix.threadpool.default.maxQueueSize = -1
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,355 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.threadpool.RibbonCommand.queueSizeRejectionThreshold to use NEXT property: hystrix.threadpool.default.queueSizeRejectionThreshold = 5
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,355 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.threadpool.RibbonCommand.metrics.rollingStats.timeInMilliseconds to use NEXT property: hystrix.threadpool.default.metrics.rollingStats.timeInMilliseconds = 10000
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,355 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.threadpool.RibbonCommand.metrics.rollingStats.numBuckets to use NEXT property: hystrix.threadpool.default.metrics.rollingStats.numBuckets = 10
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,390 DEBUG [http-nio-56010-exec-1][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,719 DEBUG [http-nio-56010-exec-2][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,719 DEBUG [http-nio-56010-exec-2][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,720 DEBUG [http-nio-56010-exec-2][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,720 DEBUG [http-nio-56010-exec-2][HttpServletRequestWrapper.java:232] - Content-Length header = -1
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:11,722 DEBUG [http-nio-56010-exec-2][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:12,246 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:12,246 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:12,247 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:12,247 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:12,247 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:12,248 INFO [PollingServerListUpdater-0][ChainedDynamicProperty.java:115] - Flipping property: uaa-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:12,248 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:147] - LoadBalancer [uaa-service_unknown]:  initialized
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:12,253 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:12,254 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:42,259 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:42,259 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:42,259 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:42,260 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:42,261 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:42,261 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:18:42,262 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:12,277 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:12,278 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:12,278 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:12,278 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:12,279 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:12,279 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:12,280 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,851 DEBUG [http-nio-56010-exec-3][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,851 DEBUG [http-nio-56010-exec-3][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,851 DEBUG [http-nio-56010-exec-3][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,851 DEBUG [http-nio-56010-exec-3][HttpServletRequestWrapper.java:232] - Content-Length header = -1
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,887 DEBUG [http-nio-56010-exec-3][ZoneAffinityServerListFilter.java:83] - ZoneAffinity is set to false
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,888 DEBUG [http-nio-56010-exec-3][ZoneAffinityServerListFilter.java:93] - activeReqeustsPerServerThreshold: 0.6
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,888 DEBUG [http-nio-56010-exec-3][ZoneAffinityServerListFilter.java:95] - blackOutServerPercentageThreshold: 0.8
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,889 DEBUG [http-nio-56010-exec-3][ZoneAffinityServerListFilter.java:97] - availableServersThreshold: 2
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,890 INFO [http-nio-56010-exec-3][ChainedDynamicProperty.java:115] - Flipping property: merchant-application.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,892 DEBUG [http-nio-56010-exec-3][BaseLoadBalancer.java:338] - LoadBalancer [merchant-application]:  pingIntervalSeconds set to 30
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,893 DEBUG [http-nio-56010-exec-3][BaseLoadBalancer.java:356] - LoadBalancer [merchant-application]: maxTotalPingTime set to 2
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,893 INFO [http-nio-56010-exec-3][BaseLoadBalancer.java:197] - Client: merchant-application instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=merchant-application,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,896 INFO [http-nio-56010-exec-3][DynamicServerListLoadBalancer.java:222] - Using serverListUpdater PollingServerListUpdater
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,900 DEBUG [http-nio-56010-exec-3][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,900 DEBUG [http-nio-56010-exec-3][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,900 DEBUG [http-nio-56010-exec-3][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,900 DEBUG [http-nio-56010-exec-3][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,901 DEBUG [http-nio-56010-exec-3][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,902 INFO [http-nio-56010-exec-3][ChainedDynamicProperty.java:115] - Flipping property: merchant-application.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,903 DEBUG [http-nio-56010-exec-3][BaseLoadBalancer.java:147] - LoadBalancer [merchant-application_unknown]:  initialized
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,904 DEBUG [http-nio-56010-exec-3][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,904 DEBUG [http-nio-56010-exec-3][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,905 INFO [http-nio-56010-exec-3][DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client merchant-application initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=merchant-application,current list of Servers=[192.168.76.1:57011],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.76.1:57011;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@7f291c54
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,912 DEBUG [http-nio-56010-exec-3][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.merchant-application.circuitBreaker.enabled to use NEXT property: hystrix.command.default.circuitBreaker.enabled = true
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,913 DEBUG [http-nio-56010-exec-3][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.merchant-application.circuitBreaker.requestVolumeThreshold to use NEXT property: hystrix.command.default.circuitBreaker.requestVolumeThreshold = 20
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,913 DEBUG [http-nio-56010-exec-3][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.merchant-application.circuitBreaker.sleepWindowInMilliseconds to use NEXT property: hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds = 5000
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,914 DEBUG [http-nio-56010-exec-3][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.merchant-application.circuitBreaker.errorThresholdPercentage to use NEXT property: hystrix.command.default.circuitBreaker.errorThresholdPercentage = 50
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,914 DEBUG [http-nio-56010-exec-3][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.merchant-application.circuitBreaker.forceOpen to use NEXT property: hystrix.command.default.circuitBreaker.forceOpen = false
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,914 DEBUG [http-nio-56010-exec-3][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.merchant-application.circuitBreaker.forceClosed to use NEXT property: hystrix.command.default.circuitBreaker.forceClosed = false
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,915 DEBUG [http-nio-56010-exec-3][HystrixPropertiesChainedProperty.java:90] - Flipping property: hystrix.command.merchant-application.execution.isolation.strategy to use its current value: SEMAPHORE
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,915 DEBUG [http-nio-56010-exec-3][HystrixPropertiesChainedProperty.java:90] - Flipping property: hystrix.command.merchant-application.execution.isolation.thread.timeoutInMilliseconds to use its current value: 93000
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,915 DEBUG [http-nio-56010-exec-3][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.merchant-application.execution.timeout.enabled to use NEXT property: hystrix.command.default.execution.timeout.enabled = true
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,915 DEBUG [http-nio-56010-exec-3][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.merchant-application.execution.isolation.thread.interruptOnTimeout to use NEXT property: hystrix.command.default.execution.isolation.thread.interruptOnTimeout = true
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,915 DEBUG [http-nio-56010-exec-3][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.merchant-application.execution.isolation.thread.interruptOnFutureCancel to use NEXT property: hystrix.command.default.execution.isolation.thread.interruptOnFutureCancel = false
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,916 DEBUG [http-nio-56010-exec-3][HystrixPropertiesChainedProperty.java:90] - Flipping property: hystrix.command.merchant-application.execution.isolation.semaphore.maxConcurrentRequests to use its current value: 100
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,916 DEBUG [http-nio-56010-exec-3][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.merchant-application.fallback.isolation.semaphore.maxConcurrentRequests to use NEXT property: hystrix.command.default.fallback.isolation.semaphore.maxConcurrentRequests = 10
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,916 DEBUG [http-nio-56010-exec-3][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.merchant-application.fallback.enabled to use NEXT property: hystrix.command.default.fallback.enabled = true
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,917 DEBUG [http-nio-56010-exec-3][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.merchant-application.metrics.rollingStats.timeInMilliseconds to use NEXT property: hystrix.command.default.metrics.rollingStats.timeInMilliseconds = 10000
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,917 DEBUG [http-nio-56010-exec-3][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.merchant-application.metrics.rollingStats.numBuckets to use NEXT property: hystrix.command.default.metrics.rollingStats.numBuckets = 10
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,917 DEBUG [http-nio-56010-exec-3][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.merchant-application.metrics.rollingPercentile.enabled to use NEXT property: hystrix.command.default.metrics.rollingPercentile.enabled = true
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,918 DEBUG [http-nio-56010-exec-3][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.merchant-application.metrics.rollingPercentile.timeInMilliseconds to use NEXT property: hystrix.command.default.metrics.rollingPercentile.timeInMilliseconds = 60000
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,918 DEBUG [http-nio-56010-exec-3][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.merchant-application.metrics.rollingPercentile.numBuckets to use NEXT property: hystrix.command.default.metrics.rollingPercentile.numBuckets = 6
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,918 DEBUG [http-nio-56010-exec-3][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.merchant-application.metrics.rollingPercentile.bucketSize to use NEXT property: hystrix.command.default.metrics.rollingPercentile.bucketSize = 100
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,919 DEBUG [http-nio-56010-exec-3][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.merchant-application.metrics.healthSnapshot.intervalInMilliseconds to use NEXT property: hystrix.command.default.metrics.healthSnapshot.intervalInMilliseconds = 500
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,919 DEBUG [http-nio-56010-exec-3][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.merchant-application.requestCache.enabled to use NEXT property: hystrix.command.default.requestCache.enabled = true
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,920 DEBUG [http-nio-56010-exec-3][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.merchant-application.requestLog.enabled to use NEXT property: hystrix.command.default.requestLog.enabled = true
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:28,925 DEBUG [http-nio-56010-exec-3][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:29,909 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:29,910 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:29,910 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:29,910 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:29,910 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:29,911 INFO [PollingServerListUpdater-0][ChainedDynamicProperty.java:115] - Flipping property: merchant-application.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:29,911 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:147] - LoadBalancer [merchant-application_unknown]:  initialized
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:29,914 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:29,915 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:37,968 DEBUG [http-nio-56010-exec-4][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:37,969 DEBUG [http-nio-56010-exec-4][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:37,969 DEBUG [http-nio-56010-exec-4][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:37,969 DEBUG [http-nio-56010-exec-4][HttpServletRequestWrapper.java:232] - Content-Length header = 153
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:37,969 DEBUG [http-nio-56010-exec-4][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 153
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:37,971 DEBUG [http-nio-56010-exec-4][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:42,290 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:42,290 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:42,290 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:42,290 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:42,291 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:42,291 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:42,291 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:42,549 DEBUG [http-nio-56010-exec-5][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:42,549 DEBUG [http-nio-56010-exec-5][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:42,550 DEBUG [http-nio-56010-exec-5][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:42,550 DEBUG [http-nio-56010-exec-5][HttpServletRequestWrapper.java:232] - Content-Length header = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:42,550 DEBUG [http-nio-56010-exec-5][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:42,552 DEBUG [http-nio-56010-exec-5][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:42,576 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:42,576 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:42,576 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:42,576 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:232] - Content-Length header = -1
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:42,578 DEBUG [http-nio-56010-exec-6][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:57,105 DEBUG [http-nio-56010-exec-7][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:57,105 DEBUG [http-nio-56010-exec-7][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:57,106 DEBUG [http-nio-56010-exec-7][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:57,106 DEBUG [http-nio-56010-exec-7][HttpServletRequestWrapper.java:232] - Content-Length header = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:57,106 DEBUG [http-nio-56010-exec-7][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:57,108 DEBUG [http-nio-56010-exec-7][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:57,139 DEBUG [http-nio-56010-exec-8][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:57,139 DEBUG [http-nio-56010-exec-8][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:57,139 DEBUG [http-nio-56010-exec-8][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:57,140 DEBUG [http-nio-56010-exec-8][HttpServletRequestWrapper.java:232] - Content-Length header = -1
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:57,142 DEBUG [http-nio-56010-exec-8][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:59,930 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:59,931 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:59,931 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:59,931 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:59,932 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:59,932 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:19:59,932 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:20:12,296 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:20:12,296 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:20:12,297 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:20:12,297 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:20:12,297 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:20:12,297 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:20:12,297 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:20:29,939 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:20:29,940 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:20:29,940 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:20:29,941 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:20:29,941 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:20:29,941 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:20:29,942 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:20:42,299 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:20:42,300 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:20:42,300 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:20:42,301 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:20:42,301 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:20:42,302 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:20:42,303 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:20:59,956 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:20:59,956 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:20:59,956 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:20:59,957 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:20:59,957 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:20:59,957 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:20:59,958 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:21:12,318 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:21:12,318 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:21:12,318 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:21:12,318 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:21:12,318 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:21:12,318 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:21:12,319 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:21:29,960 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:21:29,961 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:21:29,961 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:21:29,962 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:21:29,962 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:21:29,962 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:21:29,963 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:21:42,332 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:21:42,333 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:21:42,333 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:21:42,333 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:21:42,334 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:21:42,334 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:21:42,334 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:21:59,969 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:21:59,970 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:21:59,970 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:21:59,970 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:21:59,970 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:21:59,970 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:21:59,970 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:12,336 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:12,337 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:12,337 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:12,337 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:12,338 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:12,338 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:12,338 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:29,985 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:29,985 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:29,985 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:29,985 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:29,986 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:29,986 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:29,986 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:36,249 DEBUG [http-nio-56010-exec-9][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:36,249 DEBUG [http-nio-56010-exec-9][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:36,250 DEBUG [http-nio-56010-exec-9][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:36,250 DEBUG [http-nio-56010-exec-9][HttpServletRequestWrapper.java:232] - Content-Length header = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:36,250 DEBUG [http-nio-56010-exec-9][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:36,252 DEBUG [http-nio-56010-exec-9][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:36,277 DEBUG [http-nio-56010-exec-10][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:36,278 DEBUG [http-nio-56010-exec-10][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:36,278 DEBUG [http-nio-56010-exec-10][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:36,278 DEBUG [http-nio-56010-exec-10][HttpServletRequestWrapper.java:232] - Content-Length header = -1
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:36,279 DEBUG [http-nio-56010-exec-10][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:39,319 DEBUG [http-nio-56010-exec-1][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:39,320 DEBUG [http-nio-56010-exec-1][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:39,320 DEBUG [http-nio-56010-exec-1][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:39,320 DEBUG [http-nio-56010-exec-1][HttpServletRequestWrapper.java:232] - Content-Length header = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:39,321 DEBUG [http-nio-56010-exec-1][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:39,322 DEBUG [http-nio-56010-exec-1][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:39,348 DEBUG [http-nio-56010-exec-2][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:39,349 DEBUG [http-nio-56010-exec-2][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:39,349 DEBUG [http-nio-56010-exec-2][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:39,349 DEBUG [http-nio-56010-exec-2][HttpServletRequestWrapper.java:232] - Content-Length header = -1
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:39,351 DEBUG [http-nio-56010-exec-2][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:42,343 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:42,343 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:42,343 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:42,343 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:42,343 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:42,343 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:42,343 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:59,991 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:59,991 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:59,992 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:59,992 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:59,992 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:59,993 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:22:59,993 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:23:12,344 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:23:12,344 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:23:12,344 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:23:12,344 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:23:12,345 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:23:12,345 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:23:12,345 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:23:30,006 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:23:30,006 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:23:30,006 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:23:30,006 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:23:30,006 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:23:30,007 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:23:30,007 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:23:42,359 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:23:42,359 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:23:42,359 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:23:42,359 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:23:42,359 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:23:42,359 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:23:42,359 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:00,009 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:00,009 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:00,009 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:00,009 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:00,009 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:00,010 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:00,010 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:12,363 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:12,363 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:12,363 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:12,364 DEBUG [PollingServerListUpdater-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:12,364 DEBUG [PollingServerListUpdater-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:30,022 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:30,022 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for merchant-application obtained from Discovery client: [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:30,022 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:30,022 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:30,023 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:57011]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:30,023 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [merchant-application_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:30,023 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [merchant-application_unknown]:  addServer [192.168.76.1:57011]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:35,506 INFO [RMI TCP Connection(2)-127.0.0.1][SpringApplicationAdminMXBeanRegistrar.java:163] - Application shutdown requested.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:35,508 INFO [RMI TCP Connection(2)-127.0.0.1][ZuulFilterInitializer.java:77] - Stopping filter initializer
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:35,518 INFO [RMI TCP Connection(2)-127.0.0.1][NacosServiceRegistry.java:74] - De-registering from Nacos Server now...
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:35,520 INFO [RMI TCP Connection(2)-127.0.0.1][NacosServiceRegistry.java:93] - De-registration finished.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:35,522 INFO [RMI TCP Connection(2)-127.0.0.1][ExecutorConfigurationSupport.java:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:35,535 INFO [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - Pausing ProtocolHandler ["http-nio-56010"]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:35,760 INFO [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - Stopping service [Tomcat]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:35,761 INFO [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - Destroying Spring FrameworkServlet 'dispatcherServlet'
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:35,765 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [com.alibaba.nacos.naming.client.listener] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:467)
 com.alibaba.nacos.client.naming.core.EventDispatcher$Notifier.run(EventDispatcher.java:114)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:35,766 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [com.alibaba.nacos.naming.failover] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:35,767 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [com.alibaba.nacos.naming.push.receiver] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.net.DualStackPlainDatagramSocketImpl.socketReceiveOrPeekData(Native Method)
 java.net.DualStackPlainDatagramSocketImpl.receive0(DualStackPlainDatagramSocketImpl.java:124)
 java.net.AbstractPlainDatagramSocketImpl.receive(AbstractPlainDatagramSocketImpl.java:149)
 java.net.DatagramSocket.receive(DatagramSocket.java:812)
 com.alibaba.nacos.client.naming.core.PushReceiver.run(PushReceiver.java:73)
 java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
 java.util.concurrent.FutureTask.run(FutureTask.java:266)
 java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
 java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:35,767 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [RxIoScheduler-1 (Evictor)] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:35,768 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [expiringMap-0] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:35,769 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [PollingServerListUpdater-0] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1088)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:35,769 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [com.alibaba.nacos.client.naming.updater] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1088)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:35,770 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [DataPublisher] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:35,771 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [RxComputationScheduler-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:35,771 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [PollingServerListUpdater-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:35,772 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [com.alibaba.nacos.client.naming.updater] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1088)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:35,772 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [com.alibaba.nacos.client.naming.updater] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1088)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:35,773 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [com.alibaba.nacos.client.naming.updater] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1088)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:35,774 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [com.alibaba.nacos.client.naming.updater] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1088)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:35,775 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [com.alibaba.nacos.client.naming.updater] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1088)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:35,776 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [com.alibaba.nacos.client.naming.updater] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1088)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:35,777 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [com.alibaba.nacos.client.naming.updater] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:35,777 WARN [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - The web application [ROOT] appears to have started a thread named [RxComputationScheduler-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:35,779 INFO [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - Stopping ProtocolHandler ["http-nio-56010"]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:24:35,784 INFO [RMI TCP Connection(2)-127.0.0.1][DirectJDKLog.java:173] - Destroying ProtocolHandler ["http-nio-56010"]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:02,796 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$749a9afd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:03,357 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'jwt.yaml', group: 'COMMON_GROUP'
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:03,364 INFO [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'gateway-service.yaml', group: 'YIMUPAY_GROUP'
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:03,373 INFO [main][PropertySourceBootstrapConfiguration.java:98] - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@1985028494 {name='gateway-service.yaml', properties={zuul.ignoredServices=*, feign.compression.request.min-request-size=2048, zuul.sensitiveHeaders=*, feign.compression.response.enabled=true, feign.compression.request.mime-types[1]=application/xml, zuul.routes.uaa-service.stripPrefix=false, zuul.routes.operation-application.stripPrefix=false, zuul.retryable=true, ribbon.ReadTimeout=20000, zuul.routes.operation-application.path=/operation/**, zuul.routes.merchant-application.stripPrefix=false, ribbon.MaxAutoRetriesNextServer=1, hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=93000, ribbon.MaxAutoRetries=1, zuul.routes.uaa-service.path=/uaa/**, feign.compression.request.enabled=true, ribbon.ConnectTimeout=3000, zuul.routes.merchant-application.path=/merchant/**, zuul.add-host-header=true, hystrix.command.default.execution.timeout.enabled=true, ribbon.OkToRetryOnAllOperations=false, feign.hystrix.enabled=true, feign.compression.request.mime-types[2]=application/json, ribbon.nacos.enabled=true, feign.compression.request.mime-types[0]=text/xml}}, NacosPropertySource@830863979 {name='jwt.yaml', properties={siging-key=yimu123}}]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:03,400 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:03,826 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:03,827 WARN [main][EndpointId.java:135] - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:03,965 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:03,985 WARN [main][EndpointId.java:135] - Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:04,144 INFO [main][GenericScope.java:294] - BeanFactory id=f40fe2a6-d37e-3783-98bf-7e7f4ae88785
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:04,274 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$749a9afd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:04,520 INFO [main][TomcatWebServer.java:90] - Tomcat initialized with port(s): 56010 (http)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:04,529 INFO [main][DirectJDKLog.java:173] - Initializing ProtocolHandler ["http-nio-56010"]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:04,535 INFO [main][DirectJDKLog.java:173] - Starting service [Tomcat]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:04,536 INFO [main][DirectJDKLog.java:173] - Starting Servlet engine: [Apache Tomcat/9.0.16]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:04,540 INFO [main][DirectJDKLog.java:173] - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\jdk\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/jdk/bin/../jre/bin/server;D:/jdk/bin/../jre/bin;D:/jdk/bin/../jre/lib/amd64;D:\VMware-workstation-full-16\bin\;D:\jdk\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\maven\apache-maven-3.6.3\bin;D:\Mysql5.6.31\mysql\bin;D:\VSCode\bin;D:\node-v10.14.2\;D:\winscp\;D:\Git\cmd;D:\projects\yimu-pay-web\shanjupay-web\node_modules\.bin;C:\Program Files (x86)\Yarn\bin\;C:\Users\PC\AppData\Local\Microsoft\WindowsApps;C:\Users\PC\AppData\Roaming\npm;C:\Users\PC\AppData\Local\Yarn\bin;D:\ecplise\eclipse;;.]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:04,625 INFO [main][DirectJDKLog.java:173] - Initializing Spring embedded WebApplicationContext
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:04,625 INFO [main][ServletWebServerApplicationContext.java:296] - Root WebApplicationContext: initialization completed in 1215 ms
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:04,703 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:04,703 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:04,708 DEBUG [main][HystrixPlugins.java:386] - Created HystrixDynamicProperties. Using class : com.netflix.hystrix.strategy.properties.archaius.HystrixDynamicPropertiesArchaius
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:04,713 INFO [main][DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@73fbdf68
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:05,966 WARN [main][JwtAccessTokenConverter.java:302] - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:06,006 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:06,006 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:06,020 DEBUG [main][TraversableResolvers.java:60] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:06,021 DEBUG [main][ResourceBundleMessageInterpolator.java:89] - Loaded expression factory via original TCCL
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:06,024 DEBUG [main][TraversableResolvers.java:60] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:06,024 DEBUG [main][ConfigurationImpl.java:148] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:06,025 DEBUG [main][ConfigurationImpl.java:180] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:06,025 DEBUG [main][ConfigurationImpl.java:194] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:06,026 DEBUG [main][ValidationXmlParser.java:120] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:06,026 DEBUG [main][ResourceLoaderHelper.java:53] - Trying to load META-INF/validation.xml via user class loader
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:06,027 DEBUG [main][ResourceLoaderHelper.java:60] - Trying to load META-INF/validation.xml via TCCL
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:06,027 DEBUG [main][ResourceLoaderHelper.java:66] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:06,028 DEBUG [main][ValidationXmlParser.java:127] - No META-INF/validation.xml found. Using annotation based configuration only.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:06,032 DEBUG [main][ValidatorFactoryImpl.java:578] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:06,032 DEBUG [main][ValidatorFactoryImpl.java:579] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:06,032 DEBUG [main][ValidatorFactoryImpl.java:580] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:06,033 DEBUG [main][ValidatorFactoryImpl.java:581] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:06,033 DEBUG [main][ValidatorFactoryImpl.java:582] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:06,126 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:06,206 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:06,376 INFO [main][UserDetailsServiceAutoConfiguration.java:86] - 

Using generated security password: cb556c6a-7c1b-43de-a33c-11021f2079c8

[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:06,493 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@638afcaa, org.springframework.security.web.context.SecurityContextPersistenceFilter@722787b5, org.springframework.security.web.header.HeaderWriterFilter@6df11e91, org.springframework.security.web.authentication.logout.LogoutFilter@63dda940, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@72224107, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4a9b3956, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@389a5022, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@58601e7a, org.springframework.security.web.session.SessionManagementFilter@7c901203, org.springframework.security.web.access.ExceptionTranslationFilter@6735f210, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@799c8758]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:06,497 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@184afb78, org.springframework.security.web.context.SecurityContextPersistenceFilter@675ec28b, org.springframework.security.web.header.HeaderWriterFilter@43e8f1c, org.springframework.security.web.authentication.logout.LogoutFilter@46d0f89c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@11399548, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@610fbe1c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@22da200e, org.springframework.security.web.session.SessionManagementFilter@66a82a13, org.springframework.security.web.access.ExceptionTranslationFilter@64c25a62, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@76e6c070]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:06,547 INFO [main][EndpointLinksResolver.java:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:07,080 INFO [main][ZuulFilterInitializer.java:65] - Starting filter initializer
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:07,202 INFO [main][DirectJDKLog.java:173] - Starting ProtocolHandler ["http-nio-56010"]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:07,219 INFO [main][TomcatWebServer.java:204] - Tomcat started on port(s): 56010 (http) with context path ''
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:07,228 INFO [main][NacosServiceRegistry.java:62] - nacos registry, gateway-service 192.168.76.1:56010 register finished
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:27:07,233 INFO [main][StartupInfoLogger.java:59] - Started GatewayBootstrap in 5.289 seconds (JVM running for 6.19)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,487 INFO [http-nio-56010-exec-1][DirectJDKLog.java:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,487 INFO [http-nio-56010-exec-1][FrameworkServlet.java:524] - Initializing Servlet 'dispatcherServlet'
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,494 INFO [http-nio-56010-exec-1][FrameworkServlet.java:546] - Completed initialization in 6 ms
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,547 DEBUG [http-nio-56010-exec-1][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,547 DEBUG [http-nio-56010-exec-1][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,548 DEBUG [http-nio-56010-exec-1][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,548 DEBUG [http-nio-56010-exec-1][HttpServletRequestWrapper.java:232] - Content-Length header = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,551 DEBUG [http-nio-56010-exec-1][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,645 DEBUG [http-nio-56010-exec-1][ZoneAffinityServerListFilter.java:83] - ZoneAffinity is set to false
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,646 DEBUG [http-nio-56010-exec-1][ZoneAffinityServerListFilter.java:93] - activeReqeustsPerServerThreshold: 0.6
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,646 DEBUG [http-nio-56010-exec-1][ZoneAffinityServerListFilter.java:95] - blackOutServerPercentageThreshold: 0.8
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,647 DEBUG [http-nio-56010-exec-1][ZoneAffinityServerListFilter.java:97] - availableServersThreshold: 2
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,657 INFO [http-nio-56010-exec-1][ChainedDynamicProperty.java:115] - Flipping property: uaa-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,672 DEBUG [http-nio-56010-exec-1][BaseLoadBalancer.java:338] - LoadBalancer [uaa-service]:  pingIntervalSeconds set to 30
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,672 DEBUG [http-nio-56010-exec-1][BaseLoadBalancer.java:356] - LoadBalancer [uaa-service]: maxTotalPingTime set to 2
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,673 INFO [http-nio-56010-exec-1][BaseLoadBalancer.java:197] - Client: uaa-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=uaa-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,677 INFO [http-nio-56010-exec-1][DynamicServerListLoadBalancer.java:222] - Using serverListUpdater PollingServerListUpdater
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,698 DEBUG [http-nio-56010-exec-1][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,698 DEBUG [http-nio-56010-exec-1][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,699 DEBUG [http-nio-56010-exec-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,700 DEBUG [http-nio-56010-exec-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,704 DEBUG [http-nio-56010-exec-1][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,706 INFO [http-nio-56010-exec-1][ChainedDynamicProperty.java:115] - Flipping property: uaa-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,707 DEBUG [http-nio-56010-exec-1][BaseLoadBalancer.java:147] - LoadBalancer [uaa-service_unknown]:  initialized
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,708 DEBUG [http-nio-56010-exec-1][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,709 DEBUG [http-nio-56010-exec-1][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,710 INFO [http-nio-56010-exec-1][DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client uaa-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=uaa-service,current list of Servers=[192.168.76.1:56020],Load balancer stats=Zone stats: {unknown=[Zone:unknown;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.76.1:56020;	Zone:UNKNOWN;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:com.alibaba.cloud.nacos.ribbon.NacosServerList@4148277e
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,739 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.circuitBreaker.enabled to use NEXT property: hystrix.command.default.circuitBreaker.enabled = true
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,740 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.circuitBreaker.requestVolumeThreshold to use NEXT property: hystrix.command.default.circuitBreaker.requestVolumeThreshold = 20
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,741 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.circuitBreaker.sleepWindowInMilliseconds to use NEXT property: hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds = 5000
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,741 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.circuitBreaker.errorThresholdPercentage to use NEXT property: hystrix.command.default.circuitBreaker.errorThresholdPercentage = 50
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,741 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.circuitBreaker.forceOpen to use NEXT property: hystrix.command.default.circuitBreaker.forceOpen = false
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,742 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.circuitBreaker.forceClosed to use NEXT property: hystrix.command.default.circuitBreaker.forceClosed = false
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,743 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:90] - Flipping property: hystrix.command.uaa-service.execution.isolation.strategy to use its current value: SEMAPHORE
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,743 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:90] - Flipping property: hystrix.command.uaa-service.execution.isolation.thread.timeoutInMilliseconds to use its current value: 93000
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,744 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.execution.timeout.enabled to use NEXT property: hystrix.command.default.execution.timeout.enabled = true
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,744 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.execution.isolation.thread.interruptOnTimeout to use NEXT property: hystrix.command.default.execution.isolation.thread.interruptOnTimeout = true
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,744 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.execution.isolation.thread.interruptOnFutureCancel to use NEXT property: hystrix.command.default.execution.isolation.thread.interruptOnFutureCancel = false
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,745 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:90] - Flipping property: hystrix.command.uaa-service.execution.isolation.semaphore.maxConcurrentRequests to use its current value: 100
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,745 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.fallback.isolation.semaphore.maxConcurrentRequests to use NEXT property: hystrix.command.default.fallback.isolation.semaphore.maxConcurrentRequests = 10
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,746 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.fallback.enabled to use NEXT property: hystrix.command.default.fallback.enabled = true
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,746 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.metrics.rollingStats.timeInMilliseconds to use NEXT property: hystrix.command.default.metrics.rollingStats.timeInMilliseconds = 10000
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,746 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.metrics.rollingStats.numBuckets to use NEXT property: hystrix.command.default.metrics.rollingStats.numBuckets = 10
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,747 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.metrics.rollingPercentile.enabled to use NEXT property: hystrix.command.default.metrics.rollingPercentile.enabled = true
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,747 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.metrics.rollingPercentile.timeInMilliseconds to use NEXT property: hystrix.command.default.metrics.rollingPercentile.timeInMilliseconds = 60000
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,747 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.metrics.rollingPercentile.numBuckets to use NEXT property: hystrix.command.default.metrics.rollingPercentile.numBuckets = 6
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,748 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.metrics.rollingPercentile.bucketSize to use NEXT property: hystrix.command.default.metrics.rollingPercentile.bucketSize = 100
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,748 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.metrics.healthSnapshot.intervalInMilliseconds to use NEXT property: hystrix.command.default.metrics.healthSnapshot.intervalInMilliseconds = 500
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,748 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.requestCache.enabled to use NEXT property: hystrix.command.default.requestCache.enabled = true
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,749 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.command.uaa-service.requestLog.enabled to use NEXT property: hystrix.command.default.requestLog.enabled = true
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,809 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.threadpool.RibbonCommand.allowMaximumSizeToDivergeFromCoreSize to use NEXT property: hystrix.threadpool.default.allowMaximumSizeToDivergeFromCoreSize = false
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,809 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.threadpool.RibbonCommand.coreSize to use NEXT property: hystrix.threadpool.default.coreSize = 10
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,810 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.threadpool.RibbonCommand.maximumSize to use NEXT property: hystrix.threadpool.default.maximumSize = 10
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,810 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.threadpool.RibbonCommand.keepAliveTimeMinutes to use NEXT property: hystrix.threadpool.default.keepAliveTimeMinutes = 1
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,811 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.threadpool.RibbonCommand.maxQueueSize to use NEXT property: hystrix.threadpool.default.maxQueueSize = -1
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,811 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.threadpool.RibbonCommand.queueSizeRejectionThreshold to use NEXT property: hystrix.threadpool.default.queueSizeRejectionThreshold = 5
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,812 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.threadpool.RibbonCommand.metrics.rollingStats.timeInMilliseconds to use NEXT property: hystrix.threadpool.default.metrics.rollingStats.timeInMilliseconds = 10000
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,812 DEBUG [http-nio-56010-exec-1][HystrixPropertiesChainedProperty.java:93] - Flipping property: hystrix.threadpool.RibbonCommand.metrics.rollingStats.numBuckets to use NEXT property: hystrix.threadpool.default.metrics.rollingStats.numBuckets = 10
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:45,847 DEBUG [http-nio-56010-exec-1][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:46,134 DEBUG [http-nio-56010-exec-2][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:46,135 DEBUG [http-nio-56010-exec-2][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:46,135 DEBUG [http-nio-56010-exec-2][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:46,135 DEBUG [http-nio-56010-exec-2][HttpServletRequestWrapper.java:232] - Content-Length header = -1
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:46,137 DEBUG [http-nio-56010-exec-2][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:46,681 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:46,682 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:46,682 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:46,683 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:46,683 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:46,684 INFO [PollingServerListUpdater-0][ChainedDynamicProperty.java:115] - Flipping property: uaa-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:46,685 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:147] - LoadBalancer [uaa-service_unknown]:  initialized
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:46,699 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:28:46,700 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:29:16,710 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:29:16,710 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:29:16,710 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:29:16,710 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:29:16,710 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:29:46,711 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:29:46,711 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:29:46,711 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:29:46,712 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:29:46,712 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:30:16,723 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:30:16,723 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:30:16,723 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:30:16,723 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:30:16,723 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:30:46,725 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:30:46,725 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:30:46,726 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:30:46,726 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:30:46,726 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:31:16,728 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:31:16,728 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:31:16,728 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:31:16,729 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:31:16,729 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:31:46,735 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:31:46,735 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:31:46,736 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:31:46,736 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:31:46,736 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:32:16,750 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:32:16,750 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:32:16,750 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:32:16,750 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:32:16,750 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:32:46,756 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:32:46,756 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:32:46,757 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:32:46,757 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:32:46,757 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:32:59,761 DEBUG [http-nio-56010-exec-3][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:32:59,762 DEBUG [http-nio-56010-exec-3][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:32:59,762 DEBUG [http-nio-56010-exec-3][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:32:59,762 DEBUG [http-nio-56010-exec-3][HttpServletRequestWrapper.java:232] - Content-Length header = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:32:59,762 DEBUG [http-nio-56010-exec-3][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:32:59,765 DEBUG [http-nio-56010-exec-3][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:32:59,769 DEBUG [http-nio-56010-exec-3][AbstractCommand.java:1027] - Error executing HystrixCommand.run(). Proceeding to fallback logic ...
com.netflix.client.ClientException: Load balancer does not have available server for client: uaa-service
	at org.springframework.cloud.netflix.ribbon.support.AbstractLoadBalancingClient.validateServiceInstance(AbstractLoadBalancingClient.java:143)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.lambda$execute$0(RetryableRibbonLoadBalancingHttpClient.java:91)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:180)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.executeWithRetry(RetryableRibbonLoadBalancingHttpClient.java:153)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:125)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:58)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:184)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:32:59,779 DEBUG [http-nio-56010-exec-3][AbstractCommand.java:815] - No fallback for HystrixCommand. 
java.lang.UnsupportedOperationException: No fallback available.
	at com.netflix.hystrix.HystrixCommand.getFallback(HystrixCommand.java:293)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.getFallback(AbstractRibbonCommand.java:207)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.getFallback(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$3.call(HystrixCommand.java:322)
	at com.netflix.hystrix.HystrixCommand$3.call(HystrixCommand.java:318)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:142)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$3.onError(AbstractCommand.java:1194)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnRunHookApplication$1.onError(AbstractCommand.java:1431)
	at com.netflix.hystrix.AbstractCommand$ExecutionHookApplication$1.onError(AbstractCommand.java:1362)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:32:59,784 WARN [http-nio-56010-exec-3][SendErrorFilter.java:81] - Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:191)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:166)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: uaa-service
	at org.springframework.cloud.netflix.ribbon.support.AbstractLoadBalancingClient.validateServiceInstance(AbstractLoadBalancingClient.java:143)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.lambda$execute$0(RetryableRibbonLoadBalancingHttpClient.java:91)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:180)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.executeWithRetry(RetryableRibbonLoadBalancingHttpClient.java:153)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:125)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:58)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:184)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)
	... 100 more
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:33:16,772 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:33:16,772 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:33:16,772 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:33:16,772 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:33:16,773 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:33:46,778 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:33:46,778 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:33:46,778 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:33:46,779 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:33:46,779 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:34:16,785 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:34:16,786 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:34:16,787 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:34:16,787 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:34:16,788 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:34:46,791 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:34:46,791 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:34:46,791 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:34:46,792 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:34:46,792 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:34:46,792 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:34:46,792 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:16,798 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:16,799 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:16,800 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:16,800 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:16,800 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:16,801 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:16,801 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:46,809 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:46,810 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:46,810 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:46,810 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:46,811 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:46,812 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:46,812 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:55,234 DEBUG [http-nio-56010-exec-4][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:55,234 DEBUG [http-nio-56010-exec-4][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:55,234 DEBUG [http-nio-56010-exec-4][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:55,235 DEBUG [http-nio-56010-exec-4][HttpServletRequestWrapper.java:232] - Content-Length header = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:55,235 DEBUG [http-nio-56010-exec-4][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:55,236 DEBUG [http-nio-56010-exec-4][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:55,520 DEBUG [http-nio-56010-exec-5][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:55,521 DEBUG [http-nio-56010-exec-5][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:55,521 DEBUG [http-nio-56010-exec-5][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:55,521 DEBUG [http-nio-56010-exec-5][HttpServletRequestWrapper.java:232] - Content-Length header = -1
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:55,522 DEBUG [http-nio-56010-exec-5][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:55,820 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:55,820 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:55,820 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:55,820 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:232] - Content-Length header = 15
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:55,820 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 15
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:55,822 DEBUG [http-nio-56010-exec-6][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:55,842 DEBUG [http-nio-56010-exec-7][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:55,842 DEBUG [http-nio-56010-exec-7][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:55,842 DEBUG [http-nio-56010-exec-7][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:55,842 DEBUG [http-nio-56010-exec-7][HttpServletRequestWrapper.java:232] - Content-Length header = -1
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:55,844 DEBUG [http-nio-56010-exec-7][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,357 DEBUG [http-nio-56010-exec-8][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,358 DEBUG [http-nio-56010-exec-8][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,359 DEBUG [http-nio-56010-exec-8][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,359 DEBUG [http-nio-56010-exec-8][HttpServletRequestWrapper.java:232] - Content-Length header = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,359 DEBUG [http-nio-56010-exec-8][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,361 DEBUG [http-nio-56010-exec-8][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,389 DEBUG [http-nio-56010-exec-9][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,389 DEBUG [http-nio-56010-exec-9][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,390 DEBUG [http-nio-56010-exec-9][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,390 DEBUG [http-nio-56010-exec-9][HttpServletRequestWrapper.java:232] - Content-Length header = -1
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,392 DEBUG [http-nio-56010-exec-9][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,586 DEBUG [http-nio-56010-exec-10][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,586 DEBUG [http-nio-56010-exec-10][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,586 DEBUG [http-nio-56010-exec-10][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,587 DEBUG [http-nio-56010-exec-10][HttpServletRequestWrapper.java:232] - Content-Length header = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,587 DEBUG [http-nio-56010-exec-10][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,588 DEBUG [http-nio-56010-exec-10][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,592 DEBUG [http-nio-56010-exec-1][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,592 DEBUG [http-nio-56010-exec-1][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,593 DEBUG [http-nio-56010-exec-1][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,593 DEBUG [http-nio-56010-exec-1][HttpServletRequestWrapper.java:232] - Content-Length header = 15
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,593 DEBUG [http-nio-56010-exec-1][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 15
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,595 DEBUG [http-nio-56010-exec-1][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,618 DEBUG [http-nio-56010-exec-2][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,618 DEBUG [http-nio-56010-exec-2][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,619 DEBUG [http-nio-56010-exec-2][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,619 DEBUG [http-nio-56010-exec-2][HttpServletRequestWrapper.java:232] - Content-Length header = -1
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,621 DEBUG [http-nio-56010-exec-2][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,633 DEBUG [http-nio-56010-exec-3][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,634 DEBUG [http-nio-56010-exec-3][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,634 DEBUG [http-nio-56010-exec-3][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,634 DEBUG [http-nio-56010-exec-3][HttpServletRequestWrapper.java:232] - Content-Length header = -1
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,635 DEBUG [http-nio-56010-exec-3][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,716 DEBUG [http-nio-56010-exec-4][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,716 DEBUG [http-nio-56010-exec-4][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,716 DEBUG [http-nio-56010-exec-4][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,717 DEBUG [http-nio-56010-exec-4][HttpServletRequestWrapper.java:232] - Content-Length header = 15
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,717 DEBUG [http-nio-56010-exec-4][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 15
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,719 DEBUG [http-nio-56010-exec-4][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,742 DEBUG [http-nio-56010-exec-5][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,743 DEBUG [http-nio-56010-exec-5][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,743 DEBUG [http-nio-56010-exec-5][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,743 DEBUG [http-nio-56010-exec-5][HttpServletRequestWrapper.java:232] - Content-Length header = -1
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:56,745 DEBUG [http-nio-56010-exec-5][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:57,913 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:57,913 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:57,913 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:57,913 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:232] - Content-Length header = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:57,913 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:57,915 DEBUG [http-nio-56010-exec-6][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:57,943 DEBUG [http-nio-56010-exec-7][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:57,943 DEBUG [http-nio-56010-exec-7][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:57,943 DEBUG [http-nio-56010-exec-7][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:57,944 DEBUG [http-nio-56010-exec-7][HttpServletRequestWrapper.java:232] - Content-Length header = -1
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:57,945 DEBUG [http-nio-56010-exec-7][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:58,266 DEBUG [http-nio-56010-exec-8][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:58,267 DEBUG [http-nio-56010-exec-8][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:58,267 DEBUG [http-nio-56010-exec-8][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:58,267 DEBUG [http-nio-56010-exec-8][HttpServletRequestWrapper.java:232] - Content-Length header = 15
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:58,267 DEBUG [http-nio-56010-exec-8][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 15
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:58,268 DEBUG [http-nio-56010-exec-8][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:58,283 DEBUG [http-nio-56010-exec-9][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:58,284 DEBUG [http-nio-56010-exec-9][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:58,284 DEBUG [http-nio-56010-exec-9][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:58,284 DEBUG [http-nio-56010-exec-9][HttpServletRequestWrapper.java:232] - Content-Length header = -1
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:35:58,286 DEBUG [http-nio-56010-exec-9][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:11,384 DEBUG [http-nio-56010-exec-1][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:11,385 DEBUG [http-nio-56010-exec-1][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:11,385 DEBUG [http-nio-56010-exec-1][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:11,385 DEBUG [http-nio-56010-exec-1][HttpServletRequestWrapper.java:232] - Content-Length header = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:11,385 DEBUG [http-nio-56010-exec-1][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:11,386 DEBUG [http-nio-56010-exec-1][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:11,416 DEBUG [http-nio-56010-exec-2][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:11,417 DEBUG [http-nio-56010-exec-2][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:11,417 DEBUG [http-nio-56010-exec-2][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:11,417 DEBUG [http-nio-56010-exec-2][HttpServletRequestWrapper.java:232] - Content-Length header = -1
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:11,418 DEBUG [http-nio-56010-exec-2][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:11,652 DEBUG [http-nio-56010-exec-3][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:11,652 DEBUG [http-nio-56010-exec-3][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:11,653 DEBUG [http-nio-56010-exec-3][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:11,653 DEBUG [http-nio-56010-exec-3][HttpServletRequestWrapper.java:232] - Content-Length header = 15
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:11,653 DEBUG [http-nio-56010-exec-3][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 15
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:11,654 DEBUG [http-nio-56010-exec-3][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:11,665 DEBUG [http-nio-56010-exec-4][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:11,666 DEBUG [http-nio-56010-exec-4][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:11,666 DEBUG [http-nio-56010-exec-4][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:11,666 DEBUG [http-nio-56010-exec-4][HttpServletRequestWrapper.java:232] - Content-Length header = -1
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:11,667 DEBUG [http-nio-56010-exec-4][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:15,845 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:15,845 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:15,845 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:15,846 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:232] - Content-Length header = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:15,846 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:15,847 DEBUG [http-nio-56010-exec-6][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:16,816 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:16,816 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:16,816 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:16,816 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:16,816 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:16,816 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:16,816 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:35,858 DEBUG [http-nio-56010-exec-6][AbstractCommand.java:1027] - Error executing HystrixCommand.run(). Proceeding to fallback logic ...
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:137)
	at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:153)
	at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:280)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:163)
	at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:157)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:272)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.lambda$execute$0(RetryableRibbonLoadBalancingHttpClient.java:109)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:180)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.executeWithRetry(RetryableRibbonLoadBalancingHttpClient.java:153)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:125)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:58)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:184)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:35,862 DEBUG [http-nio-56010-exec-6][AbstractCommand.java:815] - No fallback for HystrixCommand. 
java.lang.UnsupportedOperationException: No fallback available.
	at com.netflix.hystrix.HystrixCommand.getFallback(HystrixCommand.java:293)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.getFallback(AbstractRibbonCommand.java:207)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.getFallback(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$3.call(HystrixCommand.java:322)
	at com.netflix.hystrix.HystrixCommand$3.call(HystrixCommand.java:318)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:142)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$3.onError(AbstractCommand.java:1194)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnRunHookApplication$1.onError(AbstractCommand.java:1431)
	at com.netflix.hystrix.AbstractCommand$ExecutionHookApplication$1.onError(AbstractCommand.java:1362)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:35,864 WARN [http-nio-56010-exec-6][SendErrorFilter.java:81] - Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:191)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:166)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.hystrix.exception.HystrixRuntimeException: uaa-service failed and no fallback available.
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:822)
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:807)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:140)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnFallbackHookApplication$1.onError(AbstractCommand.java:1472)
	at com.netflix.hystrix.AbstractCommand$FallbackHookApplication$1.onError(AbstractCommand.java:1397)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:142)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$3.onError(AbstractCommand.java:1194)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnRunHookApplication$1.onError(AbstractCommand.java:1431)
	at com.netflix.hystrix.AbstractCommand$ExecutionHookApplication$1.onError(AbstractCommand.java:1362)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)
	... 100 more
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:137)
	at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:153)
	at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:280)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:163)
	at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:157)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:272)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.lambda$execute$0(RetryableRibbonLoadBalancingHttpClient.java:109)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:180)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.executeWithRetry(RetryableRibbonLoadBalancingHttpClient.java:153)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:125)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:58)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:184)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	... 157 more
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:46,829 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:46,829 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:46,829 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:46,829 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:46,829 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:46,829 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:36:46,829 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:37:16,838 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:37:16,838 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:37:16,839 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:37:16,839 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:37:16,839 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:37:16,840 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:37:16,840 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:37:46,854 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:37:46,854 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:37:46,855 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:37:46,855 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:37:46,855 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:37:46,856 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:37:46,856 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:38:16,865 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:38:16,865 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:38:16,865 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:38:16,865 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:38:16,865 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:38:16,866 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:38:16,866 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:38:46,872 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:38:46,872 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:38:46,872 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:38:46,872 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:38:46,872 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:38:46,872 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:38:46,872 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:39:16,883 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:39:16,884 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:39:16,884 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:39:16,884 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:39:16,885 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:39:16,885 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:39:16,885 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:39:46,893 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:39:46,894 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:39:46,894 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:39:46,894 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:39:46,895 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:39:46,895 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:39:46,895 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:40:16,899 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:40:16,899 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:40:16,899 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:40:16,899 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:40:16,899 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:40:16,899 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:40:16,899 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:40:46,908 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:40:46,909 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:40:46,909 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:40:46,909 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:40:46,909 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:40:46,910 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:40:46,910 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:41:16,923 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:41:16,924 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:41:16,924 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:41:16,924 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:41:16,924 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:41:16,925 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:41:16,925 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:41:46,939 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:41:46,940 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:41:46,940 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:41:46,940 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:41:46,940 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:41:46,941 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:41:46,941 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:42:16,950 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:42:16,951 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:42:16,951 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:42:16,951 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:42:16,951 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:42:16,952 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:42:16,952 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:42:46,956 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:42:46,957 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:42:46,957 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:42:46,957 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:42:46,958 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:42:46,958 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:42:46,958 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:43:16,969 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:43:16,970 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:43:16,970 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:43:16,970 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:43:16,971 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:43:16,971 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:43:16,971 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:43:46,983 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:43:46,983 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:43:46,983 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:43:46,983 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:43:46,983 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:43:46,983 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:43:46,983 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:44:16,990 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:44:16,990 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:44:16,990 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:44:16,990 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:44:16,991 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:44:16,991 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:44:16,991 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:44:46,993 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:44:46,993 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:44:46,993 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:44:46,993 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:44:46,993 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:44:46,993 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:44:46,993 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:45:17,009 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:45:17,010 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:45:17,010 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:45:17,010 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:45:17,011 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:45:17,011 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:45:17,011 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:45:47,019 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:45:47,019 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:45:47,020 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:45:47,020 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:45:47,020 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:45:47,020 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:45:47,021 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:46:17,035 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:46:17,036 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:46:17,036 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:46:17,036 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:46:17,036 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:46:17,037 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:46:17,037 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:46:47,041 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:46:47,041 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:46:47,041 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:46:47,041 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:46:47,041 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:46:47,042 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:46:47,042 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:47:17,053 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:47:17,053 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:47:17,054 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:47:17,054 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:47:17,054 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:47:17,055 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:47:17,055 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:47:47,062 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:47:47,063 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:47:47,063 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:47:47,063 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:47:47,063 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:47:47,064 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:47:47,064 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:48:17,070 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:48:17,071 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:48:17,071 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:48:17,071 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:48:17,071 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:48:17,072 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:48:17,072 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:48:47,076 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:48:47,077 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:48:47,077 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:48:47,077 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:48:47,077 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:48:47,078 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:48:47,078 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:49:17,090 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:49:17,091 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:49:17,091 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:49:17,091 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:49:17,091 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:49:17,092 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:49:17,092 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:49:47,093 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:49:47,093 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:49:47,093 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:49:47,093 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:49:47,093 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:49:47,094 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:49:47,094 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:50:17,103 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:50:17,103 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:50:17,103 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:50:17,103 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:50:17,103 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:50:17,103 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:50:17,103 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:50:47,115 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:50:47,115 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:50:47,115 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:50:47,115 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:50:47,115 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:50:47,116 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:50:47,116 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:51:17,129 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:51:17,129 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:51:17,129 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:51:17,129 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:51:17,129 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:51:17,129 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:51:17,129 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:51:47,140 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:51:47,140 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:51:47,140 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:51:47,140 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:51:47,140 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:51:47,140 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:51:47,140 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:52:17,149 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:52:17,149 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:52:17,149 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:52:17,149 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:52:17,149 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:52:17,149 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:52:17,149 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:52:47,163 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:52:47,163 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:52:47,163 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:52:47,163 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:52:47,163 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:52:47,163 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:52:47,163 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:53:17,167 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:53:17,167 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:53:17,167 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:53:17,167 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:53:17,167 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:53:17,167 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:53:17,167 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:53:47,173 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:53:47,173 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:53:47,173 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:53:47,173 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:53:47,174 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:53:47,174 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:53:47,174 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:54:17,188 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:54:17,188 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:54:17,188 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:54:17,189 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:54:17,189 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:54:17,189 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:54:17,189 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:54:47,197 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:54:47,197 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:54:47,197 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:54:47,197 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:54:47,197 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:54:47,197 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:54:47,197 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:55:17,205 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:55:17,205 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:55:17,205 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:55:17,205 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:55:17,206 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:55:17,206 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:55:17,206 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:55:47,208 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:55:47,208 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:55:47,209 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:55:47,209 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:55:47,209 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:55:47,209 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:55:47,210 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:56:17,216 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:56:17,216 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:56:17,216 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:56:17,216 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:56:17,217 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:56:17,217 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:56:17,217 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:56:47,230 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:56:47,230 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:56:47,230 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:56:47,230 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:56:47,230 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:56:47,230 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:56:47,230 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:57:17,234 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:57:17,234 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:57:17,234 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:57:17,234 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:57:17,234 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:57:17,234 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:57:17,234 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:57:47,239 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:57:47,239 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:57:47,239 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:57:47,239 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:57:47,239 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:57:47,239 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:57:47,239 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:58:17,254 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:58:17,254 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:58:17,254 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:58:17,255 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:58:17,255 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:58:17,255 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:58:17,255 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:58:47,264 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:58:47,264 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:58:47,264 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:58:47,264 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:58:47,264 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:58:47,264 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:58:47,264 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:59:17,265 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:59:17,265 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:59:17,265 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:59:17,265 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:59:17,265 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:59:17,265 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:59:17,266 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:59:46,349 DEBUG [http-nio-56010-exec-8][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:59:46,350 DEBUG [http-nio-56010-exec-8][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:59:46,351 DEBUG [http-nio-56010-exec-8][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:59:46,351 DEBUG [http-nio-56010-exec-8][HttpServletRequestWrapper.java:232] - Content-Length header = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:59:46,351 DEBUG [http-nio-56010-exec-8][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:59:46,353 DEBUG [http-nio-56010-exec-8][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:59:47,271 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:59:47,271 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:59:47,271 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:59:47,271 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:59:47,272 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:59:47,272 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 15:59:47,272 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
