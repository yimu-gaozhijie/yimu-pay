[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:00:18,628 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:00:18,629 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:00:18,629 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:00:18,629 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:00:18,630 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:00:18,630 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:00:18,630 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:00:48,641 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:00:48,642 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:00:48,642 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:00:48,642 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:00:48,642 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:00:48,643 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:00:48,643 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:01:18,644 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:01:18,645 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:01:18,645 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:01:18,645 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:01:18,645 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:01:18,646 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:01:18,646 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:01:48,649 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:01:48,650 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:01:48,650 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:01:48,650 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:01:48,650 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:01:48,651 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:01:48,651 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:02:18,659 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:02:18,659 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:02:18,659 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:02:18,659 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:02:18,659 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:02:18,660 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:02:18,660 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:02:48,667 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:02:48,667 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:02:48,667 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:02:48,667 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:02:48,667 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:02:48,667 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:02:48,667 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:03:18,668 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:03:18,668 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:03:18,669 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:03:18,669 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:03:18,669 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:03:18,670 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:03:18,670 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:03:48,678 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:03:48,678 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:03:48,679 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:03:48,679 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:03:48,679 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:03:48,679 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:03:48,680 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:04:18,683 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:04:18,683 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:04:18,683 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:04:18,683 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:04:18,683 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:04:18,683 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:04:18,683 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:04:48,684 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:04:48,684 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:04:48,685 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:04:48,685 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:04:48,685 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:04:48,686 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:04:48,686 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:05:18,690 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:05:18,690 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:05:18,691 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:05:18,691 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:05:18,691 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:05:18,692 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:05:18,692 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:05:35,163 DEBUG [http-nio-56010-exec-2][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:05:35,164 DEBUG [http-nio-56010-exec-2][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:05:35,164 DEBUG [http-nio-56010-exec-2][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:05:35,164 DEBUG [http-nio-56010-exec-2][HttpServletRequestWrapper.java:232] - Content-Length header = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:05:35,165 DEBUG [http-nio-56010-exec-2][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:05:35,167 DEBUG [http-nio-56010-exec-2][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:05:48,697 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:05:48,698 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:05:48,698 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:05:48,698 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:05:48,698 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:05:48,699 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:05:48,699 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:05:55,177 DEBUG [http-nio-56010-exec-2][AbstractCommand.java:1027] - Error executing HystrixCommand.run(). Proceeding to fallback logic ...
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:137)
	at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:153)
	at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:280)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:163)
	at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:157)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:272)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.lambda$execute$0(RetryableRibbonLoadBalancingHttpClient.java:109)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:180)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.executeWithRetry(RetryableRibbonLoadBalancingHttpClient.java:153)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:125)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:58)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:184)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:05:55,187 DEBUG [http-nio-56010-exec-2][AbstractCommand.java:815] - No fallback for HystrixCommand. 
java.lang.UnsupportedOperationException: No fallback available.
	at com.netflix.hystrix.HystrixCommand.getFallback(HystrixCommand.java:293)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.getFallback(AbstractRibbonCommand.java:207)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.getFallback(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$3.call(HystrixCommand.java:322)
	at com.netflix.hystrix.HystrixCommand$3.call(HystrixCommand.java:318)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:142)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$3.onError(AbstractCommand.java:1194)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnRunHookApplication$1.onError(AbstractCommand.java:1431)
	at com.netflix.hystrix.AbstractCommand$ExecutionHookApplication$1.onError(AbstractCommand.java:1362)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:05:55,207 WARN [http-nio-56010-exec-2][SendErrorFilter.java:81] - Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:191)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:166)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.hystrix.exception.HystrixRuntimeException: uaa-service failed and no fallback available.
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:822)
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:807)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:140)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnFallbackHookApplication$1.onError(AbstractCommand.java:1472)
	at com.netflix.hystrix.AbstractCommand$FallbackHookApplication$1.onError(AbstractCommand.java:1397)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:142)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$3.onError(AbstractCommand.java:1194)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnRunHookApplication$1.onError(AbstractCommand.java:1431)
	at com.netflix.hystrix.AbstractCommand$ExecutionHookApplication$1.onError(AbstractCommand.java:1362)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)
	... 100 more
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:137)
	at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:153)
	at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:280)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:163)
	at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:157)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:272)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.lambda$execute$0(RetryableRibbonLoadBalancingHttpClient.java:109)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:180)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.executeWithRetry(RetryableRibbonLoadBalancingHttpClient.java:153)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:125)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:58)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:184)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	... 157 more
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:06:18,708 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:06:18,708 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:06:18,708 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:06:18,708 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:06:18,709 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:06:18,709 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:06:18,709 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:06:48,713 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:06:48,713 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:06:48,713 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:06:48,713 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:06:48,713 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:06:48,713 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:06:48,713 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:07:18,726 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:07:18,726 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:07:18,726 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:07:18,726 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:07:18,726 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:07:18,726 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:07:18,726 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:07:48,730 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:07:48,730 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:07:48,730 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:07:48,730 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:07:48,730 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:07:48,730 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:07:48,730 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:08:18,735 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:08:18,735 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:08:18,735 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:08:18,735 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:08:18,735 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:08:18,736 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:08:18,736 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:08:48,747 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:08:48,747 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:08:48,747 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:08:48,747 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:08:48,747 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:08:48,747 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:08:48,747 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:09:18,760 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:09:18,760 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:09:18,760 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:09:18,760 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:09:18,760 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:09:18,760 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:09:18,761 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:09:48,766 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:09:48,766 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:09:48,766 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:09:48,766 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:09:48,766 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:09:48,766 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:09:48,766 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:10:18,776 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:10:18,776 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:10:18,776 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:10:18,776 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:10:18,776 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:10:18,776 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:10:18,776 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:10:48,782 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:10:48,782 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:10:48,782 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:10:48,782 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:10:48,782 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:10:48,782 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:10:48,782 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:11:18,795 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:11:18,795 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:11:18,795 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:11:18,795 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:11:18,795 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:11:18,795 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:11:18,795 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:11:48,809 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:11:48,809 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:11:48,809 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:11:48,809 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:11:48,810 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:11:48,810 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:11:48,810 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:12:18,819 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:12:18,819 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:12:18,819 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:12:18,819 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:12:18,819 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:12:18,819 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:12:18,819 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:12:48,835 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:12:48,835 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:12:48,835 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:12:48,835 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:12:48,835 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:12:48,835 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:12:48,835 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:13:18,845 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:13:18,845 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:13:18,845 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:13:18,845 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:13:18,845 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:13:18,845 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:13:18,845 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:13:48,858 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:13:48,858 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:13:48,858 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:13:48,858 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:13:48,858 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:13:48,858 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:13:48,858 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:14:18,872 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:14:18,872 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:14:18,872 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:14:18,872 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:14:18,872 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:14:18,872 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:14:18,872 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:14:48,886 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:14:48,886 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:14:48,886 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:14:48,886 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:14:48,886 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:14:48,886 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:14:48,886 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:15:18,890 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:15:18,890 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:15:18,890 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:15:18,890 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:15:18,890 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:15:18,890 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:15:18,890 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:15:48,899 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:15:48,899 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:15:48,899 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:15:48,899 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:15:48,899 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:15:48,899 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:15:48,899 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:16:18,905 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:16:18,905 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:16:18,905 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:16:18,905 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:16:18,905 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:16:18,906 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:16:18,906 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:16:48,919 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:16:48,920 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:16:48,920 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:16:48,920 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:16:48,920 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:16:48,921 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:16:48,921 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:17:18,924 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:17:18,924 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:17:18,924 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:17:18,925 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:17:18,925 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:17:18,925 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:17:18,925 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:17:48,932 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:17:48,932 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:17:48,932 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:17:48,932 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:17:48,932 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:17:48,933 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:17:48,933 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:18:18,939 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:18:18,939 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:18:18,939 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:18:18,940 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:18:18,940 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:18:18,940 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:18:18,940 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:18:48,949 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:18:48,949 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:18:48,949 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:18:48,949 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:18:48,949 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:18:48,949 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:18:48,949 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:19:18,950 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:19:18,950 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:19:18,950 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:19:18,951 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:19:18,951 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:19:18,951 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:19:18,951 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:19:48,962 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:19:48,963 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:19:48,963 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:19:48,963 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:19:48,963 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:19:48,964 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:19:48,964 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:20:18,976 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:20:18,976 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:20:18,976 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:20:18,976 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:20:18,977 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:20:18,977 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:20:18,977 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:20:48,981 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:20:48,981 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:20:48,981 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:20:48,981 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:20:48,981 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:20:48,982 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:20:48,982 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:21:18,994 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:21:18,994 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:21:18,994 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:21:18,994 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:21:18,994 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:21:18,994 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:21:18,994 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:21:44,723 DEBUG [http-nio-56010-exec-3][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:21:44,723 DEBUG [http-nio-56010-exec-3][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:21:44,723 DEBUG [http-nio-56010-exec-3][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:21:44,723 DEBUG [http-nio-56010-exec-3][HttpServletRequestWrapper.java:232] - Content-Length header = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:21:44,724 DEBUG [http-nio-56010-exec-3][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:21:44,726 DEBUG [http-nio-56010-exec-3][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:21:49,006 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:21:49,006 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:21:49,006 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:21:49,007 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:21:49,007 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:21:49,007 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:21:49,007 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:22:19,024 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:22:19,024 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:22:19,024 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:22:19,024 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:22:19,024 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:22:19,024 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:22:19,024 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:22:49,040 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:22:49,041 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:22:49,041 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:22:49,041 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:22:49,041 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:22:49,042 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:22:49,042 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:23:19,048 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:23:19,048 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:23:19,048 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:23:19,048 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:23:19,048 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:23:19,048 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:23:19,048 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:23:49,049 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:23:49,050 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:23:49,050 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:23:49,050 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:23:49,051 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:23:49,051 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:23:49,051 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:23:52,082 DEBUG [http-nio-56010-exec-4][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:23:52,083 DEBUG [http-nio-56010-exec-4][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:23:52,083 DEBUG [http-nio-56010-exec-4][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:23:52,083 DEBUG [http-nio-56010-exec-4][HttpServletRequestWrapper.java:232] - Content-Length header = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:23:52,084 DEBUG [http-nio-56010-exec-4][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:23:52,086 DEBUG [http-nio-56010-exec-4][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:24:12,098 DEBUG [http-nio-56010-exec-4][AbstractCommand.java:1027] - Error executing HystrixCommand.run(). Proceeding to fallback logic ...
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:137)
	at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:153)
	at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:280)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:163)
	at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:157)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:272)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.lambda$execute$0(RetryableRibbonLoadBalancingHttpClient.java:109)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:180)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.executeWithRetry(RetryableRibbonLoadBalancingHttpClient.java:153)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:125)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:58)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:184)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:24:12,103 DEBUG [http-nio-56010-exec-4][AbstractCommand.java:815] - No fallback for HystrixCommand. 
java.lang.UnsupportedOperationException: No fallback available.
	at com.netflix.hystrix.HystrixCommand.getFallback(HystrixCommand.java:293)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.getFallback(AbstractRibbonCommand.java:207)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.getFallback(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$3.call(HystrixCommand.java:322)
	at com.netflix.hystrix.HystrixCommand$3.call(HystrixCommand.java:318)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:142)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$3.onError(AbstractCommand.java:1194)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnRunHookApplication$1.onError(AbstractCommand.java:1431)
	at com.netflix.hystrix.AbstractCommand$ExecutionHookApplication$1.onError(AbstractCommand.java:1362)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:24:12,105 WARN [http-nio-56010-exec-4][SendErrorFilter.java:81] - Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:191)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:166)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.hystrix.exception.HystrixRuntimeException: uaa-service failed and no fallback available.
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:822)
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:807)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:140)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnFallbackHookApplication$1.onError(AbstractCommand.java:1472)
	at com.netflix.hystrix.AbstractCommand$FallbackHookApplication$1.onError(AbstractCommand.java:1397)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:142)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$3.onError(AbstractCommand.java:1194)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnRunHookApplication$1.onError(AbstractCommand.java:1431)
	at com.netflix.hystrix.AbstractCommand$ExecutionHookApplication$1.onError(AbstractCommand.java:1362)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)
	... 100 more
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:137)
	at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:153)
	at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:280)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:163)
	at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:157)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:272)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.lambda$execute$0(RetryableRibbonLoadBalancingHttpClient.java:109)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:180)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.executeWithRetry(RetryableRibbonLoadBalancingHttpClient.java:153)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:125)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:58)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:184)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	... 157 more
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:24:19,067 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:24:19,067 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:24:19,067 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:24:19,067 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:24:19,067 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:24:19,067 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:24:19,067 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:24:49,075 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:24:49,075 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:24:49,075 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:24:49,075 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:24:49,075 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:24:49,075 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:24:49,075 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:25:19,089 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:25:19,089 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:25:19,089 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:25:19,089 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:25:19,089 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:25:19,089 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:25:19,089 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:25:49,097 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:25:49,097 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:25:49,098 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:25:49,098 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:25:49,098 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:25:49,098 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:25:49,099 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:25:51,990 DEBUG [http-nio-56010-exec-5][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:25:51,990 DEBUG [http-nio-56010-exec-5][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:25:51,990 DEBUG [http-nio-56010-exec-5][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:25:51,991 DEBUG [http-nio-56010-exec-5][HttpServletRequestWrapper.java:232] - Content-Length header = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:25:51,991 DEBUG [http-nio-56010-exec-5][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:25:51,992 DEBUG [http-nio-56010-exec-5][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:26:19,099 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:26:19,099 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:26:19,100 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:26:19,100 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:26:19,100 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:26:19,100 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:26:19,100 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:26:49,110 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:26:49,110 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:26:49,110 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:26:49,110 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:26:49,110 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:26:49,110 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:26:49,110 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:27:19,124 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:27:19,124 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:27:19,124 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:27:19,124 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:27:19,124 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:27:19,125 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:27:19,125 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:27:49,129 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:27:49,130 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:27:49,130 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:27:49,130 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:27:49,131 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:27:49,131 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:27:49,131 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:27:49,672 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:27:49,672 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:27:49,672 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:27:49,673 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:232] - Content-Length header = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:27:49,673 DEBUG [http-nio-56010-exec-6][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:27:49,674 DEBUG [http-nio-56010-exec-6][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:28:19,134 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:28:19,135 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:28:19,135 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:28:19,136 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:28:19,136 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:28:19,136 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:28:19,136 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:28:38,071 DEBUG [http-nio-56010-exec-7][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:28:38,072 DEBUG [http-nio-56010-exec-7][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:28:38,072 DEBUG [http-nio-56010-exec-7][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:28:38,073 DEBUG [http-nio-56010-exec-7][HttpServletRequestWrapper.java:232] - Content-Length header = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:28:38,073 DEBUG [http-nio-56010-exec-7][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:28:38,075 DEBUG [http-nio-56010-exec-7][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:28:49,142 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:28:49,142 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:28:49,142 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:28:49,142 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:28:49,142 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:28:49,142 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:28:49,142 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:28:58,097 DEBUG [http-nio-56010-exec-7][AbstractCommand.java:1027] - Error executing HystrixCommand.run(). Proceeding to fallback logic ...
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:137)
	at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:153)
	at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:280)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:163)
	at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:157)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:272)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.lambda$execute$0(RetryableRibbonLoadBalancingHttpClient.java:109)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:180)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.executeWithRetry(RetryableRibbonLoadBalancingHttpClient.java:153)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:125)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:58)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:184)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:28:58,106 DEBUG [http-nio-56010-exec-7][AbstractCommand.java:815] - No fallback for HystrixCommand. 
java.lang.UnsupportedOperationException: No fallback available.
	at com.netflix.hystrix.HystrixCommand.getFallback(HystrixCommand.java:293)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.getFallback(AbstractRibbonCommand.java:207)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.getFallback(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$3.call(HystrixCommand.java:322)
	at com.netflix.hystrix.HystrixCommand$3.call(HystrixCommand.java:318)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:142)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$3.onError(AbstractCommand.java:1194)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnRunHookApplication$1.onError(AbstractCommand.java:1431)
	at com.netflix.hystrix.AbstractCommand$ExecutionHookApplication$1.onError(AbstractCommand.java:1362)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:28:58,112 WARN [http-nio-56010-exec-7][SendErrorFilter.java:81] - Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:191)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:166)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.hystrix.exception.HystrixRuntimeException: uaa-service failed and no fallback available.
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:822)
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:807)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:140)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnFallbackHookApplication$1.onError(AbstractCommand.java:1472)
	at com.netflix.hystrix.AbstractCommand$FallbackHookApplication$1.onError(AbstractCommand.java:1397)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:142)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$3.onError(AbstractCommand.java:1194)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnRunHookApplication$1.onError(AbstractCommand.java:1431)
	at com.netflix.hystrix.AbstractCommand$ExecutionHookApplication$1.onError(AbstractCommand.java:1362)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)
	... 100 more
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:137)
	at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:153)
	at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:280)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:163)
	at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:157)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:272)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.lambda$execute$0(RetryableRibbonLoadBalancingHttpClient.java:109)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:180)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.executeWithRetry(RetryableRibbonLoadBalancingHttpClient.java:153)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:125)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:58)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:184)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	... 157 more
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:29:19,149 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:29:19,149 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:29:19,149 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:29:19,150 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:29:19,150 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:29:19,150 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:29:19,150 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:29:49,165 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:29:49,165 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:29:49,166 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:29:49,166 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:29:49,166 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:29:49,166 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:29:49,166 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:30:19,169 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:30:19,169 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:30:19,169 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:30:19,169 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:30:19,169 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:30:19,169 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:30:19,169 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:30:49,176 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:30:49,177 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:30:49,177 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:30:49,177 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:30:49,177 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:30:49,177 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:30:49,178 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:31:19,189 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:31:19,189 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:31:19,189 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:31:19,189 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:31:19,189 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:31:19,189 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:31:19,189 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:31:49,193 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:31:49,193 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:31:49,193 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:31:49,193 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:31:49,193 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:31:49,193 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:31:49,194 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:32:19,209 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:32:19,209 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:32:19,209 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:32:19,209 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:32:19,209 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:32:19,209 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:32:19,209 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:32:49,212 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:32:49,212 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:32:49,212 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:32:49,213 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:32:49,213 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:32:49,213 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:32:49,213 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:33:19,214 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:33:19,214 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:33:19,215 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:33:19,215 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:33:19,215 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:33:19,215 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:33:19,216 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:33:49,228 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:33:49,228 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:33:49,228 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:33:49,228 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:33:49,228 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:34:19,234 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:34:19,234 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:34:19,235 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:34:19,235 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:34:19,235 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:34:49,236 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:34:49,236 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:34:49,237 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:34:49,237 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:34:49,237 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:35:19,246 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:35:19,246 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:35:19,247 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:35:19,247 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:35:19,247 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:35:49,261 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:35:49,261 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:35:49,261 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:35:49,261 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:35:49,261 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:35:53,041 WARN [com.alibaba.nacos.client.naming.updater][HostReactor.java:110] - out of date data received, old-t: 1674552943030, new-t: 0
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:36:19,269 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:36:19,269 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: []
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:36:19,269 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:36:19,269 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:36:19,269 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:36:49,273 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:36:49,273 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:36:49,273 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:36:49,273 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:36:49,273 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:36:49,273 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:36:49,274 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:37:19,282 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:37:19,282 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:37:19,282 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:37:19,282 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:37:19,282 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:37:19,282 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:37:19,283 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:37:49,297 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:37:49,297 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:37:49,297 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:37:49,297 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:37:49,297 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:37:49,297 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:37:49,298 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:38:19,300 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:38:19,300 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:38:19,300 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:38:19,300 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:38:19,300 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:38:19,300 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:38:19,301 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:38:49,303 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:38:49,303 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:38:49,303 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:38:49,303 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:38:49,303 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:38:49,303 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:38:49,304 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:39:19,315 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:39:19,315 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:39:19,316 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:39:19,316 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:39:19,316 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:39:19,316 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:39:19,316 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:39:49,325 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:39:49,325 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:39:49,325 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:39:49,326 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:39:49,326 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:39:49,326 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:39:49,326 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:40:19,333 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:40:19,333 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:40:19,333 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:40:19,333 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:40:19,334 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:40:19,334 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:40:19,334 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:40:49,335 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:40:49,335 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:40:49,335 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:40:49,335 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:40:49,335 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:40:49,335 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:40:49,335 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:41:19,343 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:41:19,343 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:41:19,343 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:41:19,343 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:41:19,343 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:41:19,344 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:41:19,344 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:41:49,357 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:41:49,357 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:41:49,357 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:41:49,358 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:41:49,358 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:41:49,358 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:41:49,358 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:42:19,373 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:42:19,373 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:42:19,373 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:42:19,373 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:42:19,373 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:42:19,373 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:42:19,373 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:42:49,383 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:42:49,383 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:42:49,383 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:42:49,383 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:42:49,383 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:42:49,383 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:42:49,383 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:43:19,391 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:43:19,391 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:43:19,391 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:43:19,391 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:43:19,391 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:43:19,391 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:43:19,391 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:43:35,006 DEBUG [http-nio-56010-exec-8][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:43:35,006 DEBUG [http-nio-56010-exec-8][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:43:35,007 DEBUG [http-nio-56010-exec-8][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:43:35,007 DEBUG [http-nio-56010-exec-8][HttpServletRequestWrapper.java:232] - Content-Length header = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:43:35,007 DEBUG [http-nio-56010-exec-8][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:43:35,009 DEBUG [http-nio-56010-exec-8][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:43:49,393 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:43:49,394 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:43:49,394 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:43:49,394 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:43:49,394 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:43:49,395 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:43:49,395 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:43:55,015 DEBUG [http-nio-56010-exec-8][AbstractCommand.java:1027] - Error executing HystrixCommand.run(). Proceeding to fallback logic ...
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:137)
	at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:153)
	at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:280)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:163)
	at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:157)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:272)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.lambda$execute$0(RetryableRibbonLoadBalancingHttpClient.java:109)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:180)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.executeWithRetry(RetryableRibbonLoadBalancingHttpClient.java:153)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:125)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:58)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:184)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:43:55,020 DEBUG [http-nio-56010-exec-8][AbstractCommand.java:815] - No fallback for HystrixCommand. 
java.lang.UnsupportedOperationException: No fallback available.
	at com.netflix.hystrix.HystrixCommand.getFallback(HystrixCommand.java:293)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.getFallback(AbstractRibbonCommand.java:207)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.getFallback(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$3.call(HystrixCommand.java:322)
	at com.netflix.hystrix.HystrixCommand$3.call(HystrixCommand.java:318)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:142)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$3.onError(AbstractCommand.java:1194)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnRunHookApplication$1.onError(AbstractCommand.java:1431)
	at com.netflix.hystrix.AbstractCommand$ExecutionHookApplication$1.onError(AbstractCommand.java:1362)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:43:55,022 WARN [http-nio-56010-exec-8][SendErrorFilter.java:81] - Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:191)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:166)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.hystrix.exception.HystrixRuntimeException: uaa-service failed and no fallback available.
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:822)
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:807)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:140)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnFallbackHookApplication$1.onError(AbstractCommand.java:1472)
	at com.netflix.hystrix.AbstractCommand$FallbackHookApplication$1.onError(AbstractCommand.java:1397)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:142)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$3.onError(AbstractCommand.java:1194)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnRunHookApplication$1.onError(AbstractCommand.java:1431)
	at com.netflix.hystrix.AbstractCommand$ExecutionHookApplication$1.onError(AbstractCommand.java:1362)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)
	... 100 more
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:137)
	at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:153)
	at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:280)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:163)
	at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:157)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:272)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.lambda$execute$0(RetryableRibbonLoadBalancingHttpClient.java:109)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:180)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.executeWithRetry(RetryableRibbonLoadBalancingHttpClient.java:153)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:125)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:58)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:184)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	... 157 more
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:44:19,409 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:44:19,409 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:44:19,409 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:44:19,409 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:44:19,409 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:44:19,409 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:44:19,409 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:44:49,425 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:44:49,425 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:44:49,425 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:44:49,425 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:44:49,425 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:44:49,425 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:44:49,425 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:45:19,427 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:45:19,427 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:45:19,427 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:45:19,427 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:45:19,427 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:45:19,427 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:45:19,427 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:45:49,437 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:45:49,437 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:45:49,437 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:45:49,438 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:45:49,438 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:45:49,438 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:45:49,438 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:46:19,450 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:46:19,451 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:46:19,451 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:46:19,451 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:46:19,451 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:46:19,452 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:46:19,452 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:46:49,454 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:46:49,454 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:46:49,454 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:46:49,454 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:46:49,454 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:46:49,454 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:46:49,455 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:47:19,469 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:47:19,469 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:47:19,469 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:47:19,469 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:47:19,469 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:47:19,469 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:47:19,469 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:47:49,474 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:47:49,474 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:47:49,474 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:47:49,475 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:47:49,475 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:47:49,475 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:47:49,475 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:48:19,485 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:48:19,485 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:48:19,486 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:48:19,486 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:48:19,486 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:48:19,486 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:48:19,487 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:48:49,495 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:48:49,495 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:48:49,495 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:48:49,495 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:48:49,495 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:48:49,495 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:48:49,495 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:49:19,505 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:49:19,505 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:49:19,505 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:49:19,506 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:49:19,506 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:49:19,506 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:49:19,506 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:49:49,511 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:49:49,511 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:49:49,511 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:49:49,513 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:49:49,513 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:49:49,513 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:49:49,513 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:50:19,526 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:50:19,526 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:50:19,526 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:50:19,526 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:50:19,526 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:50:19,526 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:50:19,526 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:50:49,537 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:50:49,538 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:50:49,538 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:50:49,538 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:50:49,538 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:50:49,539 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:50:49,539 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:51:19,546 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:51:19,546 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:51:19,546 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:51:19,546 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:51:19,547 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:51:19,547 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:51:19,547 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:51:49,550 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:51:49,550 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:51:49,550 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:51:49,550 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:51:49,550 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:51:49,550 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:51:49,551 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:52:19,563 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:52:19,563 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:52:19,563 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:52:19,564 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:52:19,564 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:52:19,564 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:52:19,564 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:52:49,567 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:52:49,567 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:52:49,567 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:52:49,567 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:52:49,567 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:52:49,567 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:52:49,567 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:53:19,575 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:53:19,575 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:53:19,575 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:53:19,575 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:53:19,575 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:53:19,576 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:53:19,576 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:53:49,583 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:53:49,583 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:53:49,583 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:53:49,583 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:53:49,583 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:53:49,584 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:53:49,584 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:54:19,593 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:54:19,593 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:54:19,593 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:54:19,593 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:54:19,593 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:54:19,593 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:54:19,593 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:54:49,600 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:54:49,600 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:54:49,600 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:54:49,600 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:54:49,600 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:54:49,600 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:54:49,601 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:55:19,605 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:55:19,605 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:55:19,606 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:55:19,606 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:55:19,606 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:55:19,606 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:55:19,607 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:55:49,612 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:55:49,612 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:55:49,612 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:55:49,612 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:55:49,612 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:55:49,612 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:55:49,612 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:56:10,047 DEBUG [http-nio-56010-exec-10][HttpServletRequestWrapper.java:229] - Path = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:56:10,048 DEBUG [http-nio-56010-exec-10][HttpServletRequestWrapper.java:230] - Transfer-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:56:10,048 DEBUG [http-nio-56010-exec-10][HttpServletRequestWrapper.java:231] - Content-Encoding = null
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:56:10,048 DEBUG [http-nio-56010-exec-10][HttpServletRequestWrapper.java:232] - Content-Length header = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:56:10,048 DEBUG [http-nio-56010-exec-10][HttpServletRequestWrapper.java:166] - Length of contentData byte array = 173
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:56:10,050 DEBUG [http-nio-56010-exec-10][ZoneAwareLoadBalancer.java:112] - Zone aware logic disabled or there is only one zone
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:56:19,624 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:56:19,624 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:56:19,624 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:56:19,624 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:56:19,624 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:56:19,624 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:56:19,625 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:56:30,066 DEBUG [http-nio-56010-exec-10][AbstractCommand.java:1027] - Error executing HystrixCommand.run(). Proceeding to fallback logic ...
java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:137)
	at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:153)
	at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:280)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:163)
	at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:157)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:272)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.lambda$execute$0(RetryableRibbonLoadBalancingHttpClient.java:109)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:180)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.executeWithRetry(RetryableRibbonLoadBalancingHttpClient.java:153)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:125)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:58)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:184)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:56:30,069 DEBUG [http-nio-56010-exec-10][AbstractCommand.java:815] - No fallback for HystrixCommand. 
java.lang.UnsupportedOperationException: No fallback available.
	at com.netflix.hystrix.HystrixCommand.getFallback(HystrixCommand.java:293)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.getFallback(AbstractRibbonCommand.java:207)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.getFallback(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$3.call(HystrixCommand.java:322)
	at com.netflix.hystrix.HystrixCommand$3.call(HystrixCommand.java:318)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:142)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$3.onError(AbstractCommand.java:1194)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnRunHookApplication$1.onError(AbstractCommand.java:1431)
	at com.netflix.hystrix.AbstractCommand$ExecutionHookApplication$1.onError(AbstractCommand.java:1362)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:56:30,071 WARN [http-nio-56010-exec-10][SendErrorFilter.java:81] - Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:191)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:166)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.netflix.hystrix.exception.HystrixRuntimeException: uaa-service failed and no fallback available.
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:822)
	at com.netflix.hystrix.AbstractCommand$22.call(AbstractCommand.java:807)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:140)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnFallbackHookApplication$1.onError(AbstractCommand.java:1472)
	at com.netflix.hystrix.AbstractCommand$FallbackHookApplication$1.onError(AbstractCommand.java:1397)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:142)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$3.onError(AbstractCommand.java:1194)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at com.netflix.hystrix.AbstractCommand$DeprecatedOnRunHookApplication$1.onError(AbstractCommand.java:1431)
	at com.netflix.hystrix.AbstractCommand$ExecutionHookApplication$1.onError(AbstractCommand.java:1362)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.observers.Subscribers$5.onError(Subscribers.java:230)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:44)
	at rx.internal.operators.OnSubscribeThrow.call(OnSubscribeThrow.java:28)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)
	... 100 more
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:137)
	at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:153)
	at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:280)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:163)
	at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:157)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:272)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.lambda$execute$0(RetryableRibbonLoadBalancingHttpClient.java:109)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:287)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:180)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.executeWithRetry(RetryableRibbonLoadBalancingHttpClient.java:153)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:125)
	at org.springframework.cloud.netflix.ribbon.apache.RetryableRibbonLoadBalancingHttpClient.execute(RetryableRibbonLoadBalancingHttpClient.java:58)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:184)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	... 157 more
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:56:49,631 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:56:49,631 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:56:49,631 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:56:49,632 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:56:49,632 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:56:49,632 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:56:49,632 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:57:19,639 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:57:19,639 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:57:19,639 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:57:19,640 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:57:19,640 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:57:19,640 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:57:19,640 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:57:49,646 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:57:49,646 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:57:49,646 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:57:49,646 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:57:49,647 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:57:49,647 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:57:49,647 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:58:19,652 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:58:19,652 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:58:19,652 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:58:19,652 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:58:19,652 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:58:19,652 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:58:19,652 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:58:49,668 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:58:49,668 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:58:49,669 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:58:49,669 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:58:49,669 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:58:49,670 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:58:49,670 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:59:19,673 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:59:19,673 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:59:19,673 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:59:19,673 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:59:19,673 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:59:19,673 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:59:19,673 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:59:49,679 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:241] - List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:59:49,679 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:246] - Filtered List of Servers for uaa-service obtained from Discovery client: [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:59:49,679 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:59:49,680 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service]:  addServer [192.168.76.1:56020]
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:59:49,680 DEBUG [PollingServerListUpdater-0][DynamicServerListLoadBalancer.java:179] - Setting server list for zones: {unknown=[192.168.76.1:56020]}
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:59:49,680 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:491] - LoadBalancer [uaa-service_unknown]: clearing server list (SET op)
[yimupay-gateway-service][${env:SERVER_PORT}] 2023-01-24 17:59:49,680 DEBUG [PollingServerListUpdater-0][BaseLoadBalancer.java:507] - LoadBalancer [uaa-service_unknown]:  addServer [192.168.76.1:56020]
